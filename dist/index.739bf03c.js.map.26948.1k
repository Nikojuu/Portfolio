{"mappings":"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;AAAA,wBAAA;AACA;AAAA,wBAAA;AACA;AAAA,wBAAA;AACA;AAAA,wBAAA;AACA;AAAA,wBAAA;AACA;AAAA,wBAAA;AACA;AAAA,wBAAA;AACA;AAAA,wBAAA;AACA;AAAA,wBAAA;AACA;AAAA,wBAAA;AACA;AAAA,wBAAA;AACA;AAAA,wBAAA;AACA;AAAA,wBAAA;AACA;AAAA,wBAAA;AACA;AAAA,wBAAA;AACA;AAAA,wBAAA;AACA;AAAA,wBAAA;AACA;AAAA,wBAAA;AACA;AAAA,wBAAA;AACA;AAAA,wBAAA;AACA;AAAA,wBAAA;AACA;AAAA,wBAAA;AACA;AAAA,wBAAA;AACA;AAAA,wBAAA;AACA;AAAA,wBAAA;AACA;AAAA,wBAAA;AACA;AAAA,wBAAA;AACA;AAAA,wBAAA;AACA;AAAA,wBAAA;AACA;AAAA,wBAAA;AACA;AAAA,wBAAA;AACA;AAAA,wBAAA;AACA;AAAA,wBAAA;AACA;AAAA,wBAAA;AACA;AAAA,wBAAA;AACA;AAAA,wBAAA;AACA;AAAA,wBAAA;AACA;AAAA,wBAAA;AACA;AAAA,wBAAA;AACA;AAAA,wBAAA;AACA;AAAA,wBAAA;AACA;AAAA,wBAAA;AACA;AAAA,wBAAA;AACA;AAAA,wBAAA;AACA;AAAA,wBAAA;AACA;AAAA,wBAAA;AACA;AAAA,wBAAA;AACA;AAAA,wBAAA;AACA;AAAA,wBAAA;AACA;AAAA,wBAAA;AACA;AAAA,wBAAA;AACA;AAAA,wBAAA;AACA;AAAA,wBAAA;AACA;AAAA,wBAAA;AACA;AAAA,wBAAA;AACA;AAAA,wBAAA;AACA;AAAA,wBAAA;AACA;AAAA,wBAAA;AACA;AAAA,wBAAA;AACA;AAAA,wBAAA;AACA;AAAA,wBAAA;AACA;AAAA,wBAAA;AACA;AAAA,wBAAA;AACA;AAAA,wBAAA;AACA;AAAA,wBAAA;AACA;AAAA,wBAAA;AACA;AAAA,wBAAA;AACA;AAAA,wBAAA;AACA;AAAA,wBAAA;AACA;AAAA,wBAAA;AACA;AAAA,wBAAA;AACA,wBAAA;AACA,wBAAA;AACA;AAAA,wBAAA;AACA;AAAA,wBAAA;AACA;AAAA,wBAAA;AACA;AAAA,wBAAA;AACA;AAAA,wBAAA;AACA;AAAA,wBAAA;AACA;AAAA,wBAAA;AACA;AAAA,wBAAA;AACA;AAAA,wBAAA;AACA;AAAA,wBAAA;AACA;AAAA,wBAAA;AACA;AAAA,wBAAA;AACA;AAAA,wBAAA;AACA;AAAA,wBAAA;AACA;AAAA,wBAAA;AACA;AAAA,wBAAA;AACA;AAAA,wBAAA;AACA;AAAA,wBAAA;AACA;AAAA,wBAAA;AACA;AAAA,wBAAA;AACA;AAAA,wBAAA;AACA;AAAA,wBAAA;AACA;AAAA,wBAAA;AACA;AAAA,wBAAA;AACA;AAAA,wBAAA;AACA;AAAA,wBAAA;AACA;AAAA,wBAAA;AACA;AAAA,wBAAA;AACA;AAAA,wBAAA;AACA;AAAA,wBAAA;AACA;AAAA,wBAAA;AACA;AAAA,wBAAA;AACA;AAAA,wBAAA;AACA;AAAA,wBAAA;AACA;AAAA,wBAAA;AACA;AAAA,wBAAA;AACA;AAAA,wBAAA;AACA;AAAA,wBAAA;AACA;AAAA,wBAAA;AACA;AAAA,wBAAA;AACA;AAAA,wBAAA;AACA;AAAA,wBAAA;AACA;AAAA,wBAAA;AACA;AAAA,wBAAA;AACA;AAAA,wBAAA;AACA;AAAA,wBAAA;AACA;AAAA,wBAAA;AACA;AAAA,wBAAA;AACA;AAAA,wBAAA;AACA;AAAA,wBAAA;AACA;AAAA,wBAAA;AACA;AAAA,wBAAA;AACA;AAAA,wBAAA;AACA;AAAA,wBAAA;AACA;AAAA,wBAAA;AACA;AAAA,wBAAA;AACA;AAAA,wBAAA;AACA;AAAA,wBAAA;AACA;AAAA,wBAAA;AACA;AAAA,wBAAA;AACA;AAAA,wBAAA;AACA;AAAA,wBAAA;AACA;AAAA,wBAAA;AACA;AAAA,wBAAA;AACA;AAAA,wBAAA;AACA;AAAA,wBAAA;AACA;AAAA,wBAAA;AACA;AAAA,wBAAA;AACA;AAAA,wBAAA;AACA;AAAA,wBAAA;AACA;AAAA,wBAAA;AACA;AAAA,wBAAA;AACA;AAAA,wBAAA;AACA;AAAA,wBAAA;AACA;AAAA,wBAAA;AACA;AAAA,wBAAA;AACA;AAAA,wBAAA;AACA;AAAA,wBAA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","sources":["node_modules/@parcel/runtime-browser-hmr/lib/runtime-442e507664bb5055.js","src/js/index.js","node_modules/tsparticles/esm/index.js","node_modules/tsparticles-plugin-absorbers/esm/index.js","node_modules/tsparticles-engine/esm/index.js","node_modules/tsparticles-engine/esm/engine.js","node_modules/tsparticles-engine/esm/Utils/EventDispatcher.js","node_modules/@parcel/transformer-js/src/esmodule-helpers.js","node_modules/tsparticles-engine/esm/Core/Loader.js","node_modules/tsparticles-engine/esm/Core/Container.js","node_modules/tsparticles-engine/esm/Utils/Utils.js","node_modules/tsparticles-engine/esm/Utils/NumberUtils.js","node_modules/tsparticles-engine/esm/Core/Utils/Vector.js","node_modules/tsparticles-engine/esm/Core/Utils/Vector3d.js","node_modules/tsparticles-engine/esm/Core/Canvas.js","node_modules/tsparticles-engine/esm/Utils/CanvasUtils.js","node_modules/tsparticles-engine/esm/Utils/ColorUtils.js","node_modules/tsparticles-engine/esm/Core/Utils/Constants.js","node_modules/tsparticles-engine/esm/Core/Utils/EventListeners.js","node_modules/tsparticles-engine/esm/Core/Utils/FrameManager.js","node_modules/tsparticles-engine/esm/Options/Classes/Options.js","node_modules/tsparticles-engine/esm/Options/Classes/Background/Background.js","node_modules/tsparticles-engine/esm/Options/Classes/OptionsColor.js","node_modules/tsparticles-engine/esm/Options/Classes/BackgroundMask/BackgroundMask.js","node_modules/tsparticles-engine/esm/Options/Classes/BackgroundMask/BackgroundMaskCover.js","node_modules/tsparticles-engine/esm/Options/Classes/FullScreen/FullScreen.js","node_modules/tsparticles-engine/esm/Options/Classes/Interactivity/Interactivity.js","node_modules/tsparticles-engine/esm/Options/Classes/Interactivity/Events/Events.js","node_modules/tsparticles-engine/esm/Options/Classes/Interactivity/Events/ClickEvent.js","node_modules/tsparticles-engine/esm/Options/Classes/Interactivity/Events/DivEvent.js","node_modules/tsparticles-engine/esm/Options/Classes/Interactivity/Events/HoverEvent.js","node_modules/tsparticles-engine/esm/Options/Classes/Interactivity/Events/Parallax.js","node_modules/tsparticles-engine/esm/Options/Classes/Interactivity/Events/ResizeEvent.js","node_modules/tsparticles-engine/esm/Options/Classes/Interactivity/Modes/Modes.js","node_modules/tsparticles-engine/esm/Options/Classes/ManualParticle.js","node_modules/tsparticles-engine/esm/Options/Classes/Responsive.js","node_modules/tsparticles-engine/esm/Options/Classes/Theme/Theme.js","node_modules/tsparticles-engine/esm/Options/Classes/Theme/ThemeDefault.js","node_modules/tsparticles-engine/esm/Utils/OptionsUtils.js","node_modules/tsparticles-engine/esm/Options/Classes/Particles/ParticlesOptions.js","node_modules/tsparticles-engine/esm/Options/Classes/AnimatableColor.js","node_modules/tsparticles-engine/esm/Options/Classes/HslAnimation.js","node_modules/tsparticles-engine/esm/Options/Classes/ColorAnimation.js","node_modules/tsparticles-engine/esm/Options/Classes/Particles/Collisions/Collisions.js","node_modules/tsparticles-engine/esm/Options/Classes/Particles/Collisions/CollisionsAbsorb.js","node_modules/tsparticles-engine/esm/Options/Classes/Particles/Collisions/CollisionsOverlap.js","node_modules/tsparticles-engine/esm/Options/Classes/Particles/Bounce/ParticlesBounce.js","node_modules/tsparticles-engine/esm/Options/Classes/Particles/Bounce/ParticlesBounceFactor.js","node_modules/tsparticles-engine/esm/Options/Classes/ValueWithRandom.js","node_modules/tsparticles-engine/esm/Options/Classes/Random.js","node_modules/tsparticles-engine/esm/Options/Classes/Particles/Move/Move.js","node_modules/tsparticles-engine/esm/Options/Classes/Particles/Move/MoveAngle.js","node_modules/tsparticles-engine/esm/Options/Classes/Particles/Move/MoveAttract.js","node_modules/tsparticles-engine/esm/Options/Classes/Particles/Move/MoveCenter.js","node_modules/tsparticles-engine/esm/Options/Classes/Particles/Move/MoveGravity.js","node_modules/tsparticles-engine/esm/Options/Classes/Particles/Move/Path/MovePath.js","node_modules/tsparticles-engine/esm/Options/Classes/Particles/Move/MoveTrail.js","node_modules/tsparticles-engine/esm/Options/Classes/Particles/Move/MoveTrailFill.js","node_modules/tsparticles-engine/esm/Options/Classes/Particles/Move/OutModes.js","node_modules/tsparticles-engine/esm/Options/Classes/Particles/Move/Spin.js","node_modules/tsparticles-engine/esm/Options/Classes/Particles/Opacity/Opacity.js","node_modules/tsparticles-engine/esm/Options/Classes/Particles/Opacity/OpacityAnimation.js","node_modules/tsparticles-engine/esm/Options/Classes/AnimationOptions.js","node_modules/tsparticles-engine/esm/Options/Classes/Particles/Number/ParticlesNumber.js","node_modules/tsparticles-engine/esm/Options/Classes/Particles/Number/ParticlesDensity.js","node_modules/tsparticles-engine/esm/Options/Classes/Particles/Shadow.js","node_modules/tsparticles-engine/esm/Options/Classes/Particles/Shape/Shape.js","node_modules/tsparticles-engine/esm/Options/Classes/Particles/Size/Size.js","node_modules/tsparticles-engine/esm/Options/Classes/Particles/Size/SizeAnimation.js","node_modules/tsparticles-engine/esm/Options/Classes/Particles/Stroke.js","node_modules/tsparticles-engine/esm/Options/Classes/Particles/ZIndex/ZIndex.js","node_modules/tsparticles-engine/esm/Core/Particles.js","node_modules/tsparticles-engine/esm/Core/Utils/InteractionManager.js","node_modules/tsparticles-engine/esm/Core/Particle.js","node_modules/tsparticles-engine/esm/Core/Utils/Point.js","node_modules/tsparticles-engine/esm/Core/Utils/QuadTree.js","node_modules/tsparticles-engine/esm/Core/Utils/Circle.js","node_modules/tsparticles-engine/esm/Core/Utils/Range.js","node_modules/tsparticles-engine/esm/Core/Utils/Rectangle.js","node_modules/tsparticles-engine/esm/Core/Retina.js","node_modules/tsparticles-engine/esm/Core/Utils/Plugins.js","node_modules/tsparticles-engine/esm/Utils/HslColorManager.js","node_modules/tsparticles-engine/esm/Utils/RgbColorManager.js","node_modules/tsparticles-engine/esm/Core/Interfaces/Colors.js","node_modules/tsparticles-engine/esm/Core/Interfaces/IBounds.js","node_modules/tsparticles-engine/esm/Core/Interfaces/IBubbleParticleData.js","node_modules/tsparticles-engine/esm/Core/Interfaces/ICircleBouncer.js","node_modules/tsparticles-engine/esm/Core/Interfaces/IColorManager.js","node_modules/tsparticles-engine/esm/Core/Interfaces/IContainerInteractivity.js","node_modules/tsparticles-engine/esm/Core/Interfaces/IContainerPlugin.js","node_modules/tsparticles-engine/esm/Core/Interfaces/ICoordinates.js","node_modules/tsparticles-engine/esm/Core/Interfaces/IDelta.js","node_modules/tsparticles-engine/esm/Core/Interfaces/IDimension.js","node_modules/tsparticles-engine/esm/Core/Interfaces/IDistance.js","node_modules/tsparticles-engine/esm/Core/Interfaces/IExternalInteractor.js","node_modules/tsparticles-engine/esm/Core/Interfaces/IInteractor.js","node_modules/tsparticles-engine/esm/Core/Interfaces/IMouseData.js","node_modules/tsparticles-engine/esm/Core/Interfaces/IMovePathGenerator.js","node_modules/tsparticles-engine/esm/Core/Interfaces/IParticle.js","node_modules/tsparticles-engine/esm/Core/Interfaces/IParticleColorStyle.js","node_modules/tsparticles-engine/esm/Core/Interfaces/IParticleHslAnimation.js","node_modules/tsparticles-engine/esm/Core/Interfaces/IParticlesInteractor.js","node_modules/tsparticles-engine/esm/Core/Interfaces/IParticleLife.js","node_modules/tsparticles-engine/esm/Core/Interfaces/IParticleRetinaProps.js","node_modules/tsparticles-engine/esm/Core/Interfaces/IParticleRoll.js","node_modules/tsparticles-engine/esm/Core/Interfaces/IParticleTransformValues.js","node_modules/tsparticles-engine/esm/Core/Interfaces/IParticleUpdater.js","node_modules/tsparticles-engine/esm/Core/Interfaces/IParticleValueAnimation.js","node_modules/tsparticles-engine/esm/Core/Interfaces/IParticlesMover.js","node_modules/tsparticles-engine/esm/Core/Interfaces/IPlugin.js","node_modules/tsparticles-engine/esm/Core/Interfaces/IRangeValue.js","node_modules/tsparticles-engine/esm/Core/Interfaces/IRectSideResult.js","node_modules/tsparticles-engine/esm/Core/Interfaces/IShapeDrawer.js","node_modules/tsparticles-engine/esm/Core/Interfaces/IShapeValues.js","node_modules/tsparticles-engine/esm/Core/Interfaces/ISlowParticleData.js","node_modules/tsparticles-engine/esm/Core/Utils/ExternalInteractorBase.js","node_modules/tsparticles-engine/esm/Core/Utils/ParticlesInteractorBase.js","node_modules/tsparticles-engine/esm/Enums/Directions/MoveDirection.js","node_modules/tsparticles-engine/esm/Enums/Directions/RotateDirection.js","node_modules/tsparticles-engine/esm/Enums/Directions/OutModeDirection.js","node_modules/tsparticles-engine/esm/Enums/Modes/ClickMode.js","node_modules/tsparticles-engine/esm/Enums/Modes/DivMode.js","node_modules/tsparticles-engine/esm/Enums/Modes/HoverMode.js","node_modules/tsparticles-engine/esm/Enums/Modes/CollisionMode.js","node_modules/tsparticles-engine/esm/Enums/Modes/OutMode.js","node_modules/tsparticles-engine/esm/Enums/Modes/SizeMode.js","node_modules/tsparticles-engine/esm/Enums/Modes/ThemeMode.js","node_modules/tsparticles-engine/esm/Enums/Modes/ResponsiveMode.js","node_modules/tsparticles-engine/esm/Enums/Types/AlterType.js","node_modules/tsparticles-engine/esm/Enums/Types/DestroyType.js","node_modules/tsparticles-engine/esm/Enums/Types/GradientType.js","node_modules/tsparticles-engine/esm/Enums/Types/InteractorType.js","node_modules/tsparticles-engine/esm/Enums/Types/ParticleOutType.js","node_modules/tsparticles-engine/esm/Enums/Types/StartValueType.js","node_modules/tsparticles-engine/esm/Enums/Types/DivType.js","node_modules/tsparticles-engine/esm/Enums/Types/EasingType.js","node_modules/tsparticles-engine/esm/Enums/Types/EventType.js","node_modules/tsparticles-engine/esm/Enums/AnimationStatus.js","node_modules/tsparticles-engine/esm/Enums/InteractivityDetect.js","node_modules/tsparticles-engine/esm/Options/Interfaces/Background/IBackground.js","node_modules/tsparticles-engine/esm/Options/Interfaces/BackgroundMask/IBackgroundMask.js","node_modules/tsparticles-engine/esm/Options/Interfaces/BackgroundMask/IBackgroundMaskCover.js","node_modules/tsparticles-engine/esm/Options/Interfaces/FullScreen/IFullScreen.js","node_modules/tsparticles-engine/esm/Options/Interfaces/IAnimatable.js","node_modules/tsparticles-engine/esm/Options/Interfaces/IAnimatableColor.js","node_modules/tsparticles-engine/esm/Options/Interfaces/IAnimation.js","node_modules/tsparticles-engine/esm/Options/Interfaces/IColorAnimation.js","node_modules/tsparticles-engine/esm/Options/Interfaces/IHslAnimation.js","node_modules/tsparticles-engine/esm/Options/Interfaces/IManualParticle.js","node_modules/tsparticles-engine/esm/Options/Interfaces/IOptionLoader.js","node_modules/tsparticles-engine/esm/Options/Interfaces/IOptions.js","node_modules/tsparticles-engine/esm/Options/Interfaces/IOptionsColor.js","node_modules/tsparticles-engine/esm/Options/Interfaces/IResponsive.js","node_modules/tsparticles-engine/esm/Options/Interfaces/IValueWithRandom.js","node_modules/tsparticles-engine/esm/Options/Interfaces/Interactivity/Events/IClickEvent.js","node_modules/tsparticles-engine/esm/Options/Interfaces/Interactivity/Events/IDivEvent.js","node_modules/tsparticles-engine/esm/Options/Interfaces/Interactivity/Events/IEvents.js","node_modules/tsparticles-engine/esm/Options/Interfaces/Interactivity/Events/IHoverEvent.js","node_modules/tsparticles-engine/esm/Options/Interfaces/Interactivity/Events/IParallax.js","node_modules/tsparticles-engine/esm/Options/Interfaces/Interactivity/Modes/IModeDiv.js","node_modules/tsparticles-engine/esm/Options/Interfaces/Interactivity/Modes/IModes.js","node_modules/tsparticles-engine/esm/Options/Interfaces/Interactivity/IInteractivity.js","node_modules/tsparticles-engine/esm/Options/Interfaces/Particles/Bounce/IParticlesBounce.js","node_modules/tsparticles-engine/esm/Options/Interfaces/Particles/Collisions/ICollisions.js","node_modules/tsparticles-engine/esm/Options/Interfaces/Particles/Collisions/ICollisionsOverlap.js","node_modules/tsparticles-engine/esm/Options/Interfaces/Particles/IParticlesOptions.js","node_modules/tsparticles-engine/esm/Options/Interfaces/Particles/IShadow.js","node_modules/tsparticles-engine/esm/Options/Interfaces/Particles/IStroke.js","node_modules/tsparticles-engine/esm/Options/Interfaces/Particles/Move/IMoveAttract.js","node_modules/tsparticles-engine/esm/Options/Interfaces/Particles/Move/IMove.js","node_modules/tsparticles-engine/esm/Options/Interfaces/Particles/Move/IMoveAngle.js","node_modules/tsparticles-engine/esm/Options/Interfaces/Particles/Move/IMoveCenter.js","node_modules/tsparticles-engine/esm/Options/Interfaces/Particles/Move/IMoveGravity.js","node_modules/tsparticles-engine/esm/Options/Interfaces/Particles/Move/Path/IMovePath.js","node_modules/tsparticles-engine/esm/Options/Interfaces/Particles/Move/IOutModes.js","node_modules/tsparticles-engine/esm/Options/Interfaces/Particles/Move/ISpin.js","node_modules/tsparticles-engine/esm/Options/Interfaces/Particles/Move/IMoveTrail.js","node_modules/tsparticles-engine/esm/Options/Interfaces/Particles/Number/IParticlesDensity.js","node_modules/tsparticles-engine/esm/Options/Interfaces/Particles/Number/IParticlesNumber.js","node_modules/tsparticles-engine/esm/Options/Interfaces/Particles/Opacity/IOpacity.js","node_modules/tsparticles-engine/esm/Options/Interfaces/Particles/Opacity/IOpacityAnimation.js","node_modules/tsparticles-engine/esm/Options/Interfaces/Particles/Shape/ICharacterShape.js","node_modules/tsparticles-engine/esm/Options/Interfaces/Particles/Shape/IImageShape.js","node_modules/tsparticles-engine/esm/Options/Interfaces/Particles/Shape/IPolygonShape.js","node_modules/tsparticles-engine/esm/Options/Interfaces/Particles/Shape/IShape.js","node_modules/tsparticles-engine/esm/Options/Interfaces/Particles/Shape/IShapeValues.js","node_modules/tsparticles-engine/esm/Options/Interfaces/Particles/Shape/IStarShape.js","node_modules/tsparticles-engine/esm/Options/Interfaces/Particles/Size/ISize.js","node_modules/tsparticles-engine/esm/Options/Interfaces/Particles/Size/ISizeAnimation.js","node_modules/tsparticles-engine/esm/Options/Interfaces/Particles/ZIndex/IZIndex.js","node_modules/tsparticles-engine/esm/Options/Interfaces/Theme/ITheme.js","node_modules/tsparticles-engine/esm/Options/Interfaces/Theme/IThemeDefault.js","node_modules/tsparticles-engine/esm/Types/CustomEventArgs.js","node_modules/tsparticles-engine/esm/Types/CustomEventListener.js","node_modules/tsparticles-engine/esm/Types/ParticlesGroups.js","node_modules/tsparticles-engine/esm/Types/PathOptions.js","node_modules/tsparticles-engine/esm/Types/RangeValue.js","node_modules/tsparticles-engine/esm/Types/RecursivePartial.js","node_modules/tsparticles-engine/esm/Types/ShapeData.js","node_modules/tsparticles-engine/esm/Types/ShapeDrawerFunctions.js","node_modules/tsparticles-engine/esm/Types/SingleOrMultiple.js","node_modules/tsparticles-plugin-absorbers/esm/Options/Classes/Absorber.js","node_modules/tsparticles-plugin-absorbers/esm/Options/Classes/AbsorberSize.js","node_modules/tsparticles-plugin-absorbers/esm/Options/Classes/AbsorberSizeLimit.js","node_modules/tsparticles-plugin-absorbers/esm/Absorbers.js","node_modules/tsparticles-plugin-absorbers/esm/AbsorberInstance.js","node_modules/tsparticles-plugin-absorbers/esm/AbsorberContainer.js","node_modules/tsparticles-plugin-absorbers/esm/Enums/AbsorberClickMode.js","node_modules/tsparticles-updater-destroy/esm/index.js","node_modules/tsparticles-updater-destroy/esm/DestroyUpdater.js","node_modules/tsparticles-updater-destroy/esm/Options/Classes/Destroy.js","node_modules/tsparticles-updater-destroy/esm/Options/Classes/DestroyBounds.js","node_modules/tsparticles-updater-destroy/esm/Options/Classes/Split.js","node_modules/tsparticles-updater-destroy/esm/Options/Classes/SplitFactor.js","node_modules/tsparticles-updater-destroy/esm/Options/Classes/SplitRate.js","node_modules/tsparticles-plugin-emitters/esm/index.js","node_modules/tsparticles-plugin-emitters/esm/Shapes/Circle/CircleShape.js","node_modules/tsparticles-plugin-emitters/esm/Options/Classes/Emitter.js","node_modules/tsparticles-plugin-emitters/esm/Options/Classes/EmitterLife.js","node_modules/tsparticles-plugin-emitters/esm/Options/Classes/EmitterRate.js","node_modules/tsparticles-plugin-emitters/esm/Options/Classes/EmitterSize.js","node_modules/tsparticles-plugin-emitters/esm/Emitters.js","node_modules/tsparticles-plugin-emitters/esm/EmitterInstance.js","node_modules/tsparticles-plugin-emitters/esm/ShapeManager.js","node_modules/tsparticles-plugin-emitters/esm/Shapes/Square/SquareShape.js","node_modules/tsparticles-plugin-emitters/esm/EmitterContainer.js","node_modules/tsparticles-plugin-emitters/esm/EmittersEngine.js","node_modules/tsparticles-plugin-emitters/esm/Enums/EmitterClickMode.js","node_modules/tsparticles-plugin-emitters/esm/Enums/EmitterShapeType.js","node_modules/tsparticles-interaction-external-trail/esm/index.js","node_modules/tsparticles-interaction-external-trail/esm/TrailMaker.js","node_modules/tsparticles-interaction-external-trail/esm/Options/Classes/Trail.js","node_modules/tsparticles-interaction-external-trail/esm/Options/Interfaces/ITrail.js","node_modules/tsparticles-updater-roll/esm/index.js","node_modules/tsparticles-updater-roll/esm/RollUpdater.js","node_modules/tsparticles-updater-roll/esm/Options/Classes/Roll.js","node_modules/tsparticles-updater-roll/esm/Options/Classes/RollLight.js","node_modules/tsparticles-slim/esm/index.js","node_modules/tsparticles-particles.js/esm/index.js","node_modules/tsparticles-updater-angle/esm/index.js","node_modules/tsparticles-updater-angle/esm/RotateUpdater.js","node_modules/tsparticles-updater-angle/esm/Options/Classes/Rotate.js","node_modules/tsparticles-updater-angle/esm/Options/Classes/RotateAnimation.js","node_modules/tsparticles-move-base/esm/index.js","node_modules/tsparticles-move-base/esm/BaseMover.js","node_modules/tsparticles-move-base/esm/Utils.js","node_modules/tsparticles-shape-circle/esm/index.js","node_modules/tsparticles-shape-circle/esm/CircleDrawer.js","node_modules/tsparticles-updater-color/esm/index.js","node_modules/tsparticles-updater-color/esm/ColorUpdater.js","node_modules/tsparticles-interaction-external-attract/esm/index.js","node_modules/tsparticles-interaction-external-attract/esm/Attractor.js","node_modules/tsparticles-interaction-external-attract/esm/Options/Classes/Attract.js","node_modules/tsparticles-interaction-external-attract/esm/Options/Interfaces/IAttract.js","node_modules/tsparticles-interaction-external-bounce/esm/index.js","node_modules/tsparticles-interaction-external-bounce/esm/Bouncer.js","node_modules/tsparticles-interaction-external-bounce/esm/Options/Classes/Bounce.js","node_modules/tsparticles-interaction-external-bounce/esm/Options/Interfaces/IBounce.js","node_modules/tsparticles-interaction-external-bubble/esm/index.js","node_modules/tsparticles-interaction-external-bubble/esm/Bubbler.js","node_modules/tsparticles-interaction-external-bubble/esm/Options/Classes/Bubble.js","node_modules/tsparticles-interaction-external-bubble/esm/Options/Classes/BubbleBase.js","node_modules/tsparticles-interaction-external-bubble/esm/Options/Classes/BubbleDiv.js","node_modules/tsparticles-interaction-external-bubble/esm/Options/Interfaces/IBubbleBase.js","node_modules/tsparticles-interaction-external-bubble/esm/Options/Interfaces/IBubbleDiv.js","node_modules/tsparticles-interaction-external-bubble/esm/Options/Interfaces/IBubble.js","node_modules/tsparticles-interaction-external-connect/esm/index.js","node_modules/tsparticles-interaction-external-connect/esm/Connector.js","node_modules/tsparticles-interaction-external-connect/esm/Options/Classes/Connect.js","node_modules/tsparticles-interaction-external-connect/esm/Options/Classes/ConnectLinks.js","node_modules/tsparticles-interaction-external-connect/esm/Options/Interfaces/IConnect.js","node_modules/tsparticles-interaction-external-connect/esm/Options/Interfaces/IConnectLinks.js","node_modules/tsparticles-interaction-external-grab/esm/index.js","node_modules/tsparticles-interaction-external-grab/esm/Grabber.js","node_modules/tsparticles-interaction-external-grab/esm/Options/Classes/Grab.js","node_modules/tsparticles-interaction-external-grab/esm/Options/Classes/GrabLinks.js","node_modules/tsparticles-interaction-external-grab/esm/Options/Interfaces/IGrab.js","node_modules/tsparticles-interaction-external-grab/esm/Options/Interfaces/IGrabLinks.js","node_modules/tsparticles-interaction-external-pause/esm/index.js","node_modules/tsparticles-interaction-external-pause/esm/Pauser.js","node_modules/tsparticles-interaction-external-push/esm/index.js","node_modules/tsparticles-interaction-external-push/esm/Pusher.js","node_modules/tsparticles-interaction-external-push/esm/Options/Classes/Push.js","node_modules/tsparticles-interaction-external-push/esm/Options/Interfaces/IPush.js","node_modules/tsparticles-interaction-external-remove/esm/index.js","node_modules/tsparticles-interaction-external-remove/esm/Remover.js","node_modules/tsparticles-interaction-external-remove/esm/Options/Classes/Remove.js","node_modules/tsparticles-interaction-external-remove/esm/Options/Interfaces/IRemove.js","node_modules/tsparticles-interaction-external-repulse/esm/index.js","node_modules/tsparticles-interaction-external-repulse/esm/Repulser.js","node_modules/tsparticles-interaction-external-repulse/esm/Options/Classes/Repulse.js","node_modules/tsparticles-interaction-external-repulse/esm/Options/Classes/RepulseBase.js","node_modules/tsparticles-interaction-external-repulse/esm/Options/Classes/RepulseDiv.js","node_modules/tsparticles-interaction-external-repulse/esm/Options/Interfaces/IRepulseBase.js","node_modules/tsparticles-interaction-external-repulse/esm/Options/Interfaces/IRepulseDiv.js","node_modules/tsparticles-interaction-external-repulse/esm/Options/Interfaces/IRepulse.js","node_modules/tsparticles-interaction-external-slow/esm/index.js","node_modules/tsparticles-interaction-external-slow/esm/Slower.js","node_modules/tsparticles-interaction-external-slow/esm/Options/Classes/Slow.js","node_modules/tsparticles-interaction-external-slow/esm/Options/Interfaces/ISlow.js","node_modules/tsparticles-shape-image/esm/index.js","node_modules/tsparticles-shape-image/esm/ImageDrawer.js","node_modules/tsparticles-shape-image/esm/Utils.js","node_modules/tsparticles-updater-life/esm/index.js","node_modules/tsparticles-updater-life/esm/LifeUpdater.js","node_modules/tsparticles-updater-life/esm/Options/Classes/Life.js","node_modules/tsparticles-updater-life/esm/Options/Classes/LifeDelay.js","node_modules/tsparticles-updater-life/esm/Options/Classes/LifeDuration.js","node_modules/tsparticles-shape-line/esm/index.js","node_modules/tsparticles-shape-line/esm/LineDrawer.js","node_modules/tsparticles-updater-opacity/esm/index.js","node_modules/tsparticles-updater-opacity/esm/OpacityUpdater.js","node_modules/tsparticles-updater-out-modes/esm/index.js","node_modules/tsparticles-updater-out-modes/esm/OutOfCanvasUpdater.js","node_modules/tsparticles-updater-out-modes/esm/BounceOutMode.js","node_modules/tsparticles-updater-out-modes/esm/Utils.js","node_modules/tsparticles-updater-out-modes/esm/DestroyOutMode.js","node_modules/tsparticles-updater-out-modes/esm/NoneOutMode.js","node_modules/tsparticles-updater-out-modes/esm/OutOutMode.js","node_modules/tsparticles-move-parallax/esm/index.js","node_modules/tsparticles-move-parallax/esm/ParallaxMover.js","node_modules/tsparticles-interaction-particles-attract/esm/index.js","node_modules/tsparticles-interaction-particles-attract/esm/Attractor.js","node_modules/tsparticles-interaction-particles-collisions/esm/index.js","node_modules/tsparticles-interaction-particles-collisions/esm/Collider.js","node_modules/tsparticles-interaction-particles-collisions/esm/ResolveCollision.js","node_modules/tsparticles-interaction-particles-collisions/esm/Absorb.js","node_modules/tsparticles-interaction-particles-collisions/esm/Bounce.js","node_modules/tsparticles-interaction-particles-collisions/esm/Destroy.js","node_modules/tsparticles-interaction-particles-links/esm/index.js","node_modules/tsparticles-interaction-particles-links/esm/interaction.js","node_modules/tsparticles-interaction-particles-links/esm/Linker.js","node_modules/tsparticles-interaction-particles-links/esm/CircleWarp.js","node_modules/tsparticles-interaction-particles-links/esm/Options/Classes/Links.js","node_modules/tsparticles-interaction-particles-links/esm/Options/Classes/LinksShadow.js","node_modules/tsparticles-interaction-particles-links/esm/Options/Classes/LinksTriangle.js","node_modules/tsparticles-interaction-particles-links/esm/plugin.js","node_modules/tsparticles-interaction-particles-links/esm/LinkInstance.js","node_modules/tsparticles-interaction-particles-links/esm/Utils.js","node_modules/tsparticles-interaction-particles-links/esm/Options/Interfaces/ILinks.js","node_modules/tsparticles-interaction-particles-links/esm/Options/Interfaces/ILinksShadow.js","node_modules/tsparticles-interaction-particles-links/esm/Options/Interfaces/ILinksTriangle.js","node_modules/tsparticles-shape-polygon/esm/index.js","node_modules/tsparticles-shape-polygon/esm/PolygonDrawer.js","node_modules/tsparticles-shape-polygon/esm/PolygonDrawerBase.js","node_modules/tsparticles-shape-polygon/esm/TriangleDrawer.js","node_modules/tsparticles-updater-size/esm/index.js","node_modules/tsparticles-updater-size/esm/SizeUpdater.js","node_modules/tsparticles-shape-square/esm/index.js","node_modules/tsparticles-shape-square/esm/SquareDrawer.js","node_modules/tsparticles-shape-star/esm/index.js","node_modules/tsparticles-shape-star/esm/StarDrawer.js","node_modules/tsparticles-updater-stroke-color/esm/index.js","node_modules/tsparticles-updater-stroke-color/esm/StrokeColorUpdater.js","node_modules/tsparticles-shape-text/esm/index.js","node_modules/tsparticles-shape-text/esm/TextDrawer.js","node_modules/tsparticles-updater-tilt/esm/index.js","node_modules/tsparticles-updater-tilt/esm/TiltUpdater.js","node_modules/tsparticles-updater-tilt/esm/Options/Classes/Tilt.js","node_modules/tsparticles-updater-tilt/esm/Options/Classes/TiltAnimation.js","node_modules/tsparticles-updater-twinkle/esm/index.js","node_modules/tsparticles-updater-twinkle/esm/TwinkleUpdater.js","node_modules/tsparticles-updater-twinkle/esm/Options/Classes/Twinkle.js","node_modules/tsparticles-updater-twinkle/esm/Options/Classes/TwinkleValues.js","node_modules/tsparticles-updater-wobble/esm/index.js","node_modules/tsparticles-updater-wobble/esm/WobbleUpdater.js","node_modules/tsparticles-updater-wobble/esm/Options/Classes/Wobble.js","node_modules/tsparticles-updater-wobble/esm/Options/Classes/WobbleSpeed.js"],"sourcesContent":["var HMR_HOST = null;var HMR_PORT = null;var HMR_SECURE = false;var HMR_ENV_HASH = \"d6ea1d42532a7575\";module.bundle.HMR_BUNDLE_ID = \"ba60c367739bf03c\";\"use strict\";\n\n/* global HMR_HOST, HMR_PORT, HMR_ENV_HASH, HMR_SECURE, chrome, browser, globalThis, __parcel__import__, __parcel__importScripts__, ServiceWorkerGlobalScope */\n\n/*::\nimport type {\n  HMRAsset,\n  HMRMessage,\n} from '@parcel/reporter-dev-server/src/HMRServer.js';\ninterface ParcelRequire {\n  (string): mixed;\n  cache: {|[string]: ParcelModule|};\n  hotData: {|[string]: mixed|};\n  Module: any;\n  parent: ?ParcelRequire;\n  isParcelRequire: true;\n  modules: {|[string]: [Function, {|[string]: string|}]|};\n  HMR_BUNDLE_ID: string;\n  root: ParcelRequire;\n}\ninterface ParcelModule {\n  hot: {|\n    data: mixed,\n    accept(cb: (Function) => void): void,\n    dispose(cb: (mixed) => void): void,\n    // accept(deps: Array<string> | string, cb: (Function) => void): void,\n    // decline(): void,\n    _acceptCallbacks: Array<(Function) => void>,\n    _disposeCallbacks: Array<(mixed) => void>,\n  |};\n}\ninterface ExtensionContext {\n  runtime: {|\n    reload(): void,\n    getURL(url: string): string;\n    getManifest(): {manifest_version: number, ...};\n  |};\n}\ndeclare var module: {bundle: ParcelRequire, ...};\ndeclare var HMR_HOST: string;\ndeclare var HMR_PORT: string;\ndeclare var HMR_ENV_HASH: string;\ndeclare var HMR_SECURE: boolean;\ndeclare var chrome: ExtensionContext;\ndeclare var browser: ExtensionContext;\ndeclare var __parcel__import__: (string) => Promise<void>;\ndeclare var __parcel__importScripts__: (string) => Promise<void>;\ndeclare var globalThis: typeof self;\ndeclare var ServiceWorkerGlobalScope: Object;\n*/\nvar OVERLAY_ID = '__parcel__error__overlay__';\nvar OldModule = module.bundle.Module;\n\nfunction Module(moduleName) {\n  OldModule.call(this, moduleName);\n  this.hot = {\n    data: module.bundle.hotData[moduleName],\n    _acceptCallbacks: [],\n    _disposeCallbacks: [],\n    accept: function (fn) {\n      this._acceptCallbacks.push(fn || function () {});\n    },\n    dispose: function (fn) {\n      this._disposeCallbacks.push(fn);\n    }\n  };\n  module.bundle.hotData[moduleName] = undefined;\n}\n\nmodule.bundle.Module = Module;\nmodule.bundle.hotData = {};\nvar checkedAssets\n/*: {|[string]: boolean|} */\n, assetsToDispose\n/*: Array<[ParcelRequire, string]> */\n, assetsToAccept\n/*: Array<[ParcelRequire, string]> */\n;\n\nfunction getHostname() {\n  return HMR_HOST || (location.protocol.indexOf('http') === 0 ? location.hostname : 'localhost');\n}\n\nfunction getPort() {\n  return HMR_PORT || location.port;\n} // eslint-disable-next-line no-redeclare\n\n\nvar parent = module.bundle.parent;\n\nif ((!parent || !parent.isParcelRequire) && typeof WebSocket !== 'undefined') {\n  var hostname = getHostname();\n  var port = getPort();\n  var protocol = HMR_SECURE || location.protocol == 'https:' && !/localhost|127.0.0.1|0.0.0.0/.test(hostname) ? 'wss' : 'ws';\n  var ws = new WebSocket(protocol + '://' + hostname + (port ? ':' + port : '') + '/'); // Web extension context\n\n  var extCtx = typeof chrome === 'undefined' ? typeof browser === 'undefined' ? null : browser : chrome; // Safari doesn't support sourceURL in error stacks.\n  // eval may also be disabled via CSP, so do a quick check.\n\n  var supportsSourceURL = false;\n\n  try {\n    (0, eval)('throw new Error(\"test\"); //# sourceURL=test.js');\n  } catch (err) {\n    supportsSourceURL = err.stack.includes('test.js');\n  } // $FlowFixMe\n\n\n  ws.onmessage = async function (event\n  /*: {data: string, ...} */\n  ) {\n    checkedAssets = {}\n    /*: {|[string]: boolean|} */\n    ;\n    assetsToAccept = [];\n    assetsToDispose = [];\n    var data\n    /*: HMRMessage */\n    = JSON.parse(event.data);\n\n    if (data.type === 'update') {\n      // Remove error overlay if there is one\n      if (typeof document !== 'undefined') {\n        removeErrorOverlay();\n      }\n\n      let assets = data.assets.filter(asset => asset.envHash === HMR_ENV_HASH); // Handle HMR Update\n\n      let handled = assets.every(asset => {\n        return asset.type === 'css' || asset.type === 'js' && hmrAcceptCheck(module.bundle.root, asset.id, asset.depsByBundle);\n      });\n\n      if (handled) {\n        console.clear(); // Dispatch custom event so other runtimes (e.g React Refresh) are aware.\n\n        if (typeof window !== 'undefined' && typeof CustomEvent !== 'undefined') {\n          window.dispatchEvent(new CustomEvent('parcelhmraccept'));\n        }\n\n        await hmrApplyUpdates(assets); // Dispose all old assets.\n\n        let processedAssets = {}\n        /*: {|[string]: boolean|} */\n        ;\n\n        for (let i = 0; i < assetsToDispose.length; i++) {\n          let id = assetsToDispose[i][1];\n\n          if (!processedAssets[id]) {\n            hmrDispose(assetsToDispose[i][0], id);\n            processedAssets[id] = true;\n          }\n        } // Run accept callbacks. This will also re-execute other disposed assets in topological order.\n\n\n        processedAssets = {};\n\n        for (let i = 0; i < assetsToAccept.length; i++) {\n          let id = assetsToAccept[i][1];\n\n          if (!processedAssets[id]) {\n            hmrAccept(assetsToAccept[i][0], id);\n            processedAssets[id] = true;\n          }\n        }\n      } else fullReload();\n    }\n\n    if (data.type === 'error') {\n      // Log parcel errors to console\n      for (let ansiDiagnostic of data.diagnostics.ansi) {\n        let stack = ansiDiagnostic.codeframe ? ansiDiagnostic.codeframe : ansiDiagnostic.stack;\n        console.error('🚨 [parcel]: ' + ansiDiagnostic.message + '\\n' + stack + '\\n\\n' + ansiDiagnostic.hints.join('\\n'));\n      }\n\n      if (typeof document !== 'undefined') {\n        // Render the fancy html overlay\n        removeErrorOverlay();\n        var overlay = createErrorOverlay(data.diagnostics.html); // $FlowFixMe\n\n        document.body.appendChild(overlay);\n      }\n    }\n  };\n\n  ws.onerror = function (e) {\n    console.error(e.message);\n  };\n\n  ws.onclose = function () {\n    console.warn('[parcel] 🚨 Connection to the HMR server was lost');\n  };\n}\n\nfunction removeErrorOverlay() {\n  var overlay = document.getElementById(OVERLAY_ID);\n\n  if (overlay) {\n    overlay.remove();\n    console.log('[parcel] ✨ Error resolved');\n  }\n}\n\nfunction createErrorOverlay(diagnostics) {\n  var overlay = document.createElement('div');\n  overlay.id = OVERLAY_ID;\n  let errorHTML = '<div style=\"background: black; opacity: 0.85; font-size: 16px; color: white; position: fixed; height: 100%; width: 100%; top: 0px; left: 0px; padding: 30px; font-family: Menlo, Consolas, monospace; z-index: 9999;\">';\n\n  for (let diagnostic of diagnostics) {\n    let stack = diagnostic.frames.length ? diagnostic.frames.reduce((p, frame) => {\n      return `${p}\n<a href=\"/__parcel_launch_editor?file=${encodeURIComponent(frame.location)}\" style=\"text-decoration: underline; color: #888\" onclick=\"fetch(this.href); return false\">${frame.location}</a>\n${frame.code}`;\n    }, '') : diagnostic.stack;\n    errorHTML += `\n      <div>\n        <div style=\"font-size: 18px; font-weight: bold; margin-top: 20px;\">\n          🚨 ${diagnostic.message}\n        </div>\n        <pre>${stack}</pre>\n        <div>\n          ${diagnostic.hints.map(hint => '<div>💡 ' + hint + '</div>').join('')}\n        </div>\n        ${diagnostic.documentation ? `<div>📝 <a style=\"color: violet\" href=\"${diagnostic.documentation}\" target=\"_blank\">Learn more</a></div>` : ''}\n      </div>\n    `;\n  }\n\n  errorHTML += '</div>';\n  overlay.innerHTML = errorHTML;\n  return overlay;\n}\n\nfunction fullReload() {\n  if ('reload' in location) {\n    location.reload();\n  } else if (extCtx && extCtx.runtime && extCtx.runtime.reload) {\n    extCtx.runtime.reload();\n  }\n}\n\nfunction getParents(bundle, id)\n/*: Array<[ParcelRequire, string]> */\n{\n  var modules = bundle.modules;\n\n  if (!modules) {\n    return [];\n  }\n\n  var parents = [];\n  var k, d, dep;\n\n  for (k in modules) {\n    for (d in modules[k][1]) {\n      dep = modules[k][1][d];\n\n      if (dep === id || Array.isArray(dep) && dep[dep.length - 1] === id) {\n        parents.push([bundle, k]);\n      }\n    }\n  }\n\n  if (bundle.parent) {\n    parents = parents.concat(getParents(bundle.parent, id));\n  }\n\n  return parents;\n}\n\nfunction updateLink(link) {\n  var newLink = link.cloneNode();\n\n  newLink.onload = function () {\n    if (link.parentNode !== null) {\n      // $FlowFixMe\n      link.parentNode.removeChild(link);\n    }\n  };\n\n  newLink.setAttribute('href', // $FlowFixMe\n  link.getAttribute('href').split('?')[0] + '?' + Date.now()); // $FlowFixMe\n\n  link.parentNode.insertBefore(newLink, link.nextSibling);\n}\n\nvar cssTimeout = null;\n\nfunction reloadCSS() {\n  if (cssTimeout) {\n    return;\n  }\n\n  cssTimeout = setTimeout(function () {\n    var links = document.querySelectorAll('link[rel=\"stylesheet\"]');\n\n    for (var i = 0; i < links.length; i++) {\n      // $FlowFixMe[incompatible-type]\n      var href\n      /*: string */\n      = links[i].getAttribute('href');\n      var hostname = getHostname();\n      var servedFromHMRServer = hostname === 'localhost' ? new RegExp('^(https?:\\\\/\\\\/(0.0.0.0|127.0.0.1)|localhost):' + getPort()).test(href) : href.indexOf(hostname + ':' + getPort());\n      var absolute = /^https?:\\/\\//i.test(href) && href.indexOf(location.origin) !== 0 && !servedFromHMRServer;\n\n      if (!absolute) {\n        updateLink(links[i]);\n      }\n    }\n\n    cssTimeout = null;\n  }, 50);\n}\n\nfunction hmrDownload(asset) {\n  if (asset.type === 'js') {\n    if (typeof document !== 'undefined') {\n      let script = document.createElement('script');\n      script.src = asset.url + '?t=' + Date.now();\n\n      if (asset.outputFormat === 'esmodule') {\n        script.type = 'module';\n      }\n\n      return new Promise((resolve, reject) => {\n        var _document$head;\n\n        script.onload = () => resolve(script);\n\n        script.onerror = reject;\n        (_document$head = document.head) === null || _document$head === void 0 ? void 0 : _document$head.appendChild(script);\n      });\n    } else if (typeof importScripts === 'function') {\n      // Worker scripts\n      if (asset.outputFormat === 'esmodule') {\n        return __parcel__import__(asset.url + '?t=' + Date.now());\n      } else {\n        return new Promise((resolve, reject) => {\n          try {\n            __parcel__importScripts__(asset.url + '?t=' + Date.now());\n\n            resolve();\n          } catch (err) {\n            reject(err);\n          }\n        });\n      }\n    }\n  }\n}\n\nasync function hmrApplyUpdates(assets) {\n  global.parcelHotUpdate = Object.create(null);\n  let scriptsToRemove;\n\n  try {\n    // If sourceURL comments aren't supported in eval, we need to load\n    // the update from the dev server over HTTP so that stack traces\n    // are correct in errors/logs. This is much slower than eval, so\n    // we only do it if needed (currently just Safari).\n    // https://bugs.webkit.org/show_bug.cgi?id=137297\n    // This path is also taken if a CSP disallows eval.\n    if (!supportsSourceURL) {\n      let promises = assets.map(asset => {\n        var _hmrDownload;\n\n        return (_hmrDownload = hmrDownload(asset)) === null || _hmrDownload === void 0 ? void 0 : _hmrDownload.catch(err => {\n          // Web extension bugfix for Chromium\n          // https://bugs.chromium.org/p/chromium/issues/detail?id=1255412#c12\n          if (extCtx && extCtx.runtime && extCtx.runtime.getManifest().manifest_version == 3) {\n            if (typeof ServiceWorkerGlobalScope != 'undefined' && global instanceof ServiceWorkerGlobalScope) {\n              extCtx.runtime.reload();\n              return;\n            }\n\n            asset.url = extCtx.runtime.getURL('/__parcel_hmr_proxy__?url=' + encodeURIComponent(asset.url + '?t=' + Date.now()));\n            return hmrDownload(asset);\n          }\n\n          throw err;\n        });\n      });\n      scriptsToRemove = await Promise.all(promises);\n    }\n\n    assets.forEach(function (asset) {\n      hmrApply(module.bundle.root, asset);\n    });\n  } finally {\n    delete global.parcelHotUpdate;\n\n    if (scriptsToRemove) {\n      scriptsToRemove.forEach(script => {\n        if (script) {\n          var _document$head2;\n\n          (_document$head2 = document.head) === null || _document$head2 === void 0 ? void 0 : _document$head2.removeChild(script);\n        }\n      });\n    }\n  }\n}\n\nfunction hmrApply(bundle\n/*: ParcelRequire */\n, asset\n/*:  HMRAsset */\n) {\n  var modules = bundle.modules;\n\n  if (!modules) {\n    return;\n  }\n\n  if (asset.type === 'css') {\n    reloadCSS();\n  } else if (asset.type === 'js') {\n    let deps = asset.depsByBundle[bundle.HMR_BUNDLE_ID];\n\n    if (deps) {\n      if (modules[asset.id]) {\n        // Remove dependencies that are removed and will become orphaned.\n        // This is necessary so that if the asset is added back again, the cache is gone, and we prevent a full page reload.\n        let oldDeps = modules[asset.id][1];\n\n        for (let dep in oldDeps) {\n          if (!deps[dep] || deps[dep] !== oldDeps[dep]) {\n            let id = oldDeps[dep];\n            let parents = getParents(module.bundle.root, id);\n\n            if (parents.length === 1) {\n              hmrDelete(module.bundle.root, id);\n            }\n          }\n        }\n      }\n\n      if (supportsSourceURL) {\n        // Global eval. We would use `new Function` here but browser\n        // support for source maps is better with eval.\n        (0, eval)(asset.output);\n      } // $FlowFixMe\n\n\n      let fn = global.parcelHotUpdate[asset.id];\n      modules[asset.id] = [fn, deps];\n    } else if (bundle.parent) {\n      hmrApply(bundle.parent, asset);\n    }\n  }\n}\n\nfunction hmrDelete(bundle, id) {\n  let modules = bundle.modules;\n\n  if (!modules) {\n    return;\n  }\n\n  if (modules[id]) {\n    // Collect dependencies that will become orphaned when this module is deleted.\n    let deps = modules[id][1];\n    let orphans = [];\n\n    for (let dep in deps) {\n      let parents = getParents(module.bundle.root, deps[dep]);\n\n      if (parents.length === 1) {\n        orphans.push(deps[dep]);\n      }\n    } // Delete the module. This must be done before deleting dependencies in case of circular dependencies.\n\n\n    delete modules[id];\n    delete bundle.cache[id]; // Now delete the orphans.\n\n    orphans.forEach(id => {\n      hmrDelete(module.bundle.root, id);\n    });\n  } else if (bundle.parent) {\n    hmrDelete(bundle.parent, id);\n  }\n}\n\nfunction hmrAcceptCheck(bundle\n/*: ParcelRequire */\n, id\n/*: string */\n, depsByBundle\n/*: ?{ [string]: { [string]: string } }*/\n) {\n  if (hmrAcceptCheckOne(bundle, id, depsByBundle)) {\n    return true;\n  } // Traverse parents breadth first. All possible ancestries must accept the HMR update, or we'll reload.\n\n\n  let parents = getParents(module.bundle.root, id);\n  let accepted = false;\n\n  while (parents.length > 0) {\n    let v = parents.shift();\n    let a = hmrAcceptCheckOne(v[0], v[1], null);\n\n    if (a) {\n      // If this parent accepts, stop traversing upward, but still consider siblings.\n      accepted = true;\n    } else {\n      // Otherwise, queue the parents in the next level upward.\n      let p = getParents(module.bundle.root, v[1]);\n\n      if (p.length === 0) {\n        // If there are no parents, then we've reached an entry without accepting. Reload.\n        accepted = false;\n        break;\n      }\n\n      parents.push(...p);\n    }\n  }\n\n  return accepted;\n}\n\nfunction hmrAcceptCheckOne(bundle\n/*: ParcelRequire */\n, id\n/*: string */\n, depsByBundle\n/*: ?{ [string]: { [string]: string } }*/\n) {\n  var modules = bundle.modules;\n\n  if (!modules) {\n    return;\n  }\n\n  if (depsByBundle && !depsByBundle[bundle.HMR_BUNDLE_ID]) {\n    // If we reached the root bundle without finding where the asset should go,\n    // there's nothing to do. Mark as \"accepted\" so we don't reload the page.\n    if (!bundle.parent) {\n      return true;\n    }\n\n    return hmrAcceptCheck(bundle.parent, id, depsByBundle);\n  }\n\n  if (checkedAssets[id]) {\n    return true;\n  }\n\n  checkedAssets[id] = true;\n  var cached = bundle.cache[id];\n  assetsToDispose.push([bundle, id]);\n\n  if (!cached || cached.hot && cached.hot._acceptCallbacks.length) {\n    assetsToAccept.push([bundle, id]);\n    return true;\n  }\n}\n\nfunction hmrDispose(bundle\n/*: ParcelRequire */\n, id\n/*: string */\n) {\n  var cached = bundle.cache[id];\n  bundle.hotData[id] = {};\n\n  if (cached && cached.hot) {\n    cached.hot.data = bundle.hotData[id];\n  }\n\n  if (cached && cached.hot && cached.hot._disposeCallbacks.length) {\n    cached.hot._disposeCallbacks.forEach(function (cb) {\n      cb(bundle.hotData[id]);\n    });\n  }\n\n  delete bundle.cache[id];\n}\n\nfunction hmrAccept(bundle\n/*: ParcelRequire */\n, id\n/*: string */\n) {\n  // Execute the module.\n  bundle(id); // Run the accept callbacks in the new version of the module.\n\n  var cached = bundle.cache[id];\n\n  if (cached && cached.hot && cached.hot._acceptCallbacks.length) {\n    cached.hot._acceptCallbacks.forEach(function (cb) {\n      var assetsToAlsoAccept = cb(function () {\n        return getParents(module.bundle.root, id);\n      });\n\n      if (assetsToAlsoAccept && assetsToAccept.length) {\n        assetsToAlsoAccept.forEach(function (a) {\n          hmrDispose(a[0], a[1]);\n        }); // $FlowFixMe[method-unbinding]\n\n        assetsToAccept.push.apply(assetsToAccept, assetsToAlsoAccept);\n      }\n    });\n  }\n}","import { tsParticles } from \"tsparticles\";\r\n// console.log(\"sdsds\");\r\n// console.log(tsParticles);\r\n\r\n// await loadLinksPreset(tsParticles); // this is required only if you are not using the bundle script\r\n\r\ntsParticles.load(\"tsparticles\", {\r\n  fps_limit: 60,\r\n  interactivity: {\r\n    detect_on: \"canvas\",\r\n    events: {\r\n      onclick: { enable: true, mode: \"push\" },\r\n      onhover: {\r\n        enable: true,\r\n        mode: \"repulse\",\r\n        parallax: { enable: true, force: 60, smooth: 10 },\r\n      },\r\n      resize: true,\r\n    },\r\n    modes: {\r\n      bubble: {\r\n        distance: 400,\r\n        duration: 2,\r\n        opacity: 0.8,\r\n        size: 40,\r\n        speed: 3,\r\n      },\r\n      grab: { distance: 400, line_linked: { opacity: 1 } },\r\n      push: { particles_nb: 4 },\r\n      remove: { particles_nb: 2 },\r\n      repulse: { distance: 200, duration: 0.4 },\r\n    },\r\n  },\r\n  particles: {\r\n    color: { value: \"#ffffff\" },\r\n    line_linked: {\r\n      color: \"#ffffff\",\r\n      distance: 150,\r\n      enable: true,\r\n      opacity: 0.4,\r\n      width: 1,\r\n    },\r\n    move: {\r\n      bounce: false,\r\n      direction: \"none\",\r\n      enable: true,\r\n      outModes: \"out\",\r\n      random: false,\r\n      speed: 2,\r\n      straight: false,\r\n    },\r\n    number: { density: { enable: true, value_area: 800 }, value: 80 },\r\n    opacity: {\r\n      anim: { enable: false, opacity_min: 0.1, speed: 1, sync: false },\r\n      random: false,\r\n      value: 0.5,\r\n    },\r\n    shape: {\r\n      character: {\r\n        fill: false,\r\n        font: \"Verdana\",\r\n        style: \"\",\r\n        value: \"*\",\r\n        weight: \"400\",\r\n      },\r\n      image: {\r\n        height: 100,\r\n        replace_color: true,\r\n        src: \"images/github.svg\",\r\n        width: 100,\r\n      },\r\n      polygon: { nb_sides: 5 },\r\n      stroke: { color: \"#000000\", width: 0 },\r\n      type: \"circle\",\r\n    },\r\n    size: {\r\n      anim: { enable: false, size_min: 0.1, speed: 40, sync: false },\r\n      random: true,\r\n      value: 5,\r\n    },\r\n  },\r\n  polygon: {\r\n    draw: { enable: false, lineColor: \"#ffffff\", lineWidth: 0.5 },\r\n    move: { radius: 10 },\r\n    scale: 1,\r\n    type: \"none\",\r\n    url: \"\",\r\n  },\r\n  retina_detect: true,\r\n});\r\n\r\nconst typewriter = document.querySelector(\".heading__typewriter\");\r\n\r\nconst sleep = function (ms) {\r\n  return new Promise((resolve) => setTimeout(resolve, ms));\r\n};\r\n\r\nconst phrases = [\"Web-kehittäjä\", \"Front-end kehittäjä\", \"Web-suunnittelija\"];\r\n\r\nlet sleepTime = 100;\r\n\r\nlet curPhraseIndex = 0;\r\n\r\nconst writeLoop = async () => {\r\n  while (true) {\r\n    let curWord = phrases[curPhraseIndex];\r\n\r\n    for (let i = 0; i < curWord.length; i++) {\r\n      typewriter.innerText = curWord.substring(0, i + 1);\r\n      await sleep(sleepTime);\r\n    }\r\n\r\n    await sleep(sleepTime * 20);\r\n\r\n    for (let i = curWord.length; i > 0; i--) {\r\n      typewriter.innerText = curWord.substring(0, i - 1);\r\n      await sleep(sleepTime);\r\n    }\r\n    await sleep(sleepTime * 5);\r\n\r\n    if (curPhraseIndex === phrases.length - 1) {\r\n      curPhraseIndex = 0;\r\n    } else {\r\n      curPhraseIndex++;\r\n    }\r\n  }\r\n};\r\n\r\nwriteLoop();\r\n","import { loadAbsorbersPlugin } from \"tsparticles-plugin-absorbers\";\nimport { loadDestroyUpdater } from \"tsparticles-updater-destroy\";\nimport { loadEmittersPlugin } from \"tsparticles-plugin-emitters\";\nimport { loadExternalTrailInteraction } from \"tsparticles-interaction-external-trail\";\nimport { loadRollUpdater } from \"tsparticles-updater-roll\";\nimport { loadSlim } from \"tsparticles-slim\";\nimport { loadTiltUpdater } from \"tsparticles-updater-tilt\";\nimport { loadTwinkleUpdater } from \"tsparticles-updater-twinkle\";\nimport { loadWobbleUpdater } from \"tsparticles-updater-wobble\";\nexport async function loadFull(engine) {\n    await loadSlim(engine);\n    await loadDestroyUpdater(engine);\n    await loadRollUpdater(engine);\n    await loadTiltUpdater(engine);\n    await loadTwinkleUpdater(engine);\n    await loadWobbleUpdater(engine);\n    await loadExternalTrailInteraction(engine);\n    await loadAbsorbersPlugin(engine);\n    await loadEmittersPlugin(engine);\n}\n","import { executeOnSingleOrMultiple, isInArray } from \"tsparticles-engine\";\nimport { Absorber } from \"./Options/Classes/Absorber\";\nimport { Absorbers } from \"./Absorbers\";\nclass AbsorbersPlugin {\n    constructor() {\n        this.id = \"absorbers\";\n    }\n    getPlugin(container) {\n        return new Absorbers(container);\n    }\n    loadOptions(options, source) {\n        var _a, _b;\n        if (!this.needsPlugin(options) && !this.needsPlugin(source)) {\n            return;\n        }\n        if (source === null || source === void 0 ? void 0 : source.absorbers) {\n            options.absorbers = executeOnSingleOrMultiple(source.absorbers, (absorber) => {\n                const tmp = new Absorber();\n                tmp.load(absorber);\n                return tmp;\n            });\n        }\n        options.interactivity.modes.absorbers = executeOnSingleOrMultiple((_b = (_a = source === null || source === void 0 ? void 0 : source.interactivity) === null || _a === void 0 ? void 0 : _a.modes) === null || _b === void 0 ? void 0 : _b.absorbers, (absorber) => {\n            const tmp = new Absorber();\n            tmp.load(absorber);\n            return tmp;\n        });\n    }\n    needsPlugin(options) {\n        var _a, _b, _c;\n        if (!options) {\n            return false;\n        }\n        const absorbers = options.absorbers;\n        if (absorbers instanceof Array) {\n            return !!absorbers.length;\n        }\n        else if (absorbers) {\n            return true;\n        }\n        else if (((_c = (_b = (_a = options.interactivity) === null || _a === void 0 ? void 0 : _a.events) === null || _b === void 0 ? void 0 : _b.onClick) === null || _c === void 0 ? void 0 : _c.mode) &&\n            isInArray(\"absorber\", options.interactivity.events.onClick.mode)) {\n            return true;\n        }\n        return false;\n    }\n}\nexport async function loadAbsorbersPlugin(engine) {\n    const plugin = new AbsorbersPlugin();\n    await engine.addPlugin(plugin);\n}\nexport * from \"./AbsorberContainer\";\nexport * from \"./Enums/AbsorberClickMode\";\n","import { Engine } from \"./engine\";\nimport { HslColorManager } from \"./Utils/HslColorManager\";\nimport { RgbColorManager } from \"./Utils/RgbColorManager\";\nimport { addColorManager } from \"./Utils/ColorUtils\";\nconst rgbColorManager = new RgbColorManager(), hslColorManager = new HslColorManager();\naddColorManager(rgbColorManager);\naddColorManager(hslColorManager);\nconst tsParticles = new Engine();\ntsParticles.init();\nexport * from \"./Core/Interfaces/Colors\";\nexport * from \"./Core/Interfaces/IBounds\";\nexport * from \"./Core/Interfaces/IBubbleParticleData\";\nexport * from \"./Core/Interfaces/ICircleBouncer\";\nexport * from \"./Core/Interfaces/IColorManager\";\nexport * from \"./Core/Interfaces/IContainerInteractivity\";\nexport * from \"./Core/Interfaces/IContainerPlugin\";\nexport * from \"./Core/Interfaces/ICoordinates\";\nexport * from \"./Core/Interfaces/IDelta\";\nexport * from \"./Core/Interfaces/IDimension\";\nexport * from \"./Core/Interfaces/IDistance\";\nexport * from \"./Core/Interfaces/IExternalInteractor\";\nexport * from \"./Core/Interfaces/IInteractor\";\nexport * from \"./Core/Interfaces/IMouseData\";\nexport * from \"./Core/Interfaces/IMovePathGenerator\";\nexport * from \"./Core/Interfaces/IParticle\";\nexport * from \"./Core/Interfaces/IParticleColorStyle\";\nexport * from \"./Core/Interfaces/IParticleHslAnimation\";\nexport * from \"./Core/Interfaces/IParticlesInteractor\";\nexport * from \"./Core/Interfaces/IParticleLife\";\nexport * from \"./Core/Interfaces/IParticleRetinaProps\";\nexport * from \"./Core/Interfaces/IParticleRoll\";\nexport * from \"./Core/Interfaces/IParticleTransformValues\";\nexport * from \"./Core/Interfaces/IParticleUpdater\";\nexport * from \"./Core/Interfaces/IParticleValueAnimation\";\nexport * from \"./Core/Interfaces/IParticlesMover\";\nexport * from \"./Core/Interfaces/IPlugin\";\nexport * from \"./Core/Interfaces/IRangeValue\";\nexport * from \"./Core/Interfaces/IRectSideResult\";\nexport * from \"./Core/Interfaces/IShapeDrawer\";\nexport * from \"./Core/Interfaces/IShapeValues\";\nexport * from \"./Core/Interfaces/ISlowParticleData\";\nexport * from \"./Core/Utils/Circle\";\nexport * from \"./Core/Utils/Constants\";\nexport * from \"./Core/Utils/ExternalInteractorBase\";\nexport * from \"./Core/Utils/ParticlesInteractorBase\";\nexport * from \"./Core/Utils/Point\";\nexport * from \"./Core/Utils/Range\";\nexport * from \"./Core/Utils/Rectangle\";\nexport * from \"./Core/Utils/Vector\";\nexport * from \"./Core/Utils/Vector3d\";\nexport * from \"./Enums/Directions/MoveDirection\";\nexport * from \"./Enums/Directions/RotateDirection\";\nexport * from \"./Enums/Directions/OutModeDirection\";\nexport * from \"./Enums/Modes/ClickMode\";\nexport * from \"./Enums/Modes/DivMode\";\nexport * from \"./Enums/Modes/HoverMode\";\nexport * from \"./Enums/Modes/CollisionMode\";\nexport * from \"./Enums/Modes/OutMode\";\nexport * from \"./Enums/Modes/SizeMode\";\nexport * from \"./Enums/Modes/ThemeMode\";\nexport * from \"./Enums/Modes/ResponsiveMode\";\nexport * from \"./Enums/Types/AlterType\";\nexport * from \"./Enums/Types/DestroyType\";\nexport * from \"./Enums/Types/GradientType\";\nexport * from \"./Enums/Types/InteractorType\";\nexport * from \"./Enums/Types/ParticleOutType\";\nexport * from \"./Enums/Types/StartValueType\";\nexport * from \"./Enums/Types/DivType\";\nexport * from \"./Enums/Types/EasingType\";\nexport * from \"./Enums/Types/EventType\";\nexport * from \"./Enums/AnimationStatus\";\nexport * from \"./Enums/InteractivityDetect\";\nexport * from \"./Options/Classes/AnimatableColor\";\nexport * from \"./Options/Classes/AnimationOptions\";\nexport * from \"./Options/Classes/Background/Background\";\nexport * from \"./Options/Classes/BackgroundMask/BackgroundMask\";\nexport * from \"./Options/Classes/BackgroundMask/BackgroundMaskCover\";\nexport * from \"./Options/Classes/ColorAnimation\";\nexport * from \"./Options/Classes/FullScreen/FullScreen\";\nexport * from \"./Options/Classes/HslAnimation\";\nexport * from \"./Options/Classes/Interactivity/Events/ClickEvent\";\nexport * from \"./Options/Classes/Interactivity/Events/DivEvent\";\nexport * from \"./Options/Classes/Interactivity/Events/ClickEvent\";\nexport * from \"./Options/Classes/Interactivity/Events/DivEvent\";\nexport * from \"./Options/Classes/Interactivity/Events/Events\";\nexport * from \"./Options/Classes/Interactivity/Events/HoverEvent\";\nexport * from \"./Options/Classes/Interactivity/Events/Parallax\";\nexport * from \"./Options/Classes/Interactivity/Interactivity\";\nexport * from \"./Options/Classes/Interactivity/Modes/Modes\";\nexport * from \"./Options/Classes/ManualParticle\";\nexport * from \"./Options/Classes/Options\";\nexport * from \"./Options/Classes/OptionsColor\";\nexport * from \"./Options/Classes/Particles/Bounce/ParticlesBounce\";\nexport * from \"./Options/Classes/Particles/Bounce/ParticlesBounceFactor\";\nexport * from \"./Options/Classes/Particles/Collisions/Collisions\";\nexport * from \"./Options/Classes/Particles/Collisions/CollisionsOverlap\";\nexport * from \"./Options/Classes/Particles/ParticlesOptions\";\nexport * from \"./Options/Classes/Particles/Shadow\";\nexport * from \"./Options/Classes/Particles/Stroke\";\nexport * from \"./Options/Classes/Particles/Move/MoveAttract\";\nexport * from \"./Options/Classes/Particles/Move/Move\";\nexport * from \"./Options/Classes/Particles/Move/MoveAngle\";\nexport * from \"./Options/Classes/Particles/Move/MoveCenter\";\nexport * from \"./Options/Classes/Particles/Move/MoveGravity\";\nexport * from \"./Options/Classes/Particles/Move/OutModes\";\nexport * from \"./Options/Classes/Particles/Move/Path/MovePath\";\nexport * from \"./Options/Classes/Particles/Move/Spin\";\nexport * from \"./Options/Classes/Particles/Move/MoveTrail\";\nexport * from \"./Options/Classes/Particles/Number/ParticlesNumber\";\nexport * from \"./Options/Classes/Particles/Number/ParticlesDensity\";\nexport * from \"./Options/Classes/Particles/Opacity/Opacity\";\nexport * from \"./Options/Classes/Particles/Opacity/OpacityAnimation\";\nexport * from \"./Options/Classes/Particles/Shape/Shape\";\nexport * from \"./Options/Classes/Particles/Size/Size\";\nexport * from \"./Options/Classes/Particles/Size/SizeAnimation\";\nexport * from \"./Options/Classes/Particles/ZIndex/ZIndex\";\nexport * from \"./Options/Classes/Responsive\";\nexport * from \"./Options/Classes/Theme/Theme\";\nexport * from \"./Options/Classes/Theme/ThemeDefault\";\nexport * from \"./Options/Classes/ValueWithRandom\";\nexport * from \"./Options/Interfaces/Background/IBackground\";\nexport * from \"./Options/Interfaces/BackgroundMask/IBackgroundMask\";\nexport * from \"./Options/Interfaces/BackgroundMask/IBackgroundMaskCover\";\nexport * from \"./Options/Interfaces/FullScreen/IFullScreen\";\nexport * from \"./Options/Interfaces/IAnimatable\";\nexport * from \"./Options/Interfaces/IAnimatableColor\";\nexport * from \"./Options/Interfaces/IAnimation\";\nexport * from \"./Options/Interfaces/IColorAnimation\";\nexport * from \"./Options/Interfaces/IHslAnimation\";\nexport * from \"./Options/Interfaces/IManualParticle\";\nexport * from \"./Options/Interfaces/IOptionLoader\";\nexport * from \"./Options/Interfaces/IOptions\";\nexport * from \"./Options/Interfaces/IOptionsColor\";\nexport * from \"./Options/Interfaces/IResponsive\";\nexport * from \"./Options/Interfaces/IValueWithRandom\";\nexport * from \"./Options/Interfaces/Interactivity/Events/IClickEvent\";\nexport * from \"./Options/Interfaces/Interactivity/Events/IDivEvent\";\nexport * from \"./Options/Interfaces/Interactivity/Events/IEvents\";\nexport * from \"./Options/Interfaces/Interactivity/Events/IHoverEvent\";\nexport * from \"./Options/Interfaces/Interactivity/Events/IParallax\";\nexport * from \"./Options/Interfaces/Interactivity/Modes/IModeDiv\";\nexport * from \"./Options/Interfaces/Interactivity/Modes/IModes\";\nexport * from \"./Options/Interfaces/Interactivity/IInteractivity\";\nexport * from \"./Options/Interfaces/Particles/Bounce/IParticlesBounce\";\nexport * from \"./Options/Interfaces/Particles/Collisions/ICollisions\";\nexport * from \"./Options/Interfaces/Particles/Collisions/ICollisionsOverlap\";\nexport * from \"./Options/Interfaces/Particles/IParticlesOptions\";\nexport * from \"./Options/Interfaces/Particles/IShadow\";\nexport * from \"./Options/Interfaces/Particles/IStroke\";\nexport * from \"./Options/Interfaces/Particles/Move/IMoveAttract\";\nexport * from \"./Options/Interfaces/Particles/Move/IMove\";\nexport * from \"./Options/Interfaces/Particles/Move/IMoveAngle\";\nexport * from \"./Options/Interfaces/Particles/Move/IMoveCenter\";\nexport * from \"./Options/Interfaces/Particles/Move/IMoveGravity\";\nexport * from \"./Options/Interfaces/Particles/Move/Path/IMovePath\";\nexport * from \"./Options/Interfaces/Particles/Move/IOutModes\";\nexport * from \"./Options/Interfaces/Particles/Move/ISpin\";\nexport * from \"./Options/Interfaces/Particles/Move/IMoveTrail\";\nexport * from \"./Options/Interfaces/Particles/Number/IParticlesDensity\";\nexport * from \"./Options/Interfaces/Particles/Number/IParticlesNumber\";\nexport * from \"./Options/Interfaces/Particles/Opacity/IOpacity\";\nexport * from \"./Options/Interfaces/Particles/Opacity/IOpacityAnimation\";\nexport * from \"./Options/Interfaces/Particles/Shape/ICharacterShape\";\nexport * from \"./Options/Interfaces/Particles/Shape/IImageShape\";\nexport * from \"./Options/Interfaces/Particles/Shape/IPolygonShape\";\nexport * from \"./Options/Interfaces/Particles/Shape/IShape\";\nexport * from \"./Options/Interfaces/Particles/Shape/IShapeValues\";\nexport * from \"./Options/Interfaces/Particles/Shape/IStarShape\";\nexport * from \"./Options/Interfaces/Particles/Size/ISize\";\nexport * from \"./Options/Interfaces/Particles/Size/ISizeAnimation\";\nexport * from \"./Options/Interfaces/Particles/ZIndex/IZIndex\";\nexport * from \"./Options/Interfaces/Theme/ITheme\";\nexport * from \"./Options/Interfaces/Theme/IThemeDefault\";\nexport * from \"./Types/CustomEventArgs\";\nexport * from \"./Types/CustomEventListener\";\nexport * from \"./Types/ParticlesGroups\";\nexport * from \"./Types/PathOptions\";\nexport * from \"./Types/RangeValue\";\nexport * from \"./Types/RecursivePartial\";\nexport * from \"./Types/ShapeData\";\nexport * from \"./Types/ShapeDrawerFunctions\";\nexport * from \"./Types/SingleOrMultiple\";\nexport * from \"./Utils/CanvasUtils\";\nexport * from \"./Utils/ColorUtils\";\nexport * from \"./Utils/HslColorManager\";\nexport * from \"./Utils/NumberUtils\";\nexport * from \"./Utils/OptionsUtils\";\nexport * from \"./Utils/RgbColorManager\";\nexport * from \"./Utils/Utils\";\nexport { tsParticles };\nexport { CollisionsAbsorb } from \"./Options/Classes/Particles/Collisions/CollisionsAbsorb\";\nexport { ResizeEvent } from \"./Options/Classes/Interactivity/Events/ResizeEvent\";\n","import { EventDispatcher } from \"./Utils/EventDispatcher\";\nimport { Loader } from \"./Core/Loader\";\nimport { Plugins } from \"./Core/Utils/Plugins\";\nexport class Engine {\n    constructor() {\n        this._domArray = [];\n        this._eventDispatcher = new EventDispatcher();\n        this._initialized = false;\n        this._loader = new Loader(this);\n        this.plugins = new Plugins(this);\n    }\n    get version() {\n        return \"2.9.3\";\n    }\n    addEventListener(type, listener) {\n        this._eventDispatcher.addEventListener(type, listener);\n    }\n    async addInteractor(name, interactorInitializer) {\n        this.plugins.addInteractor(name, interactorInitializer);\n        await this.refresh();\n    }\n    async addMover(name, moverInitializer) {\n        this.plugins.addParticleMover(name, moverInitializer);\n        await this.refresh();\n    }\n    async addParticleUpdater(name, updaterInitializer) {\n        this.plugins.addParticleUpdater(name, updaterInitializer);\n        await this.refresh();\n    }\n    async addPathGenerator(name, generator) {\n        this.plugins.addPathGenerator(name, generator);\n        await this.refresh();\n    }\n    async addPlugin(plugin) {\n        this.plugins.addPlugin(plugin);\n        await this.refresh();\n    }\n    async addPreset(preset, options, override = false) {\n        this.plugins.addPreset(preset, options, override);\n        await this.refresh();\n    }\n    async addShape(shape, drawer, init, afterEffect, destroy) {\n        let customDrawer;\n        if (typeof drawer === \"function\") {\n            customDrawer = {\n                afterEffect: afterEffect,\n                destroy: destroy,\n                draw: drawer,\n                init: init,\n            };\n        }\n        else {\n            customDrawer = drawer;\n        }\n        this.plugins.addShapeDrawer(shape, customDrawer);\n        await this.refresh();\n    }\n    dispatchEvent(type, args) {\n        this._eventDispatcher.dispatchEvent(type, args);\n    }\n    dom() {\n        return this._domArray;\n    }\n    domItem(index) {\n        const dom = this.dom(), item = dom[index];\n        if (item && !item.destroyed) {\n            return item;\n        }\n        dom.splice(index, 1);\n    }\n    init() {\n        if (!this._initialized) {\n            this._initialized = true;\n        }\n    }\n    async load(tagId, options) {\n        return this._loader.load(tagId, options);\n    }\n    async loadFromArray(tagId, options, index) {\n        return this._loader.load(tagId, options, index);\n    }\n    async loadJSON(tagId, pathConfigJson, index) {\n        return this._loader.loadJSON(tagId, pathConfigJson, index);\n    }\n    async refresh() {\n        for (const instance of this.dom()) {\n            await instance.refresh();\n        }\n    }\n    removeEventListener(type, listener) {\n        this._eventDispatcher.removeEventListener(type, listener);\n    }\n    async set(id, element, options) {\n        return this._loader.set(id, element, options);\n    }\n    async setJSON(id, element, pathConfigJson, index) {\n        return this._loader.setJSON(id, element, pathConfigJson, index);\n    }\n    setOnClickHandler(callback) {\n        const dom = this.dom();\n        if (!dom.length) {\n            throw new Error(\"Can only set click handlers after calling tsParticles.load() or tsParticles.loadJSON()\");\n        }\n        for (const domItem of dom) {\n            domItem.addClickHandler(callback);\n        }\n    }\n}\n","export class EventDispatcher {\n    constructor() {\n        this._listeners = new Map();\n    }\n    addEventListener(type, listener) {\n        var _a;\n        this.removeEventListener(type, listener);\n        if (!this._listeners.get(type)) {\n            this._listeners.set(type, []);\n        }\n        (_a = this._listeners.get(type)) === null || _a === void 0 ? void 0 : _a.push(listener);\n    }\n    dispatchEvent(type, args) {\n        var _a;\n        (_a = this._listeners.get(type)) === null || _a === void 0 ? void 0 : _a.forEach((handler) => handler(args));\n    }\n    hasEventListener(type) {\n        return !!this._listeners.get(type);\n    }\n    removeAllEventListeners(type) {\n        if (!type) {\n            this._listeners = new Map();\n        }\n        else {\n            this._listeners.delete(type);\n        }\n    }\n    removeEventListener(type, listener) {\n        const arr = this._listeners.get(type);\n        if (!arr) {\n            return;\n        }\n        const length = arr.length, idx = arr.indexOf(listener);\n        if (idx < 0) {\n            return;\n        }\n        if (length === 1) {\n            this._listeners.delete(type);\n        }\n        else {\n            arr.splice(idx, 1);\n        }\n    }\n}\n","exports.interopDefault = function (a) {\n  return a && a.__esModule ? a : {default: a};\n};\n\nexports.defineInteropFlag = function (a) {\n  Object.defineProperty(a, '__esModule', {value: true});\n};\n\nexports.exportAll = function (source, dest) {\n  Object.keys(source).forEach(function (key) {\n    if (key === 'default' || key === '__esModule' || dest.hasOwnProperty(key)) {\n      return;\n    }\n\n    Object.defineProperty(dest, key, {\n      enumerable: true,\n      get: function () {\n        return source[key];\n      },\n    });\n  });\n\n  return dest;\n};\n\nexports.export = function (dest, destName, get) {\n  Object.defineProperty(dest, destName, {\n    enumerable: true,\n    get: get,\n  });\n};\n","import { Container } from \"./Container\";\nimport { generatedAttribute } from \"./Utils/Constants\";\nimport { getRandom } from \"../Utils/NumberUtils\";\nimport { itemFromSingleOrMultiple } from \"../Utils/Utils\";\nasync function getDataFromUrl(jsonUrl, index) {\n    const url = itemFromSingleOrMultiple(jsonUrl, index);\n    if (!url) {\n        return;\n    }\n    const response = await fetch(url);\n    if (response.ok) {\n        return response.json();\n    }\n    console.error(`tsParticles - Error ${response.status} while retrieving config file`);\n}\nexport class Loader {\n    constructor(engine) {\n        this._engine = engine;\n    }\n    load(tagId, options, index) {\n        const params = { index, remote: false };\n        if (typeof tagId === \"string\") {\n            params.tagId = tagId;\n        }\n        else {\n            params.options = tagId;\n        }\n        if (typeof options === \"number\") {\n            params.index = options;\n        }\n        else {\n            params.options = options !== null && options !== void 0 ? options : params.options;\n        }\n        return this.loadOptions(params);\n    }\n    async loadJSON(tagId, jsonUrl, index) {\n        let url, id;\n        if (typeof jsonUrl === \"number\" || jsonUrl === undefined) {\n            url = tagId;\n        }\n        else {\n            id = tagId;\n            url = jsonUrl;\n        }\n        return this.loadRemoteOptions({ tagId: id, url, index, remote: true });\n    }\n    async loadOptions(params) {\n        var _a, _b, _c;\n        const tagId = (_a = params.tagId) !== null && _a !== void 0 ? _a : `tsparticles${Math.floor(getRandom() * 10000)}`, { index, url: jsonUrl, remote } = params, options = remote ? await getDataFromUrl(jsonUrl, index) : params.options;\n        let domContainer = (_b = params.element) !== null && _b !== void 0 ? _b : document.getElementById(tagId);\n        if (!domContainer) {\n            domContainer = document.createElement(\"div\");\n            domContainer.id = tagId;\n            (_c = document.querySelector(\"body\")) === null || _c === void 0 ? void 0 : _c.append(domContainer);\n        }\n        const currentOptions = itemFromSingleOrMultiple(options, index), dom = this._engine.dom(), oldIndex = dom.findIndex((v) => v.id === tagId);\n        if (oldIndex >= 0) {\n            const old = this._engine.domItem(oldIndex);\n            if (old && !old.destroyed) {\n                old.destroy();\n                dom.splice(oldIndex, 1);\n            }\n        }\n        let canvasEl;\n        if (domContainer.tagName.toLowerCase() === \"canvas\") {\n            canvasEl = domContainer;\n            canvasEl.dataset[generatedAttribute] = \"false\";\n        }\n        else {\n            const existingCanvases = domContainer.getElementsByTagName(\"canvas\");\n            if (existingCanvases.length) {\n                canvasEl = existingCanvases[0];\n                canvasEl.dataset[generatedAttribute] = \"false\";\n            }\n            else {\n                canvasEl = document.createElement(\"canvas\");\n                canvasEl.dataset[generatedAttribute] = \"true\";\n                domContainer.appendChild(canvasEl);\n            }\n        }\n        if (!canvasEl.style.width) {\n            canvasEl.style.width = \"100%\";\n        }\n        if (!canvasEl.style.height) {\n            canvasEl.style.height = \"100%\";\n        }\n        const newItem = new Container(this._engine, tagId, currentOptions);\n        if (oldIndex >= 0) {\n            dom.splice(oldIndex, 0, newItem);\n        }\n        else {\n            dom.push(newItem);\n        }\n        newItem.canvas.loadCanvas(canvasEl);\n        await newItem.start();\n        return newItem;\n    }\n    async loadRemoteOptions(params) {\n        return this.loadOptions(params);\n    }\n    async set(id, domContainer, options, index) {\n        const params = { index, remote: false };\n        if (typeof id === \"string\") {\n            params.tagId = id;\n        }\n        else {\n            params.element = id;\n        }\n        if (domContainer instanceof HTMLElement) {\n            params.element = domContainer;\n        }\n        else {\n            params.options = domContainer;\n        }\n        if (typeof options === \"number\") {\n            params.index = options;\n        }\n        else {\n            params.options = options !== null && options !== void 0 ? options : params.options;\n        }\n        return this.loadOptions(params);\n    }\n    async setJSON(id, domContainer, jsonUrl, index) {\n        let url, newId, newIndex, element;\n        if (id instanceof HTMLElement) {\n            element = id;\n            url = domContainer;\n            newIndex = jsonUrl;\n        }\n        else {\n            newId = id;\n            element = domContainer;\n            url = jsonUrl;\n            newIndex = index;\n        }\n        return this.loadRemoteOptions({ tagId: newId, url, index: newIndex, element, remote: true });\n    }\n}\n","import { animate, cancelAnimation } from \"../Utils/Utils\";\nimport { Canvas } from \"./Canvas\";\nimport { EventListeners } from \"./Utils/EventListeners\";\nimport { FrameManager } from \"./Utils/FrameManager\";\nimport { Options } from \"../Options/Classes/Options\";\nimport { Particles } from \"./Particles\";\nimport { Retina } from \"./Retina\";\nimport { getRangeValue } from \"../Utils/NumberUtils\";\nimport { loadOptions } from \"../Utils/OptionsUtils\";\nfunction guardCheck(container) {\n    return container && !container.destroyed;\n}\nfunction loadContainerOptions(engine, container, ...sourceOptionsArr) {\n    const options = new Options(engine, container);\n    loadOptions(options, ...sourceOptionsArr);\n    return options;\n}\nconst defaultPathGeneratorKey = \"default\", defaultPathGenerator = {\n    generate: (p) => {\n        const v = p.velocity.copy();\n        v.angle += (v.length * Math.PI) / 180;\n        return v;\n    },\n    init: () => {\n    },\n    update: () => {\n    },\n    reset: () => {\n    },\n};\nexport class Container {\n    constructor(engine, id, sourceOptions) {\n        this.id = id;\n        this._engine = engine;\n        this.fpsLimit = 120;\n        this.smooth = false;\n        this._delay = 0;\n        this.duration = 0;\n        this.lifeTime = 0;\n        this._firstStart = true;\n        this.started = false;\n        this.destroyed = false;\n        this._paused = true;\n        this.lastFrameTime = 0;\n        this.zLayers = 100;\n        this.pageHidden = false;\n        this._sourceOptions = sourceOptions;\n        this._initialSourceOptions = sourceOptions;\n        this.retina = new Retina(this);\n        this.canvas = new Canvas(this);\n        this.particles = new Particles(this._engine, this);\n        this.frameManager = new FrameManager(this);\n        this.pathGenerators = new Map();\n        this.interactivity = {\n            mouse: {\n                clicking: false,\n                inside: false,\n            },\n        };\n        this.plugins = new Map();\n        this.drawers = new Map();\n        this._options = loadContainerOptions(this._engine, this);\n        this.actualOptions = loadContainerOptions(this._engine, this);\n        this._eventListeners = new EventListeners(this);\n        if (typeof IntersectionObserver !== \"undefined\" && IntersectionObserver) {\n            this._intersectionObserver = new IntersectionObserver((entries) => this._intersectionManager(entries));\n        }\n        this._engine.dispatchEvent(\"containerBuilt\", { container: this });\n    }\n    get options() {\n        return this._options;\n    }\n    get sourceOptions() {\n        return this._sourceOptions;\n    }\n    addClickHandler(callback) {\n        if (!guardCheck(this)) {\n            return;\n        }\n        const el = this.interactivity.element;\n        if (!el) {\n            return;\n        }\n        const clickOrTouchHandler = (e, pos, radius) => {\n            if (!guardCheck(this)) {\n                return;\n            }\n            const pxRatio = this.retina.pixelRatio, posRetina = {\n                x: pos.x * pxRatio,\n                y: pos.y * pxRatio,\n            }, particles = this.particles.quadTree.queryCircle(posRetina, radius * pxRatio);\n            callback(e, particles);\n        };\n        const clickHandler = (e) => {\n            if (!guardCheck(this)) {\n                return;\n            }\n            const mouseEvent = e, pos = {\n                x: mouseEvent.offsetX || mouseEvent.clientX,\n                y: mouseEvent.offsetY || mouseEvent.clientY,\n            };\n            clickOrTouchHandler(e, pos, 1);\n        };\n        const touchStartHandler = () => {\n            if (!guardCheck(this)) {\n                return;\n            }\n            touched = true;\n            touchMoved = false;\n        };\n        const touchMoveHandler = () => {\n            if (!guardCheck(this)) {\n                return;\n            }\n            touchMoved = true;\n        };\n        const touchEndHandler = (e) => {\n            if (!guardCheck(this)) {\n                return;\n            }\n            if (touched && !touchMoved) {\n                const touchEvent = e;\n                let lastTouch = touchEvent.touches[touchEvent.touches.length - 1];\n                if (!lastTouch) {\n                    lastTouch = touchEvent.changedTouches[touchEvent.changedTouches.length - 1];\n                    if (!lastTouch) {\n                        return;\n                    }\n                }\n                const element = this.canvas.element, canvasRect = element ? element.getBoundingClientRect() : undefined, pos = {\n                    x: lastTouch.clientX - (canvasRect ? canvasRect.left : 0),\n                    y: lastTouch.clientY - (canvasRect ? canvasRect.top : 0),\n                };\n                clickOrTouchHandler(e, pos, Math.max(lastTouch.radiusX, lastTouch.radiusY));\n            }\n            touched = false;\n            touchMoved = false;\n        };\n        const touchCancelHandler = () => {\n            if (!guardCheck(this)) {\n                return;\n            }\n            touched = false;\n            touchMoved = false;\n        };\n        let touched = false, touchMoved = false;\n        el.addEventListener(\"click\", clickHandler);\n        el.addEventListener(\"touchstart\", touchStartHandler);\n        el.addEventListener(\"touchmove\", touchMoveHandler);\n        el.addEventListener(\"touchend\", touchEndHandler);\n        el.addEventListener(\"touchcancel\", touchCancelHandler);\n    }\n    addPath(key, generator, override = false) {\n        if (!guardCheck(this) || (!override && this.pathGenerators.has(key))) {\n            return false;\n        }\n        this.pathGenerators.set(key, generator !== null && generator !== void 0 ? generator : defaultPathGenerator);\n        return true;\n    }\n    destroy() {\n        if (!guardCheck(this)) {\n            return;\n        }\n        this.stop();\n        this.particles.destroy();\n        this.canvas.destroy();\n        for (const [, drawer] of this.drawers) {\n            if (drawer.destroy) {\n                drawer.destroy(this);\n            }\n        }\n        for (const key of this.drawers.keys()) {\n            this.drawers.delete(key);\n        }\n        this._engine.plugins.destroy(this);\n        this.destroyed = true;\n        const mainArr = this._engine.dom(), idx = mainArr.findIndex((t) => t === this);\n        if (idx >= 0) {\n            mainArr.splice(idx, 1);\n        }\n        this._engine.dispatchEvent(\"containerDestroyed\", { container: this });\n    }\n    draw(force) {\n        if (!guardCheck(this)) {\n            return;\n        }\n        let refreshTime = force;\n        this._drawAnimationFrame = animate()(async (timestamp) => {\n            if (refreshTime) {\n                this.lastFrameTime = undefined;\n                refreshTime = false;\n            }\n            await this.frameManager.nextFrame(timestamp);\n        });\n    }\n    exportConfiguration() {\n        return JSON.stringify(this.actualOptions, (key, value) => {\n            if (key === \"_engine\" || key === \"_container\") {\n                return;\n            }\n            return value;\n        }, 2);\n    }\n    exportImage(callback, type, quality) {\n        const element = this.canvas.element;\n        if (element) {\n            element.toBlob(callback, type !== null && type !== void 0 ? type : \"image/png\", quality);\n        }\n    }\n    exportImg(callback) {\n        this.exportImage(callback);\n    }\n    getAnimationStatus() {\n        return !this._paused && !this.pageHidden && guardCheck(this);\n    }\n    handleClickMode(mode) {\n        if (!guardCheck(this)) {\n            return;\n        }\n        this.particles.handleClickMode(mode);\n        for (const [, plugin] of this.plugins) {\n            if (plugin.handleClickMode) {\n                plugin.handleClickMode(mode);\n            }\n        }\n    }\n    async init() {\n        if (!guardCheck(this)) {\n            return;\n        }\n        const shapes = this._engine.plugins.getSupportedShapes();\n        for (const type of shapes) {\n            const drawer = this._engine.plugins.getShapeDrawer(type);\n            if (drawer) {\n                this.drawers.set(type, drawer);\n            }\n        }\n        this._options = loadContainerOptions(this._engine, this, this._initialSourceOptions, this.sourceOptions);\n        this.actualOptions = loadContainerOptions(this._engine, this, this._options);\n        const availablePlugins = this._engine.plugins.getAvailablePlugins(this);\n        for (const [id, plugin] of availablePlugins) {\n            this.plugins.set(id, plugin);\n        }\n        this.retina.init();\n        await this.canvas.init();\n        this.updateActualOptions();\n        this.canvas.initBackground();\n        this.canvas.resize();\n        this.zLayers = this.actualOptions.zLayers;\n        this.duration = getRangeValue(this.actualOptions.duration) * 1000;\n        this._delay = getRangeValue(this.actualOptions.delay) * 1000;\n        this.lifeTime = 0;\n        this.fpsLimit = this.actualOptions.fpsLimit > 0 ? this.actualOptions.fpsLimit : 120;\n        this.smooth = this.actualOptions.smooth;\n        for (const [, drawer] of this.drawers) {\n            if (drawer.init) {\n                await drawer.init(this);\n            }\n        }\n        for (const [, plugin] of this.plugins) {\n            if (plugin.init) {\n                await plugin.init();\n            }\n        }\n        this._engine.dispatchEvent(\"containerInit\", { container: this });\n        this.particles.init();\n        this.particles.setDensity();\n        for (const [, plugin] of this.plugins) {\n            if (plugin.particlesSetup) {\n                plugin.particlesSetup();\n            }\n        }\n        this._engine.dispatchEvent(\"particlesSetup\", { container: this });\n    }\n    async loadTheme(name) {\n        if (!guardCheck(this)) {\n            return;\n        }\n        this._currentTheme = name;\n        await this.refresh();\n    }\n    pause() {\n        if (!guardCheck(this)) {\n            return;\n        }\n        if (this._drawAnimationFrame !== undefined) {\n            cancelAnimation()(this._drawAnimationFrame);\n            delete this._drawAnimationFrame;\n        }\n        if (this._paused) {\n            return;\n        }\n        for (const [, plugin] of this.plugins) {\n            if (plugin.pause) {\n                plugin.pause();\n            }\n        }\n        if (!this.pageHidden) {\n            this._paused = true;\n        }\n        this._engine.dispatchEvent(\"containerPaused\", { container: this });\n    }\n    play(force) {\n        if (!guardCheck(this)) {\n            return;\n        }\n        const needsUpdate = this._paused || force;\n        if (this._firstStart && !this.actualOptions.autoPlay) {\n            this._firstStart = false;\n            return;\n        }\n        if (this._paused) {\n            this._paused = false;\n        }\n        if (needsUpdate) {\n            for (const [, plugin] of this.plugins) {\n                if (plugin.play) {\n                    plugin.play();\n                }\n            }\n        }\n        this._engine.dispatchEvent(\"containerPlay\", { container: this });\n        this.draw(needsUpdate || false);\n    }\n    async refresh() {\n        if (!guardCheck(this)) {\n            return;\n        }\n        this.stop();\n        return this.start();\n    }\n    async reset() {\n        if (!guardCheck(this)) {\n            return;\n        }\n        this._options = loadContainerOptions(this._engine, this);\n        return this.refresh();\n    }\n    setNoise(noiseOrGenerator, init, update) {\n        if (!guardCheck(this)) {\n            return;\n        }\n        this.setPath(noiseOrGenerator, init, update);\n    }\n    setPath(pathOrGenerator, init, update) {\n        if (!pathOrGenerator || !guardCheck(this)) {\n            return;\n        }\n        const pathGenerator = Object.assign({}, defaultPathGenerator);\n        if (typeof pathOrGenerator === \"function\") {\n            pathGenerator.generate = pathOrGenerator;\n            if (init) {\n                pathGenerator.init = init;\n            }\n            if (update) {\n                pathGenerator.update = update;\n            }\n        }\n        else {\n            const oldGenerator = pathGenerator;\n            pathGenerator.generate = pathOrGenerator.generate || oldGenerator.generate;\n            pathGenerator.init = pathOrGenerator.init || oldGenerator.init;\n            pathGenerator.update = pathOrGenerator.update || oldGenerator.update;\n        }\n        this.addPath(defaultPathGeneratorKey, pathGenerator, true);\n    }\n    async start() {\n        if (!guardCheck(this) || this.started) {\n            return;\n        }\n        await this.init();\n        this.started = true;\n        await new Promise((resolve) => {\n            this._delayTimeout = setTimeout(async () => {\n                this._eventListeners.addListeners();\n                if (this.interactivity.element instanceof HTMLElement && this._intersectionObserver) {\n                    this._intersectionObserver.observe(this.interactivity.element);\n                }\n                for (const [, plugin] of this.plugins) {\n                    if (plugin.start) {\n                        await plugin.start();\n                    }\n                }\n                this._engine.dispatchEvent(\"containerStarted\", { container: this });\n                this.play();\n                resolve();\n            }, this._delay);\n        });\n    }\n    stop() {\n        if (!guardCheck(this) || !this.started) {\n            return;\n        }\n        if (this._delayTimeout) {\n            clearTimeout(this._delayTimeout);\n            delete this._delayTimeout;\n        }\n        this._firstStart = true;\n        this.started = false;\n        this._eventListeners.removeListeners();\n        this.pause();\n        this.particles.clear();\n        this.canvas.stop();\n        if (this.interactivity.element instanceof HTMLElement && this._intersectionObserver) {\n            this._intersectionObserver.unobserve(this.interactivity.element);\n        }\n        for (const [, plugin] of this.plugins) {\n            if (plugin.stop) {\n                plugin.stop();\n            }\n        }\n        for (const key of this.plugins.keys()) {\n            this.plugins.delete(key);\n        }\n        this._sourceOptions = this._options;\n        this._engine.dispatchEvent(\"containerStopped\", { container: this });\n    }\n    updateActualOptions() {\n        this.actualOptions.responsive = [];\n        const newMaxWidth = this.actualOptions.setResponsive(this.canvas.size.width, this.retina.pixelRatio, this._options);\n        this.actualOptions.setTheme(this._currentTheme);\n        if (this.responsiveMaxWidth === newMaxWidth) {\n            return false;\n        }\n        this.responsiveMaxWidth = newMaxWidth;\n        return true;\n    }\n    _intersectionManager(entries) {\n        if (!guardCheck(this) || !this.actualOptions.pauseOnOutsideViewport) {\n            return;\n        }\n        for (const entry of entries) {\n            if (entry.target !== this.interactivity.element) {\n                continue;\n            }\n            (entry.isIntersecting ? this.play : this.pause)();\n        }\n    }\n}\n","import { collisionVelocity, getDistances, getRandom, getValue } from \"./NumberUtils\";\nimport { Vector } from \"../Core/Utils/Vector\";\nfunction rectSideBounce(pSide, pOtherSide, rectSide, rectOtherSide, velocity, factor) {\n    const res = { bounced: false };\n    if (pOtherSide.min < rectOtherSide.min ||\n        pOtherSide.min > rectOtherSide.max ||\n        pOtherSide.max < rectOtherSide.min ||\n        pOtherSide.max > rectOtherSide.max) {\n        return res;\n    }\n    if ((pSide.max >= rectSide.min && pSide.max <= (rectSide.max + rectSide.min) / 2 && velocity > 0) ||\n        (pSide.min <= rectSide.max && pSide.min > (rectSide.max + rectSide.min) / 2 && velocity < 0)) {\n        res.velocity = velocity * -factor;\n        res.bounced = true;\n    }\n    return res;\n}\nfunction checkSelector(element, selectors) {\n    const res = executeOnSingleOrMultiple(selectors, (selector) => {\n        return element.matches(selector);\n    });\n    return res instanceof Array ? res.some((t) => t) : res;\n}\nexport function isSsr() {\n    return typeof window === \"undefined\" || !window || typeof window.document === \"undefined\" || !window.document;\n}\nexport function hasMatchMedia() {\n    return !isSsr() && typeof matchMedia !== \"undefined\";\n}\nexport function safeMatchMedia(query) {\n    if (!hasMatchMedia()) {\n        return;\n    }\n    return matchMedia(query);\n}\nexport function animate() {\n    return isSsr()\n        ? (callback) => setTimeout(callback)\n        : (callback) => (requestAnimationFrame || setTimeout)(callback);\n}\nexport function cancelAnimation() {\n    return isSsr()\n        ? (handle) => clearTimeout(handle)\n        : (handle) => (cancelAnimationFrame || clearTimeout)(handle);\n}\nexport function isInArray(value, array) {\n    return value === array || (array instanceof Array && array.indexOf(value) > -1);\n}\nexport async function loadFont(font, weight) {\n    try {\n        await document.fonts.load(`${weight !== null && weight !== void 0 ? weight : \"400\"} 36px '${font !== null && font !== void 0 ? font : \"Verdana\"}'`);\n    }\n    catch (_a) {\n    }\n}\nexport function arrayRandomIndex(array) {\n    return Math.floor(getRandom() * array.length);\n}\nexport function itemFromArray(array, index, useIndex = true) {\n    return array[index !== undefined && useIndex ? index % array.length : arrayRandomIndex(array)];\n}\nexport function isPointInside(point, size, offset, radius, direction) {\n    return areBoundsInside(calculateBounds(point, radius !== null && radius !== void 0 ? radius : 0), size, offset, direction);\n}\nexport function areBoundsInside(bounds, size, offset, direction) {\n    let inside = true;\n    if (!direction || direction === \"bottom\") {\n        inside = bounds.top < size.height + offset.x;\n    }\n    if (inside && (!direction || direction === \"left\")) {\n        inside = bounds.right > offset.x;\n    }\n    if (inside && (!direction || direction === \"right\")) {\n        inside = bounds.left < size.width + offset.y;\n    }\n    if (inside && (!direction || direction === \"top\")) {\n        inside = bounds.bottom > offset.y;\n    }\n    return inside;\n}\nexport function calculateBounds(point, radius) {\n    return {\n        bottom: point.y + radius,\n        left: point.x - radius,\n        right: point.x + radius,\n        top: point.y - radius,\n    };\n}\nexport function deepExtend(destination, ...sources) {\n    for (const source of sources) {\n        if (source === undefined || source === null) {\n            continue;\n        }\n        if (typeof source !== \"object\") {\n            destination = source;\n            continue;\n        }\n        const sourceIsArray = Array.isArray(source);\n        if (sourceIsArray && (typeof destination !== \"object\" || !destination || !Array.isArray(destination))) {\n            destination = [];\n        }\n        else if (!sourceIsArray && (typeof destination !== \"object\" || !destination || Array.isArray(destination))) {\n            destination = {};\n        }\n        for (const key in source) {\n            if (key === \"__proto__\") {\n                continue;\n            }\n            const sourceDict = source, value = sourceDict[key], isObject = typeof value === \"object\", destDict = destination;\n            destDict[key] =\n                isObject && Array.isArray(value)\n                    ? value.map((v) => deepExtend(destDict[key], v))\n                    : deepExtend(destDict[key], value);\n        }\n    }\n    return destination;\n}\nexport function isDivModeEnabled(mode, divs) {\n    return !!findItemFromSingleOrMultiple(divs, (t) => t.enable && isInArray(mode, t.mode));\n}\nexport function divModeExecute(mode, divs, callback) {\n    executeOnSingleOrMultiple(divs, (div) => {\n        const divMode = div.mode, divEnabled = div.enable;\n        if (divEnabled && isInArray(mode, divMode)) {\n            singleDivModeExecute(div, callback);\n        }\n    });\n}\nexport function singleDivModeExecute(div, callback) {\n    const selectors = div.selectors;\n    executeOnSingleOrMultiple(selectors, (selector) => {\n        callback(selector, div);\n    });\n}\nexport function divMode(divs, element) {\n    if (!element || !divs) {\n        return;\n    }\n    return findItemFromSingleOrMultiple(divs, (div) => {\n        return checkSelector(element, div.selectors);\n    });\n}\nexport function circleBounceDataFromParticle(p) {\n    return {\n        position: p.getPosition(),\n        radius: p.getRadius(),\n        mass: p.getMass(),\n        velocity: p.velocity,\n        factor: Vector.create(getValue(p.options.bounce.horizontal), getValue(p.options.bounce.vertical)),\n    };\n}\nexport function circleBounce(p1, p2) {\n    const { x: xVelocityDiff, y: yVelocityDiff } = p1.velocity.sub(p2.velocity), [pos1, pos2] = [p1.position, p2.position], { dx: xDist, dy: yDist } = getDistances(pos2, pos1);\n    if (xVelocityDiff * xDist + yVelocityDiff * yDist < 0) {\n        return;\n    }\n    const angle = -Math.atan2(yDist, xDist), m1 = p1.mass, m2 = p2.mass, u1 = p1.velocity.rotate(angle), u2 = p2.velocity.rotate(angle), v1 = collisionVelocity(u1, u2, m1, m2), v2 = collisionVelocity(u2, u1, m1, m2), vFinal1 = v1.rotate(-angle), vFinal2 = v2.rotate(-angle);\n    p1.velocity.x = vFinal1.x * p1.factor.x;\n    p1.velocity.y = vFinal1.y * p1.factor.y;\n    p2.velocity.x = vFinal2.x * p2.factor.x;\n    p2.velocity.y = vFinal2.y * p2.factor.y;\n}\nexport function rectBounce(particle, divBounds) {\n    const pPos = particle.getPosition(), size = particle.getRadius(), bounds = calculateBounds(pPos, size), resH = rectSideBounce({\n        min: bounds.left,\n        max: bounds.right,\n    }, {\n        min: bounds.top,\n        max: bounds.bottom,\n    }, {\n        min: divBounds.left,\n        max: divBounds.right,\n    }, {\n        min: divBounds.top,\n        max: divBounds.bottom,\n    }, particle.velocity.x, getValue(particle.options.bounce.horizontal));\n    if (resH.bounced) {\n        if (resH.velocity !== undefined) {\n            particle.velocity.x = resH.velocity;\n        }\n        if (resH.position !== undefined) {\n            particle.position.x = resH.position;\n        }\n    }\n    const resV = rectSideBounce({\n        min: bounds.top,\n        max: bounds.bottom,\n    }, {\n        min: bounds.left,\n        max: bounds.right,\n    }, {\n        min: divBounds.top,\n        max: divBounds.bottom,\n    }, {\n        min: divBounds.left,\n        max: divBounds.right,\n    }, particle.velocity.y, getValue(particle.options.bounce.vertical));\n    if (resV.bounced) {\n        if (resV.velocity !== undefined) {\n            particle.velocity.y = resV.velocity;\n        }\n        if (resV.position !== undefined) {\n            particle.position.y = resV.position;\n        }\n    }\n}\nexport function executeOnSingleOrMultiple(obj, callback) {\n    return obj instanceof Array ? obj.map((item, index) => callback(item, index)) : callback(obj, 0);\n}\nexport function itemFromSingleOrMultiple(obj, index, useIndex) {\n    return obj instanceof Array ? itemFromArray(obj, index, useIndex) : obj;\n}\nexport function findItemFromSingleOrMultiple(obj, callback) {\n    return obj instanceof Array ? obj.find((t, index) => callback(t, index)) : callback(obj, 0) ? obj : undefined;\n}\n","import { Vector } from \"../Core/Utils/Vector\";\nlet _random = Math.random;\nconst easings = new Map();\nexport function addEasing(name, easing) {\n    if (!easings.get(name)) {\n        easings.set(name, easing);\n    }\n}\nexport function getEasing(name) {\n    return easings.get(name) || ((value) => value);\n}\nexport function setRandom(rnd = Math.random) {\n    _random = rnd;\n}\nexport function getRandom() {\n    return clamp(_random(), 0, 1 - 1e-16);\n}\nexport function clamp(num, min, max) {\n    return Math.min(Math.max(num, min), max);\n}\nexport function mix(comp1, comp2, weight1, weight2) {\n    return Math.floor((comp1 * weight1 + comp2 * weight2) / (weight1 + weight2));\n}\nexport function randomInRange(r) {\n    const max = getRangeMax(r);\n    let min = getRangeMin(r);\n    if (max === min) {\n        min = 0;\n    }\n    return getRandom() * (max - min) + min;\n}\nexport function getRangeValue(value) {\n    return typeof value === \"number\" ? value : randomInRange(value);\n}\nexport function getRangeMin(value) {\n    return typeof value === \"number\" ? value : value.min;\n}\nexport function getRangeMax(value) {\n    return typeof value === \"number\" ? value : value.max;\n}\nexport function setRangeValue(source, value) {\n    if (source === value || (value === undefined && typeof source === \"number\")) {\n        return source;\n    }\n    const min = getRangeMin(source), max = getRangeMax(source);\n    return value !== undefined\n        ? {\n            min: Math.min(min, value),\n            max: Math.max(max, value),\n        }\n        : setRangeValue(min, max);\n}\nexport function getValue(options) {\n    const random = options.random, { enable, minimumValue } = typeof random === \"boolean\"\n        ? {\n            enable: random,\n            minimumValue: 0,\n        }\n        : random;\n    return enable ? getRangeValue(setRangeValue(options.value, minimumValue)) : getRangeValue(options.value);\n}\nexport function getDistances(pointA, pointB) {\n    const dx = pointA.x - pointB.x, dy = pointA.y - pointB.y;\n    return { dx: dx, dy: dy, distance: Math.sqrt(dx ** 2 + dy ** 2) };\n}\nexport function getDistance(pointA, pointB) {\n    return getDistances(pointA, pointB).distance;\n}\nexport function getParticleDirectionAngle(direction, position, center) {\n    if (typeof direction === \"number\") {\n        return (direction * Math.PI) / 180;\n    }\n    else {\n        switch (direction) {\n            case \"top\":\n                return -Math.PI / 2;\n            case \"top-right\":\n                return -Math.PI / 4;\n            case \"right\":\n                return 0;\n            case \"bottom-right\":\n                return Math.PI / 4;\n            case \"bottom\":\n                return Math.PI / 2;\n            case \"bottom-left\":\n                return (3 * Math.PI) / 4;\n            case \"left\":\n                return Math.PI;\n            case \"top-left\":\n                return (-3 * Math.PI) / 4;\n            case \"inside\":\n                return Math.atan2(center.y - position.y, center.x - position.x);\n            case \"outside\":\n                return Math.atan2(position.y - center.y, position.x - center.x);\n            default:\n                return getRandom() * Math.PI * 2;\n        }\n    }\n}\nexport function getParticleBaseVelocity(direction) {\n    const baseVelocity = Vector.origin;\n    baseVelocity.length = 1;\n    baseVelocity.angle = direction;\n    return baseVelocity;\n}\nexport function collisionVelocity(v1, v2, m1, m2) {\n    return Vector.create((v1.x * (m1 - m2)) / (m1 + m2) + (v2.x * 2 * m2) / (m1 + m2), v1.y);\n}\nexport function calcPositionFromSize(data) {\n    return data.position && data.position.x !== undefined && data.position.y !== undefined\n        ? {\n            x: (data.position.x * data.size.width) / 100,\n            y: (data.position.y * data.size.height) / 100,\n        }\n        : undefined;\n}\nexport function calcPositionOrRandomFromSize(data) {\n    var _a, _b, _c, _d;\n    return {\n        x: (((_b = (_a = data.position) === null || _a === void 0 ? void 0 : _a.x) !== null && _b !== void 0 ? _b : getRandom() * 100) * data.size.width) / 100,\n        y: (((_d = (_c = data.position) === null || _c === void 0 ? void 0 : _c.y) !== null && _d !== void 0 ? _d : getRandom() * 100) * data.size.height) / 100,\n    };\n}\nexport function calcPositionOrRandomFromSizeRanged(data) {\n    var _a, _b;\n    const position = {\n        x: ((_a = data.position) === null || _a === void 0 ? void 0 : _a.x) !== undefined ? getRangeValue(data.position.x) : undefined,\n        y: ((_b = data.position) === null || _b === void 0 ? void 0 : _b.y) !== undefined ? getRangeValue(data.position.y) : undefined,\n    };\n    return calcPositionOrRandomFromSize({ size: data.size, position });\n}\nexport function calcExactPositionOrRandomFromSize(data) {\n    var _a, _b, _c, _d;\n    return {\n        x: (_b = (_a = data.position) === null || _a === void 0 ? void 0 : _a.x) !== null && _b !== void 0 ? _b : getRandom() * data.size.width,\n        y: (_d = (_c = data.position) === null || _c === void 0 ? void 0 : _c.y) !== null && _d !== void 0 ? _d : getRandom() * data.size.height,\n    };\n}\nexport function calcExactPositionOrRandomFromSizeRanged(data) {\n    var _a, _b;\n    const position = {\n        x: ((_a = data.position) === null || _a === void 0 ? void 0 : _a.x) !== undefined ? getRangeValue(data.position.x) : undefined,\n        y: ((_b = data.position) === null || _b === void 0 ? void 0 : _b.y) !== undefined ? getRangeValue(data.position.y) : undefined,\n    };\n    return calcExactPositionOrRandomFromSize({ size: data.size, position });\n}\nexport function parseAlpha(input) {\n    return input ? (input.endsWith(\"%\") ? parseFloat(input) / 100 : parseFloat(input)) : 1;\n}\n","import { Vector3d } from \"./Vector3d\";\nexport class Vector extends Vector3d {\n    constructor(xOrCoords, y) {\n        super(xOrCoords, y, 0);\n    }\n    static get origin() {\n        return Vector.create(0, 0);\n    }\n    static clone(source) {\n        return Vector.create(source.x, source.y);\n    }\n    static create(x, y) {\n        return new Vector(x, y);\n    }\n}\n","export class Vector3d {\n    constructor(xOrCoords, y, z) {\n        if (typeof xOrCoords !== \"number\" && xOrCoords) {\n            this.x = xOrCoords.x;\n            this.y = xOrCoords.y;\n            const coords3d = xOrCoords;\n            this.z = coords3d.z ? coords3d.z : 0;\n        }\n        else if (xOrCoords !== undefined && y !== undefined) {\n            this.x = xOrCoords;\n            this.y = y;\n            this.z = z !== null && z !== void 0 ? z : 0;\n        }\n        else {\n            throw new Error(\"tsParticles - Vector3d not initialized correctly\");\n        }\n    }\n    static get origin() {\n        return Vector3d.create(0, 0, 0);\n    }\n    get angle() {\n        return Math.atan2(this.y, this.x);\n    }\n    set angle(angle) {\n        this.updateFromAngle(angle, this.length);\n    }\n    get length() {\n        return Math.sqrt(this.getLengthSq());\n    }\n    set length(length) {\n        this.updateFromAngle(this.angle, length);\n    }\n    static clone(source) {\n        return Vector3d.create(source.x, source.y, source.z);\n    }\n    static create(x, y, z) {\n        return new Vector3d(x, y, z);\n    }\n    add(v) {\n        return Vector3d.create(this.x + v.x, this.y + v.y, this.z + v.z);\n    }\n    addTo(v) {\n        this.x += v.x;\n        this.y += v.y;\n        this.z += v.z;\n    }\n    copy() {\n        return Vector3d.clone(this);\n    }\n    distanceTo(v) {\n        return this.sub(v).length;\n    }\n    distanceToSq(v) {\n        return this.sub(v).getLengthSq();\n    }\n    div(n) {\n        return Vector3d.create(this.x / n, this.y / n, this.z / n);\n    }\n    divTo(n) {\n        this.x /= n;\n        this.y /= n;\n        this.z /= n;\n    }\n    getLengthSq() {\n        return this.x ** 2 + this.y ** 2;\n    }\n    mult(n) {\n        return Vector3d.create(this.x * n, this.y * n, this.z * n);\n    }\n    multTo(n) {\n        this.x *= n;\n        this.y *= n;\n        this.z *= n;\n    }\n    rotate(angle) {\n        return Vector3d.create(this.x * Math.cos(angle) - this.y * Math.sin(angle), this.x * Math.sin(angle) + this.y * Math.cos(angle), 0);\n    }\n    setTo(c) {\n        this.x = c.x;\n        this.y = c.y;\n        const v3d = c;\n        this.z = v3d.z ? v3d.z : 0;\n    }\n    sub(v) {\n        return Vector3d.create(this.x - v.x, this.y - v.y, this.z - v.z);\n    }\n    subFrom(v) {\n        this.x -= v.x;\n        this.y -= v.y;\n        this.z -= v.z;\n    }\n    updateFromAngle(angle, length) {\n        this.x = Math.cos(angle) * length;\n        this.y = Math.sin(angle) * length;\n    }\n}\n","import { clear, drawParticle, drawParticlePlugin, drawPlugin, paintBase, paintImage } from \"../Utils/CanvasUtils\";\nimport { deepExtend, isSsr } from \"../Utils/Utils\";\nimport { getStyleFromHsl, getStyleFromRgb, rangeColorToHsl, rangeColorToRgb } from \"../Utils/ColorUtils\";\nimport { generatedAttribute } from \"./Utils/Constants\";\nfunction setTransformValue(factor, newFactor, key) {\n    var _a;\n    const newValue = newFactor[key];\n    if (newValue !== undefined) {\n        factor[key] = ((_a = factor[key]) !== null && _a !== void 0 ? _a : 1) * newValue;\n    }\n}\nexport class Canvas {\n    constructor(container) {\n        this.container = container;\n        this.size = {\n            height: 0,\n            width: 0,\n        };\n        this._context = null;\n        this._generated = false;\n        this._preDrawUpdaters = [];\n        this._postDrawUpdaters = [];\n        this._resizePlugins = [];\n        this._colorPlugins = [];\n        this._mutationObserver =\n            !isSsr() && typeof MutationObserver !== \"undefined\"\n                ? new MutationObserver((records) => {\n                    for (const record of records) {\n                        if (record.type === \"attributes\" && record.attributeName === \"style\") {\n                            this._repairStyle();\n                        }\n                    }\n                })\n                : undefined;\n    }\n    get _fullScreen() {\n        return this.container.actualOptions.fullScreen.enable;\n    }\n    clear() {\n        const options = this.container.actualOptions, trail = options.particles.move.trail, trailFill = this._trailFill;\n        if (options.backgroundMask.enable) {\n            this.paint();\n        }\n        else if (trail.enable && trail.length > 0 && trailFill) {\n            if (trailFill.color) {\n                this._paintBase(getStyleFromRgb(trailFill.color, trailFill.opacity));\n            }\n            else if (trailFill.image) {\n                this._paintImage(trailFill.image, trailFill.opacity);\n            }\n        }\n        else {\n            this.draw((ctx) => {\n                clear(ctx, this.size);\n            });\n        }\n    }\n    destroy() {\n        var _a, _b;\n        (_a = this._mutationObserver) === null || _a === void 0 ? void 0 : _a.disconnect();\n        if (this._generated) {\n            (_b = this.element) === null || _b === void 0 ? void 0 : _b.remove();\n        }\n        else {\n            this._resetOriginalStyle();\n        }\n        this.stop();\n        this._preDrawUpdaters = [];\n        this._postDrawUpdaters = [];\n        this._resizePlugins = [];\n        this._colorPlugins = [];\n    }\n    draw(cb) {\n        if (!this._context) {\n            return;\n        }\n        return cb(this._context);\n    }\n    drawParticle(particle, delta) {\n        var _a;\n        if (particle.spawning || particle.destroyed) {\n            return;\n        }\n        const radius = particle.getRadius();\n        if (radius <= 0) {\n            return;\n        }\n        const pfColor = particle.getFillColor(), psColor = (_a = particle.getStrokeColor()) !== null && _a !== void 0 ? _a : pfColor;\n        let [fColor, sColor] = this._getPluginParticleColors(particle);\n        if (!fColor) {\n            fColor = pfColor;\n        }\n        if (!sColor) {\n            sColor = psColor;\n        }\n        if (!fColor && !sColor) {\n            return;\n        }\n        this.draw((ctx) => {\n            var _a, _b, _c, _d;\n            const options = this.container.actualOptions, zIndexOptions = particle.options.zIndex, zOpacityFactor = (1 - particle.zIndexFactor) ** zIndexOptions.opacityRate, opacity = (_c = (_a = particle.bubble.opacity) !== null && _a !== void 0 ? _a : (_b = particle.opacity) === null || _b === void 0 ? void 0 : _b.value) !== null && _c !== void 0 ? _c : 1, strokeOpacity = (_d = particle.strokeOpacity) !== null && _d !== void 0 ? _d : opacity, zOpacity = opacity * zOpacityFactor, zStrokeOpacity = strokeOpacity * zOpacityFactor, transform = {}, colorStyles = {\n                fill: fColor ? getStyleFromHsl(fColor, zOpacity) : undefined,\n            };\n            colorStyles.stroke = sColor ? getStyleFromHsl(sColor, zStrokeOpacity) : colorStyles.fill;\n            this._applyPreDrawUpdaters(ctx, particle, radius, zOpacity, colorStyles, transform);\n            drawParticle({\n                container: this.container,\n                context: ctx,\n                particle,\n                delta,\n                colorStyles,\n                backgroundMask: options.backgroundMask.enable,\n                composite: options.backgroundMask.composite,\n                radius: radius * (1 - particle.zIndexFactor) ** zIndexOptions.sizeRate,\n                opacity: zOpacity,\n                shadow: particle.options.shadow,\n                transform,\n            });\n            this._applyPostDrawUpdaters(particle);\n        });\n    }\n    drawParticlePlugin(plugin, particle, delta) {\n        this.draw((ctx) => {\n            drawParticlePlugin(ctx, plugin, particle, delta);\n        });\n    }\n    drawPlugin(plugin, delta) {\n        this.draw((ctx) => {\n            drawPlugin(ctx, plugin, delta);\n        });\n    }\n    async init() {\n        var _a;\n        this.resize();\n        this._initStyle();\n        this._initCover();\n        try {\n            await this._initTrail();\n        }\n        catch (e) {\n            console.error(e);\n        }\n        this.initBackground();\n        if (this.element) {\n            (_a = this._mutationObserver) === null || _a === void 0 ? void 0 : _a.observe(this.element, { attributes: true });\n        }\n        this.initUpdaters();\n        this.initPlugins();\n        this.paint();\n    }\n    initBackground() {\n        const options = this.container.actualOptions, background = options.background, element = this.element, elementStyle = element === null || element === void 0 ? void 0 : element.style;\n        if (!elementStyle) {\n            return;\n        }\n        if (background.color) {\n            const color = rangeColorToRgb(background.color);\n            elementStyle.backgroundColor = color ? getStyleFromRgb(color, background.opacity) : \"\";\n        }\n        else {\n            elementStyle.backgroundColor = \"\";\n        }\n        elementStyle.backgroundImage = background.image || \"\";\n        elementStyle.backgroundPosition = background.position || \"\";\n        elementStyle.backgroundRepeat = background.repeat || \"\";\n        elementStyle.backgroundSize = background.size || \"\";\n    }\n    initPlugins() {\n        this._resizePlugins = [];\n        for (const [, plugin] of this.container.plugins) {\n            if (plugin.resize) {\n                this._resizePlugins.push(plugin);\n            }\n            if (plugin.particleFillColor || plugin.particleStrokeColor) {\n                this._colorPlugins.push(plugin);\n            }\n        }\n    }\n    initUpdaters() {\n        this._preDrawUpdaters = [];\n        this._postDrawUpdaters = [];\n        for (const updater of this.container.particles.updaters) {\n            if (updater.afterDraw) {\n                this._postDrawUpdaters.push(updater);\n            }\n            if (updater.getColorStyles || updater.getTransformValues || updater.beforeDraw) {\n                this._preDrawUpdaters.push(updater);\n            }\n        }\n    }\n    loadCanvas(canvas) {\n        var _a, _b;\n        if (this._generated) {\n            (_a = this.element) === null || _a === void 0 ? void 0 : _a.remove();\n        }\n        this._generated =\n            canvas.dataset && generatedAttribute in canvas.dataset\n                ? canvas.dataset[generatedAttribute] === \"true\"\n                : this._generated;\n        this.element = canvas;\n        this.element.ariaHidden = \"true\";\n        this._originalStyle = deepExtend({}, this.element.style);\n        this.size.height = canvas.offsetHeight;\n        this.size.width = canvas.offsetWidth;\n        this._context = this.element.getContext(\"2d\");\n        (_b = this._mutationObserver) === null || _b === void 0 ? void 0 : _b.observe(this.element, { attributes: true });\n        this.container.retina.init();\n        this.initBackground();\n    }\n    paint() {\n        const options = this.container.actualOptions;\n        this.draw((ctx) => {\n            if (options.backgroundMask.enable && options.backgroundMask.cover) {\n                clear(ctx, this.size);\n                this._paintBase(this._coverColorStyle);\n            }\n            else {\n                this._paintBase();\n            }\n        });\n    }\n    resize() {\n        if (!this.element) {\n            return;\n        }\n        const container = this.container, pxRatio = container.retina.pixelRatio, size = container.canvas.size, newSize = {\n            width: this.element.offsetWidth * pxRatio,\n            height: this.element.offsetHeight * pxRatio,\n        };\n        if (newSize.height === size.height &&\n            newSize.width === size.width &&\n            newSize.height === this.element.height &&\n            newSize.width === this.element.width) {\n            return;\n        }\n        const oldSize = Object.assign({}, size);\n        this.element.width = size.width = this.element.offsetWidth * pxRatio;\n        this.element.height = size.height = this.element.offsetHeight * pxRatio;\n        if (this.container.started) {\n            this.resizeFactor = {\n                width: size.width / oldSize.width,\n                height: size.height / oldSize.height,\n            };\n        }\n    }\n    stop() {\n        this.draw((ctx) => {\n            clear(ctx, this.size);\n        });\n    }\n    async windowResize() {\n        if (!this.element) {\n            return;\n        }\n        this.resize();\n        const container = this.container, needsRefresh = container.updateActualOptions();\n        container.particles.setDensity();\n        this._applyResizePlugins();\n        if (needsRefresh) {\n            await container.refresh();\n        }\n    }\n    _applyPostDrawUpdaters(particle) {\n        var _a;\n        for (const updater of this._postDrawUpdaters) {\n            (_a = updater.afterDraw) === null || _a === void 0 ? void 0 : _a.call(updater, particle);\n        }\n    }\n    _applyPreDrawUpdaters(ctx, particle, radius, zOpacity, colorStyles, transform) {\n        var _a;\n        for (const updater of this._preDrawUpdaters) {\n            if (updater.getColorStyles) {\n                const { fill, stroke } = updater.getColorStyles(particle, ctx, radius, zOpacity);\n                if (fill) {\n                    colorStyles.fill = fill;\n                }\n                if (stroke) {\n                    colorStyles.stroke = stroke;\n                }\n            }\n            if (updater.getTransformValues) {\n                const updaterTransform = updater.getTransformValues(particle);\n                for (const key in updaterTransform) {\n                    setTransformValue(transform, updaterTransform, key);\n                }\n            }\n            (_a = updater.beforeDraw) === null || _a === void 0 ? void 0 : _a.call(updater, particle);\n        }\n    }\n    _applyResizePlugins() {\n        for (const plugin of this._resizePlugins) {\n            if (plugin.resize) {\n                plugin.resize();\n            }\n        }\n    }\n    _getPluginParticleColors(particle) {\n        let fColor, sColor;\n        for (const plugin of this._colorPlugins) {\n            if (!fColor && plugin.particleFillColor) {\n                fColor = rangeColorToHsl(plugin.particleFillColor(particle));\n            }\n            if (!sColor && plugin.particleStrokeColor) {\n                sColor = rangeColorToHsl(plugin.particleStrokeColor(particle));\n            }\n            if (fColor && sColor) {\n                break;\n            }\n        }\n        return [fColor, sColor];\n    }\n    _initCover() {\n        const options = this.container.actualOptions, cover = options.backgroundMask.cover, color = cover.color, coverRgb = rangeColorToRgb(color);\n        if (coverRgb) {\n            const coverColor = {\n                r: coverRgb.r,\n                g: coverRgb.g,\n                b: coverRgb.b,\n                a: cover.opacity,\n            };\n            this._coverColorStyle = getStyleFromRgb(coverColor, coverColor.a);\n        }\n    }\n    _initStyle() {\n        const element = this.element, options = this.container.actualOptions;\n        if (!element) {\n            return;\n        }\n        if (this._fullScreen) {\n            this._originalStyle = deepExtend({}, element.style);\n            this._setFullScreenStyle();\n        }\n        else {\n            this._resetOriginalStyle();\n        }\n        for (const key in options.style) {\n            if (!key || !options.style) {\n                continue;\n            }\n            const value = options.style[key];\n            if (!value) {\n                continue;\n            }\n            element.style.setProperty(key, value, \"important\");\n        }\n    }\n    async _initTrail() {\n        const options = this.container.actualOptions, trail = options.particles.move.trail, trailFill = trail.fill;\n        if (!trail.enable) {\n            return;\n        }\n        if (trailFill.color) {\n            const fillColor = rangeColorToRgb(trailFill.color);\n            if (!fillColor) {\n                return;\n            }\n            const trail = options.particles.move.trail;\n            this._trailFill = {\n                color: Object.assign({}, fillColor),\n                opacity: 1 / trail.length,\n            };\n        }\n        else {\n            await new Promise((resolve, reject) => {\n                if (!trailFill.image) {\n                    return;\n                }\n                const img = document.createElement(\"img\");\n                img.addEventListener(\"load\", () => {\n                    this._trailFill = {\n                        image: img,\n                        opacity: 1 / trail.length,\n                    };\n                    resolve();\n                });\n                img.addEventListener(\"error\", (evt) => {\n                    reject(evt.error);\n                });\n                img.src = trailFill.image;\n            });\n        }\n    }\n    _paintBase(baseColor) {\n        this.draw((ctx) => {\n            paintBase(ctx, this.size, baseColor);\n        });\n    }\n    _paintImage(image, opacity) {\n        this.draw((ctx) => {\n            paintImage(ctx, this.size, image, opacity);\n        });\n    }\n    _repairStyle() {\n        var _a, _b;\n        const element = this.element;\n        if (!element) {\n            return;\n        }\n        (_a = this._mutationObserver) === null || _a === void 0 ? void 0 : _a.disconnect();\n        this._initStyle();\n        this.initBackground();\n        (_b = this._mutationObserver) === null || _b === void 0 ? void 0 : _b.observe(element, { attributes: true });\n    }\n    _resetOriginalStyle() {\n        const element = this.element, originalStyle = this._originalStyle;\n        if (!(element && originalStyle)) {\n            return;\n        }\n        element.style.position = originalStyle.position;\n        element.style.zIndex = originalStyle.zIndex;\n        element.style.top = originalStyle.top;\n        element.style.left = originalStyle.left;\n        element.style.width = originalStyle.width;\n        element.style.height = originalStyle.height;\n    }\n    _setFullScreenStyle() {\n        const element = this.element;\n        if (!element) {\n            return;\n        }\n        const priority = \"important\";\n        element.style.setProperty(\"position\", \"fixed\", priority);\n        element.style.setProperty(\"z-index\", this.container.actualOptions.fullScreen.zIndex.toString(10), priority);\n        element.style.setProperty(\"top\", \"0\", priority);\n        element.style.setProperty(\"left\", \"0\", priority);\n        element.style.setProperty(\"width\", \"100%\", priority);\n        element.style.setProperty(\"height\", \"100%\", priority);\n    }\n}\n","import { getStyleFromRgb } from \"./ColorUtils\";\nexport function drawLine(context, begin, end) {\n    context.beginPath();\n    context.moveTo(begin.x, begin.y);\n    context.lineTo(end.x, end.y);\n    context.closePath();\n}\nexport function drawTriangle(context, p1, p2, p3) {\n    context.beginPath();\n    context.moveTo(p1.x, p1.y);\n    context.lineTo(p2.x, p2.y);\n    context.lineTo(p3.x, p3.y);\n    context.closePath();\n}\nexport function paintBase(context, dimension, baseColor) {\n    context.fillStyle = baseColor !== null && baseColor !== void 0 ? baseColor : \"rgba(0,0,0,0)\";\n    context.fillRect(0, 0, dimension.width, dimension.height);\n}\nexport function paintImage(context, dimension, image, opacity) {\n    if (!image) {\n        return;\n    }\n    context.globalAlpha = opacity;\n    context.drawImage(image, 0, 0, dimension.width, dimension.height);\n    context.globalAlpha = 1;\n}\nexport function clear(context, dimension) {\n    context.clearRect(0, 0, dimension.width, dimension.height);\n}\nexport function drawParticle(data) {\n    var _a, _b, _c, _d, _e;\n    const { container, context, particle, delta, colorStyles, backgroundMask, composite, radius, opacity, shadow, transform, } = data;\n    const pos = particle.getPosition(), angle = particle.rotation + (particle.pathRotation ? particle.velocity.angle : 0), rotateData = {\n        sin: Math.sin(angle),\n        cos: Math.cos(angle),\n    }, transformData = {\n        a: rotateData.cos * ((_a = transform.a) !== null && _a !== void 0 ? _a : 1),\n        b: rotateData.sin * ((_b = transform.b) !== null && _b !== void 0 ? _b : 1),\n        c: -rotateData.sin * ((_c = transform.c) !== null && _c !== void 0 ? _c : 1),\n        d: rotateData.cos * ((_d = transform.d) !== null && _d !== void 0 ? _d : 1),\n    };\n    context.setTransform(transformData.a, transformData.b, transformData.c, transformData.d, pos.x, pos.y);\n    context.beginPath();\n    if (backgroundMask) {\n        context.globalCompositeOperation = composite;\n    }\n    const shadowColor = particle.shadowColor;\n    if (shadow.enable && shadowColor) {\n        context.shadowBlur = shadow.blur;\n        context.shadowColor = getStyleFromRgb(shadowColor);\n        context.shadowOffsetX = shadow.offset.x;\n        context.shadowOffsetY = shadow.offset.y;\n    }\n    if (colorStyles.fill) {\n        context.fillStyle = colorStyles.fill;\n    }\n    const strokeWidth = (_e = particle.strokeWidth) !== null && _e !== void 0 ? _e : 0;\n    context.lineWidth = strokeWidth;\n    if (colorStyles.stroke) {\n        context.strokeStyle = colorStyles.stroke;\n    }\n    drawShape(container, context, particle, radius, opacity, delta);\n    if (strokeWidth > 0) {\n        context.stroke();\n    }\n    if (particle.close) {\n        context.closePath();\n    }\n    if (particle.fill) {\n        context.fill();\n    }\n    drawShapeAfterEffect(container, context, particle, radius, opacity, delta);\n    context.globalCompositeOperation = \"source-over\";\n    context.setTransform(1, 0, 0, 1, 0, 0);\n}\nexport function drawShape(container, context, particle, radius, opacity, delta) {\n    if (!particle.shape) {\n        return;\n    }\n    const drawer = container.drawers.get(particle.shape);\n    if (!drawer) {\n        return;\n    }\n    drawer.draw(context, particle, radius, opacity, delta, container.retina.pixelRatio);\n}\nexport function drawShapeAfterEffect(container, context, particle, radius, opacity, delta) {\n    if (!particle.shape) {\n        return;\n    }\n    const drawer = container.drawers.get(particle.shape);\n    if (!(drawer === null || drawer === void 0 ? void 0 : drawer.afterEffect)) {\n        return;\n    }\n    drawer.afterEffect(context, particle, radius, opacity, delta, container.retina.pixelRatio);\n}\nexport function drawPlugin(context, plugin, delta) {\n    if (!plugin.draw) {\n        return;\n    }\n    plugin.draw(context, delta);\n}\nexport function drawParticlePlugin(context, plugin, particle, delta) {\n    if (!plugin.drawParticle) {\n        return;\n    }\n    plugin.drawParticle(context, particle, delta);\n}\nexport function alterHsl(color, type, value) {\n    return {\n        h: color.h,\n        s: color.s,\n        l: color.l + (type === \"darken\" ? -1 : 1) * value,\n    };\n}\n","import { getRandom, getRangeValue, mix, randomInRange, setRangeValue } from \"./NumberUtils\";\nimport { itemFromArray } from \"./Utils\";\nconst randomColorValue = \"random\", midColorValue = \"mid\", colorManagers = new Map();\nexport function addColorManager(manager) {\n    colorManagers.set(manager.key, manager);\n}\nfunction hue2rgb(p, q, t) {\n    if (t < 0) {\n        t += 1;\n    }\n    if (t > 1) {\n        t -= 1;\n    }\n    if (t < 1 / 6) {\n        return p + (q - p) * 6 * t;\n    }\n    if (t < 1 / 2) {\n        return q;\n    }\n    if (t < 2 / 3) {\n        return p + (q - p) * (2 / 3 - t) * 6;\n    }\n    return p;\n}\nfunction stringToRgba(input) {\n    for (const [, manager] of colorManagers) {\n        if (input.startsWith(manager.stringPrefix)) {\n            return manager.parseString(input);\n        }\n    }\n    const shorthandRegex = /^#?([a-f\\d])([a-f\\d])([a-f\\d])([a-f\\d])?$/i, hexFixed = input.replace(shorthandRegex, (_, r, g, b, a) => {\n        return r + r + g + g + b + b + (a !== undefined ? a + a : \"\");\n    }), regex = /^#?([a-f\\d]{2})([a-f\\d]{2})([a-f\\d]{2})([a-f\\d]{2})?$/i, result = regex.exec(hexFixed);\n    return result\n        ? {\n            a: result[4] !== undefined ? parseInt(result[4], 16) / 0xff : 1,\n            b: parseInt(result[3], 16),\n            g: parseInt(result[2], 16),\n            r: parseInt(result[1], 16),\n        }\n        : undefined;\n}\nexport function rangeColorToRgb(input, index, useIndex = true) {\n    if (!input) {\n        return;\n    }\n    const color = typeof input === \"string\" ? { value: input } : input;\n    if (typeof color.value === \"string\") {\n        return colorToRgb(color.value, index, useIndex);\n    }\n    if (color.value instanceof Array) {\n        return rangeColorToRgb({\n            value: itemFromArray(color.value, index, useIndex),\n        });\n    }\n    for (const [, manager] of colorManagers) {\n        const res = manager.handleRangeColor(color);\n        if (res) {\n            return res;\n        }\n    }\n}\nexport function colorToRgb(input, index, useIndex = true) {\n    if (!input) {\n        return;\n    }\n    const color = typeof input === \"string\" ? { value: input } : input;\n    if (typeof color.value === \"string\") {\n        return color.value === randomColorValue ? getRandomRgbColor() : stringToRgb(color.value);\n    }\n    if (color.value instanceof Array) {\n        return colorToRgb({\n            value: itemFromArray(color.value, index, useIndex),\n        });\n    }\n    for (const [, manager] of colorManagers) {\n        const res = manager.handleColor(color);\n        if (res) {\n            return res;\n        }\n    }\n}\nexport function colorToHsl(color, index, useIndex = true) {\n    const rgb = colorToRgb(color, index, useIndex);\n    return rgb ? rgbToHsl(rgb) : undefined;\n}\nexport function rangeColorToHsl(color, index, useIndex = true) {\n    const rgb = rangeColorToRgb(color, index, useIndex);\n    return rgb ? rgbToHsl(rgb) : undefined;\n}\nexport function rgbToHsl(color) {\n    const r1 = color.r / 255, g1 = color.g / 255, b1 = color.b / 255, max = Math.max(r1, g1, b1), min = Math.min(r1, g1, b1), res = {\n        h: 0,\n        l: (max + min) / 2,\n        s: 0,\n    };\n    if (max !== min) {\n        res.s = res.l < 0.5 ? (max - min) / (max + min) : (max - min) / (2.0 - max - min);\n        res.h =\n            r1 === max\n                ? (g1 - b1) / (max - min)\n                : (res.h = g1 === max ? 2.0 + (b1 - r1) / (max - min) : 4.0 + (r1 - g1) / (max - min));\n    }\n    res.l *= 100;\n    res.s *= 100;\n    res.h *= 60;\n    if (res.h < 0) {\n        res.h += 360;\n    }\n    if (res.h >= 360) {\n        res.h -= 360;\n    }\n    return res;\n}\nexport function stringToAlpha(input) {\n    var _a;\n    return (_a = stringToRgba(input)) === null || _a === void 0 ? void 0 : _a.a;\n}\nexport function stringToRgb(input) {\n    return stringToRgba(input);\n}\nexport function hslToRgb(hsl) {\n    const result = { b: 0, g: 0, r: 0 }, hslPercent = {\n        h: hsl.h / 360,\n        l: hsl.l / 100,\n        s: hsl.s / 100,\n    };\n    if (!hslPercent.s) {\n        result.b = hslPercent.l;\n        result.g = hslPercent.l;\n        result.r = hslPercent.l;\n    }\n    else {\n        const q = hslPercent.l < 0.5\n            ? hslPercent.l * (1 + hslPercent.s)\n            : hslPercent.l + hslPercent.s - hslPercent.l * hslPercent.s, p = 2 * hslPercent.l - q;\n        result.r = hue2rgb(p, q, hslPercent.h + 1 / 3);\n        result.g = hue2rgb(p, q, hslPercent.h);\n        result.b = hue2rgb(p, q, hslPercent.h - 1 / 3);\n    }\n    result.r = Math.floor(result.r * 255);\n    result.g = Math.floor(result.g * 255);\n    result.b = Math.floor(result.b * 255);\n    return result;\n}\nexport function hslaToRgba(hsla) {\n    const rgbResult = hslToRgb(hsla);\n    return {\n        a: hsla.a,\n        b: rgbResult.b,\n        g: rgbResult.g,\n        r: rgbResult.r,\n    };\n}\nexport function getRandomRgbColor(min) {\n    const fixedMin = min !== null && min !== void 0 ? min : 0;\n    return {\n        b: Math.floor(randomInRange(setRangeValue(fixedMin, 256))),\n        g: Math.floor(randomInRange(setRangeValue(fixedMin, 256))),\n        r: Math.floor(randomInRange(setRangeValue(fixedMin, 256))),\n    };\n}\nexport function getStyleFromRgb(color, opacity) {\n    return `rgba(${color.r}, ${color.g}, ${color.b}, ${opacity !== null && opacity !== void 0 ? opacity : 1})`;\n}\nexport function getStyleFromHsl(color, opacity) {\n    return `hsla(${color.h}, ${color.s}%, ${color.l}%, ${opacity !== null && opacity !== void 0 ? opacity : 1})`;\n}\nexport function colorMix(color1, color2, size1, size2) {\n    let rgb1 = color1, rgb2 = color2;\n    if (rgb1.r === undefined) {\n        rgb1 = hslToRgb(color1);\n    }\n    if (rgb2.r === undefined) {\n        rgb2 = hslToRgb(color2);\n    }\n    return {\n        b: mix(rgb1.b, rgb2.b, size1, size2),\n        g: mix(rgb1.g, rgb2.g, size1, size2),\n        r: mix(rgb1.r, rgb2.r, size1, size2),\n    };\n}\nexport function getLinkColor(p1, p2, linkColor) {\n    var _a, _b;\n    if (linkColor === randomColorValue) {\n        return getRandomRgbColor();\n    }\n    else if (linkColor === midColorValue) {\n        const sourceColor = (_a = p1.getFillColor()) !== null && _a !== void 0 ? _a : p1.getStrokeColor(), destColor = (_b = p2 === null || p2 === void 0 ? void 0 : p2.getFillColor()) !== null && _b !== void 0 ? _b : p2 === null || p2 === void 0 ? void 0 : p2.getStrokeColor();\n        if (sourceColor && destColor && p2) {\n            return colorMix(sourceColor, destColor, p1.getRadius(), p2.getRadius());\n        }\n        else {\n            const hslColor = sourceColor !== null && sourceColor !== void 0 ? sourceColor : destColor;\n            if (hslColor) {\n                return hslToRgb(hslColor);\n            }\n        }\n    }\n    else {\n        return linkColor;\n    }\n}\nexport function getLinkRandomColor(optColor, blink, consent) {\n    const color = typeof optColor === \"string\" ? optColor : optColor.value;\n    if (color === randomColorValue) {\n        if (consent) {\n            return rangeColorToRgb({\n                value: color,\n            });\n        }\n        if (blink) {\n            return randomColorValue;\n        }\n        return midColorValue;\n    }\n    else if (color === midColorValue) {\n        return midColorValue;\n    }\n    else {\n        return rangeColorToRgb({\n            value: color,\n        });\n    }\n}\nexport function getHslFromAnimation(animation) {\n    return animation !== undefined\n        ? {\n            h: animation.h.value,\n            s: animation.s.value,\n            l: animation.l.value,\n        }\n        : undefined;\n}\nexport function getHslAnimationFromHsl(hsl, animationOptions, reduceFactor) {\n    const resColor = {\n        h: {\n            enable: false,\n            value: hsl.h,\n        },\n        s: {\n            enable: false,\n            value: hsl.s,\n        },\n        l: {\n            enable: false,\n            value: hsl.l,\n        },\n    };\n    if (animationOptions) {\n        setColorAnimation(resColor.h, animationOptions.h, reduceFactor);\n        setColorAnimation(resColor.s, animationOptions.s, reduceFactor);\n        setColorAnimation(resColor.l, animationOptions.l, reduceFactor);\n    }\n    return resColor;\n}\nfunction setColorAnimation(colorValue, colorAnimation, reduceFactor) {\n    colorValue.enable = colorAnimation.enable;\n    if (colorValue.enable) {\n        colorValue.velocity = (getRangeValue(colorAnimation.speed) / 100) * reduceFactor;\n        colorValue.decay = 1 - getRangeValue(colorAnimation.decay);\n        colorValue.status = \"increasing\";\n        colorValue.loops = 0;\n        colorValue.maxLoops = getRangeValue(colorAnimation.count);\n        if (!colorAnimation.sync) {\n            colorValue.velocity *= getRandom();\n            colorValue.value *= getRandom();\n        }\n        colorValue.initialValue = colorValue.value;\n    }\n    else {\n        colorValue.velocity = 0;\n    }\n}\n","export const generatedAttribute = \"generated\";\nexport const touchEndEvent = \"touchend\";\nexport const mouseDownEvent = \"pointerdown\";\nexport const mouseUpEvent = \"pointerup\";\nexport const mouseMoveEvent = \"pointermove\";\nexport const touchStartEvent = \"touchstart\";\nexport const touchMoveEvent = \"touchmove\";\nexport const mouseLeaveEvent = \"pointerleave\";\nexport const mouseOutEvent = \"pointerout\";\nexport const touchCancelEvent = \"touchcancel\";\nexport const resizeEvent = \"resize\";\nexport const visibilityChangeEvent = \"visibilitychange\";\n","import { executeOnSingleOrMultiple, safeMatchMedia } from \"../../Utils/Utils\";\nimport { mouseDownEvent, mouseLeaveEvent, mouseMoveEvent, mouseOutEvent, mouseUpEvent, resizeEvent, touchCancelEvent, touchEndEvent, touchMoveEvent, touchStartEvent, visibilityChangeEvent, } from \"./Constants\";\nfunction manageListener(element, event, handler, add, options) {\n    if (add) {\n        let addOptions = { passive: true };\n        if (typeof options === \"boolean\") {\n            addOptions.capture = options;\n        }\n        else if (options !== undefined) {\n            addOptions = options;\n        }\n        element.addEventListener(event, handler, addOptions);\n    }\n    else {\n        const removeOptions = options;\n        element.removeEventListener(event, handler, removeOptions);\n    }\n}\nexport class EventListeners {\n    constructor(container) {\n        this.container = container;\n        this.canPush = true;\n        this.handlers = {\n            mouseMove: (e) => this.mouseTouchMove(e),\n            touchStart: (e) => this.mouseTouchMove(e),\n            touchMove: (e) => this.mouseTouchMove(e),\n            touchEnd: () => this.mouseTouchFinish(),\n            mouseLeave: () => this.mouseTouchFinish(),\n            touchCancel: () => this.mouseTouchFinish(),\n            touchEndClick: (e) => this.mouseTouchClick(e),\n            mouseUp: (e) => this.mouseTouchClick(e),\n            mouseDown: () => this.mouseDown(),\n            visibilityChange: () => this.handleVisibilityChange(),\n            themeChange: (e) => this.handleThemeChange(e),\n            oldThemeChange: (e) => this.handleThemeChange(e),\n            resize: () => this.handleWindowResize(),\n        };\n    }\n    addListeners() {\n        this.manageListeners(true);\n    }\n    removeListeners() {\n        this.manageListeners(false);\n    }\n    doMouseTouchClick(e) {\n        const container = this.container, options = container.actualOptions;\n        if (this.canPush) {\n            const mouseInteractivity = container.interactivity.mouse, mousePos = mouseInteractivity.position;\n            if (!mousePos) {\n                return;\n            }\n            mouseInteractivity.clickPosition = Object.assign({}, mousePos);\n            mouseInteractivity.clickTime = new Date().getTime();\n            const onClick = options.interactivity.events.onClick;\n            executeOnSingleOrMultiple(onClick.mode, (mode) => this.handleClickMode(mode));\n        }\n        if (e.type === \"touchend\") {\n            setTimeout(() => this.mouseTouchFinish(), 500);\n        }\n    }\n    handleClickMode(mode) {\n        this.container.handleClickMode(mode);\n    }\n    handleThemeChange(e) {\n        const mediaEvent = e, container = this.container, options = container.options, defaultThemes = options.defaultThemes, themeName = mediaEvent.matches ? defaultThemes.dark : defaultThemes.light, theme = options.themes.find((theme) => theme.name === themeName);\n        if (theme && theme.default.auto) {\n            container.loadTheme(themeName);\n        }\n    }\n    handleVisibilityChange() {\n        const container = this.container, options = container.actualOptions;\n        this.mouseTouchFinish();\n        if (!options.pauseOnBlur) {\n            return;\n        }\n        if (document === null || document === void 0 ? void 0 : document.hidden) {\n            container.pageHidden = true;\n            container.pause();\n        }\n        else {\n            container.pageHidden = false;\n            if (container.getAnimationStatus()) {\n                container.play(true);\n            }\n            else {\n                container.draw(true);\n            }\n        }\n    }\n    handleWindowResize() {\n        if (this.resizeTimeout) {\n            clearTimeout(this.resizeTimeout);\n            delete this.resizeTimeout;\n        }\n        this.resizeTimeout = setTimeout(async () => { var _a; return (_a = this.container.canvas) === null || _a === void 0 ? void 0 : _a.windowResize(); }, this.container.actualOptions.interactivity.events.resize.delay * 1000);\n    }\n    manageListeners(add) {\n        var _a;\n        const handlers = this.handlers, container = this.container, options = container.actualOptions, detectType = options.interactivity.detectsOn;\n        let mouseLeaveTmpEvent = mouseLeaveEvent;\n        if (detectType === \"window\") {\n            container.interactivity.element = window;\n            mouseLeaveTmpEvent = mouseOutEvent;\n        }\n        else if (detectType === \"parent\" && container.canvas.element) {\n            const canvasEl = container.canvas.element;\n            container.interactivity.element = (_a = canvasEl.parentElement) !== null && _a !== void 0 ? _a : canvasEl.parentNode;\n        }\n        else {\n            container.interactivity.element = container.canvas.element;\n        }\n        const mediaMatch = safeMatchMedia(\"(prefers-color-scheme: dark)\");\n        if (mediaMatch) {\n            if (mediaMatch.addEventListener !== undefined) {\n                manageListener(mediaMatch, \"change\", handlers.themeChange, add);\n            }\n            else if (mediaMatch.addListener !== undefined) {\n                if (add) {\n                    mediaMatch.addListener(handlers.oldThemeChange);\n                }\n                else {\n                    mediaMatch.removeListener(handlers.oldThemeChange);\n                }\n            }\n        }\n        const interactivityEl = container.interactivity.element;\n        if (!interactivityEl) {\n            return;\n        }\n        const html = interactivityEl;\n        if (options.interactivity.events.onHover.enable || options.interactivity.events.onClick.enable) {\n            manageListener(interactivityEl, mouseMoveEvent, handlers.mouseMove, add);\n            manageListener(interactivityEl, touchStartEvent, handlers.touchStart, add);\n            manageListener(interactivityEl, touchMoveEvent, handlers.touchMove, add);\n            if (!options.interactivity.events.onClick.enable) {\n                manageListener(interactivityEl, touchEndEvent, handlers.touchEnd, add);\n            }\n            else {\n                manageListener(interactivityEl, touchEndEvent, handlers.touchEndClick, add);\n                manageListener(interactivityEl, mouseUpEvent, handlers.mouseUp, add);\n                manageListener(interactivityEl, mouseDownEvent, handlers.mouseDown, add);\n            }\n            manageListener(interactivityEl, mouseLeaveTmpEvent, handlers.mouseLeave, add);\n            manageListener(interactivityEl, touchCancelEvent, handlers.touchCancel, add);\n        }\n        if (container.canvas.element) {\n            container.canvas.element.style.pointerEvents = html === container.canvas.element ? \"initial\" : \"none\";\n        }\n        if (options.interactivity.events.resize) {\n            if (typeof ResizeObserver !== \"undefined\") {\n                if (this.resizeObserver && !add) {\n                    if (container.canvas.element) {\n                        this.resizeObserver.unobserve(container.canvas.element);\n                    }\n                    this.resizeObserver.disconnect();\n                    delete this.resizeObserver;\n                }\n                else if (!this.resizeObserver && add && container.canvas.element) {\n                    this.resizeObserver = new ResizeObserver((entries) => {\n                        const entry = entries.find((e) => e.target === container.canvas.element);\n                        if (!entry) {\n                            return;\n                        }\n                        this.handleWindowResize();\n                    });\n                    this.resizeObserver.observe(container.canvas.element);\n                }\n            }\n            else {\n                manageListener(window, resizeEvent, handlers.resize, add);\n            }\n        }\n        if (document) {\n            manageListener(document, visibilityChangeEvent, handlers.visibilityChange, add, false);\n        }\n    }\n    mouseDown() {\n        const interactivity = this.container.interactivity;\n        if (interactivity) {\n            const mouse = interactivity.mouse;\n            mouse.clicking = true;\n            mouse.downPosition = mouse.position;\n        }\n    }\n    mouseTouchClick(e) {\n        const container = this.container, options = container.actualOptions, mouse = container.interactivity.mouse;\n        mouse.inside = true;\n        let handled = false;\n        const mousePosition = mouse.position;\n        if (!mousePosition || !options.interactivity.events.onClick.enable) {\n            return;\n        }\n        for (const [, plugin] of container.plugins) {\n            if (!plugin.clickPositionValid) {\n                continue;\n            }\n            handled = plugin.clickPositionValid(mousePosition);\n            if (handled) {\n                break;\n            }\n        }\n        if (!handled) {\n            this.doMouseTouchClick(e);\n        }\n        mouse.clicking = false;\n    }\n    mouseTouchFinish() {\n        const interactivity = this.container.interactivity;\n        if (!interactivity) {\n            return;\n        }\n        const mouse = interactivity.mouse;\n        delete mouse.position;\n        delete mouse.clickPosition;\n        delete mouse.downPosition;\n        interactivity.status = mouseLeaveEvent;\n        mouse.inside = false;\n        mouse.clicking = false;\n    }\n    mouseTouchMove(e) {\n        var _a, _b, _c, _d, _e, _f, _g;\n        const container = this.container, options = container.actualOptions;\n        if (!((_a = container.interactivity) === null || _a === void 0 ? void 0 : _a.element)) {\n            return;\n        }\n        container.interactivity.mouse.inside = true;\n        let pos;\n        const canvas = container.canvas.element;\n        if (e.type.startsWith(\"pointer\")) {\n            this.canPush = true;\n            const mouseEvent = e;\n            if (container.interactivity.element === window) {\n                if (canvas) {\n                    const clientRect = canvas.getBoundingClientRect();\n                    pos = {\n                        x: mouseEvent.clientX - clientRect.left,\n                        y: mouseEvent.clientY - clientRect.top,\n                    };\n                }\n            }\n            else if (options.interactivity.detectsOn === \"parent\") {\n                const source = mouseEvent.target, target = mouseEvent.currentTarget, canvasEl = container.canvas.element;\n                if (source && target && canvasEl) {\n                    const sourceRect = source.getBoundingClientRect(), targetRect = target.getBoundingClientRect(), canvasRect = canvasEl.getBoundingClientRect();\n                    pos = {\n                        x: mouseEvent.offsetX + 2 * sourceRect.left - (targetRect.left + canvasRect.left),\n                        y: mouseEvent.offsetY + 2 * sourceRect.top - (targetRect.top + canvasRect.top),\n                    };\n                }\n                else {\n                    pos = {\n                        x: (_b = mouseEvent.offsetX) !== null && _b !== void 0 ? _b : mouseEvent.clientX,\n                        y: (_c = mouseEvent.offsetY) !== null && _c !== void 0 ? _c : mouseEvent.clientY,\n                    };\n                }\n            }\n            else if (mouseEvent.target === container.canvas.element) {\n                pos = {\n                    x: (_d = mouseEvent.offsetX) !== null && _d !== void 0 ? _d : mouseEvent.clientX,\n                    y: (_e = mouseEvent.offsetY) !== null && _e !== void 0 ? _e : mouseEvent.clientY,\n                };\n            }\n        }\n        else {\n            this.canPush = e.type !== \"touchmove\";\n            const touchEvent = e, lastTouch = touchEvent.touches[touchEvent.touches.length - 1], canvasRect = canvas === null || canvas === void 0 ? void 0 : canvas.getBoundingClientRect();\n            pos = {\n                x: lastTouch.clientX - ((_f = canvasRect === null || canvasRect === void 0 ? void 0 : canvasRect.left) !== null && _f !== void 0 ? _f : 0),\n                y: lastTouch.clientY - ((_g = canvasRect === null || canvasRect === void 0 ? void 0 : canvasRect.top) !== null && _g !== void 0 ? _g : 0),\n            };\n        }\n        const pxRatio = container.retina.pixelRatio;\n        if (pos) {\n            pos.x *= pxRatio;\n            pos.y *= pxRatio;\n        }\n        container.interactivity.mouse.position = pos;\n        container.interactivity.status = mouseMoveEvent;\n    }\n}\n","function initDelta(value, fpsLimit = 60, smooth = false) {\n    return {\n        value,\n        factor: smooth ? 60 / fpsLimit : (60 * value) / 1000,\n    };\n}\nexport class FrameManager {\n    constructor(container) {\n        this.container = container;\n    }\n    async nextFrame(timestamp) {\n        var _a;\n        try {\n            const container = this.container;\n            if (!container.smooth &&\n                container.lastFrameTime !== undefined &&\n                timestamp < container.lastFrameTime + 1000 / container.fpsLimit) {\n                container.draw(false);\n                return;\n            }\n            (_a = container.lastFrameTime) !== null && _a !== void 0 ? _a : (container.lastFrameTime = timestamp);\n            const delta = initDelta(timestamp - container.lastFrameTime, container.fpsLimit, container.smooth);\n            container.lifeTime += delta.value;\n            container.lastFrameTime = timestamp;\n            if (delta.value > 1000) {\n                container.draw(false);\n                return;\n            }\n            await container.particles.draw(delta);\n            if (container.duration > 0 && container.lifeTime > container.duration) {\n                container.destroy();\n                return;\n            }\n            if (container.getAnimationStatus()) {\n                container.draw(false);\n            }\n        }\n        catch (e) {\n            console.error(\"tsParticles error in animation loop\", e);\n        }\n    }\n}\n","import { deepExtend, executeOnSingleOrMultiple, safeMatchMedia } from \"../../Utils/Utils\";\nimport { Background } from \"./Background/Background\";\nimport { BackgroundMask } from \"./BackgroundMask/BackgroundMask\";\nimport { FullScreen } from \"./FullScreen/FullScreen\";\nimport { Interactivity } from \"./Interactivity/Interactivity\";\nimport { ManualParticle } from \"./ManualParticle\";\nimport { Responsive } from \"./Responsive\";\nimport { Theme } from \"./Theme/Theme\";\nimport { loadParticlesOptions } from \"../../Utils/OptionsUtils\";\nimport { setRangeValue } from \"../../Utils/NumberUtils\";\nexport class Options {\n    constructor(engine, container) {\n        this._engine = engine;\n        this._container = container;\n        this.autoPlay = true;\n        this.background = new Background();\n        this.backgroundMask = new BackgroundMask();\n        this.defaultThemes = {};\n        this.delay = 0;\n        this.fullScreen = new FullScreen();\n        this.detectRetina = true;\n        this.duration = 0;\n        this.fpsLimit = 120;\n        this.interactivity = new Interactivity(engine, container);\n        this.manualParticles = [];\n        this.particles = loadParticlesOptions(this._engine, this._container);\n        this.pauseOnBlur = true;\n        this.pauseOnOutsideViewport = true;\n        this.responsive = [];\n        this.smooth = false;\n        this.style = {};\n        this.themes = [];\n        this.zLayers = 100;\n    }\n    get backgroundMode() {\n        return this.fullScreen;\n    }\n    set backgroundMode(value) {\n        this.fullScreen.load(value);\n    }\n    get fps_limit() {\n        return this.fpsLimit;\n    }\n    set fps_limit(value) {\n        this.fpsLimit = value;\n    }\n    get retina_detect() {\n        return this.detectRetina;\n    }\n    set retina_detect(value) {\n        this.detectRetina = value;\n    }\n    load(data) {\n        var _a, _b, _c, _d, _e;\n        if (!data) {\n            return;\n        }\n        if (data.preset !== undefined) {\n            executeOnSingleOrMultiple(data.preset, (preset) => this._importPreset(preset));\n        }\n        if (data.autoPlay !== undefined) {\n            this.autoPlay = data.autoPlay;\n        }\n        if (data.delay !== undefined) {\n            this.delay = setRangeValue(data.delay);\n        }\n        const detectRetina = (_a = data.detectRetina) !== null && _a !== void 0 ? _a : data.retina_detect;\n        if (detectRetina !== undefined) {\n            this.detectRetina = detectRetina;\n        }\n        if (data.duration !== undefined) {\n            this.duration = setRangeValue(data.duration);\n        }\n        const fpsLimit = (_b = data.fpsLimit) !== null && _b !== void 0 ? _b : data.fps_limit;\n        if (fpsLimit !== undefined) {\n            this.fpsLimit = fpsLimit;\n        }\n        if (data.pauseOnBlur !== undefined) {\n            this.pauseOnBlur = data.pauseOnBlur;\n        }\n        if (data.pauseOnOutsideViewport !== undefined) {\n            this.pauseOnOutsideViewport = data.pauseOnOutsideViewport;\n        }\n        if (data.zLayers !== undefined) {\n            this.zLayers = data.zLayers;\n        }\n        this.background.load(data.background);\n        const fullScreen = (_c = data.fullScreen) !== null && _c !== void 0 ? _c : data.backgroundMode;\n        if (typeof fullScreen === \"boolean\") {\n            this.fullScreen.enable = fullScreen;\n        }\n        else {\n            this.fullScreen.load(fullScreen);\n        }\n        this.backgroundMask.load(data.backgroundMask);\n        this.interactivity.load(data.interactivity);\n        if (data.manualParticles !== undefined) {\n            this.manualParticles = data.manualParticles.map((t) => {\n                const tmp = new ManualParticle();\n                tmp.load(t);\n                return tmp;\n            });\n        }\n        this.particles.load(data.particles);\n        this.style = deepExtend(this.style, data.style);\n        this._engine.plugins.loadOptions(this, data);\n        if (data.smooth !== undefined) {\n            this.smooth = data.smooth;\n        }\n        const interactors = this._engine.plugins.interactors.get(this._container);\n        if (interactors) {\n            for (const interactor of interactors) {\n                if (interactor.loadOptions) {\n                    interactor.loadOptions(this, data);\n                }\n            }\n        }\n        if (data.responsive !== undefined) {\n            for (const responsive of data.responsive) {\n                const optResponsive = new Responsive();\n                optResponsive.load(responsive);\n                this.responsive.push(optResponsive);\n            }\n        }\n        this.responsive.sort((a, b) => a.maxWidth - b.maxWidth);\n        if (data.themes !== undefined) {\n            for (const theme of data.themes) {\n                const existingTheme = this.themes.find((t) => t.name === theme.name);\n                if (!existingTheme) {\n                    const optTheme = new Theme();\n                    optTheme.load(theme);\n                    this.themes.push(optTheme);\n                }\n                else {\n                    existingTheme.load(theme);\n                }\n            }\n        }\n        this.defaultThemes.dark = (_d = this._findDefaultTheme(\"dark\")) === null || _d === void 0 ? void 0 : _d.name;\n        this.defaultThemes.light = (_e = this._findDefaultTheme(\"light\")) === null || _e === void 0 ? void 0 : _e.name;\n    }\n    setResponsive(width, pxRatio, defaultOptions) {\n        this.load(defaultOptions);\n        const responsiveOptions = this.responsive.find((t) => t.mode === \"screen\" && screen ? t.maxWidth > screen.availWidth : t.maxWidth * pxRatio > width);\n        this.load(responsiveOptions === null || responsiveOptions === void 0 ? void 0 : responsiveOptions.options);\n        return responsiveOptions === null || responsiveOptions === void 0 ? void 0 : responsiveOptions.maxWidth;\n    }\n    setTheme(name) {\n        if (name) {\n            const chosenTheme = this.themes.find((theme) => theme.name === name);\n            if (chosenTheme) {\n                this.load(chosenTheme.options);\n            }\n        }\n        else {\n            const mediaMatch = safeMatchMedia(\"(prefers-color-scheme: dark)\"), clientDarkMode = mediaMatch && mediaMatch.matches, defaultTheme = this._findDefaultTheme(clientDarkMode ? \"dark\" : \"light\");\n            if (defaultTheme) {\n                this.load(defaultTheme.options);\n            }\n        }\n    }\n    _findDefaultTheme(mode) {\n        var _a;\n        return ((_a = this.themes.find((theme) => theme.default.value && theme.default.mode === mode)) !== null && _a !== void 0 ? _a : this.themes.find((theme) => theme.default.value && theme.default.mode === \"any\"));\n    }\n    _importPreset(preset) {\n        this.load(this._engine.plugins.getPreset(preset));\n    }\n}\n","import { OptionsColor } from \"../OptionsColor\";\nexport class Background {\n    constructor() {\n        this.color = new OptionsColor();\n        this.color.value = \"\";\n        this.image = \"\";\n        this.position = \"\";\n        this.repeat = \"\";\n        this.size = \"\";\n        this.opacity = 1;\n    }\n    load(data) {\n        if (!data) {\n            return;\n        }\n        if (data.color !== undefined) {\n            this.color = OptionsColor.create(this.color, data.color);\n        }\n        if (data.image !== undefined) {\n            this.image = data.image;\n        }\n        if (data.position !== undefined) {\n            this.position = data.position;\n        }\n        if (data.repeat !== undefined) {\n            this.repeat = data.repeat;\n        }\n        if (data.size !== undefined) {\n            this.size = data.size;\n        }\n        if (data.opacity !== undefined) {\n            this.opacity = data.opacity;\n        }\n    }\n}\n","export class OptionsColor {\n    constructor() {\n        this.value = \"\";\n    }\n    static create(source, data) {\n        const color = new OptionsColor();\n        color.load(source);\n        if (data !== undefined) {\n            if (typeof data === \"string\" || data instanceof Array) {\n                color.load({ value: data });\n            }\n            else {\n                color.load(data);\n            }\n        }\n        return color;\n    }\n    load(data) {\n        if ((data === null || data === void 0 ? void 0 : data.value) === undefined) {\n            return;\n        }\n        this.value = data.value;\n    }\n}\n","import { BackgroundMaskCover } from \"./BackgroundMaskCover\";\nexport class BackgroundMask {\n    constructor() {\n        this.composite = \"destination-out\";\n        this.cover = new BackgroundMaskCover();\n        this.enable = false;\n    }\n    load(data) {\n        if (!data) {\n            return;\n        }\n        if (data.composite !== undefined) {\n            this.composite = data.composite;\n        }\n        if (data.cover !== undefined) {\n            const cover = data.cover;\n            const color = (typeof data.cover === \"string\" ? { color: data.cover } : data.cover);\n            this.cover.load(cover.color !== undefined ? cover : { color: color });\n        }\n        if (data.enable !== undefined) {\n            this.enable = data.enable;\n        }\n    }\n}\n","import { OptionsColor } from \"../OptionsColor\";\nexport class BackgroundMaskCover {\n    constructor() {\n        this.color = new OptionsColor();\n        this.color.value = \"#fff\";\n        this.opacity = 1;\n    }\n    load(data) {\n        if (!data) {\n            return;\n        }\n        if (data.color !== undefined) {\n            this.color = OptionsColor.create(this.color, data.color);\n        }\n        if (data.opacity !== undefined) {\n            this.opacity = data.opacity;\n        }\n    }\n}\n","export class FullScreen {\n    constructor() {\n        this.enable = true;\n        this.zIndex = 0;\n    }\n    load(data) {\n        if (!data) {\n            return;\n        }\n        if (data.enable !== undefined) {\n            this.enable = data.enable;\n        }\n        if (data.zIndex !== undefined) {\n            this.zIndex = data.zIndex;\n        }\n    }\n}\n","import { Events } from \"./Events/Events\";\nimport { Modes } from \"./Modes/Modes\";\nexport class Interactivity {\n    constructor(engine, container) {\n        this.detectsOn = \"window\";\n        this.events = new Events();\n        this.modes = new Modes(engine, container);\n    }\n    get detect_on() {\n        return this.detectsOn;\n    }\n    set detect_on(value) {\n        this.detectsOn = value;\n    }\n    load(data) {\n        var _a;\n        if (!data) {\n            return;\n        }\n        const detectsOn = (_a = data.detectsOn) !== null && _a !== void 0 ? _a : data.detect_on;\n        if (detectsOn !== undefined) {\n            this.detectsOn = detectsOn;\n        }\n        this.events.load(data.events);\n        this.modes.load(data.modes);\n    }\n}\n","import { ClickEvent } from \"./ClickEvent\";\nimport { DivEvent } from \"./DivEvent\";\nimport { HoverEvent } from \"./HoverEvent\";\nimport { ResizeEvent } from \"./ResizeEvent\";\nimport { executeOnSingleOrMultiple } from \"../../../../Utils/Utils\";\nexport class Events {\n    constructor() {\n        this.onClick = new ClickEvent();\n        this.onDiv = new DivEvent();\n        this.onHover = new HoverEvent();\n        this.resize = new ResizeEvent();\n    }\n    get onclick() {\n        return this.onClick;\n    }\n    set onclick(value) {\n        this.onClick = value;\n    }\n    get ondiv() {\n        return this.onDiv;\n    }\n    set ondiv(value) {\n        this.onDiv = value;\n    }\n    get onhover() {\n        return this.onHover;\n    }\n    set onhover(value) {\n        this.onHover = value;\n    }\n    load(data) {\n        var _a, _b, _c;\n        if (!data) {\n            return;\n        }\n        this.onClick.load((_a = data.onClick) !== null && _a !== void 0 ? _a : data.onclick);\n        const onDiv = (_b = data.onDiv) !== null && _b !== void 0 ? _b : data.ondiv;\n        if (onDiv !== undefined) {\n            this.onDiv = executeOnSingleOrMultiple(onDiv, (t) => {\n                const tmp = new DivEvent();\n                tmp.load(t);\n                return tmp;\n            });\n        }\n        this.onHover.load((_c = data.onHover) !== null && _c !== void 0 ? _c : data.onhover);\n        if (typeof data.resize === \"boolean\") {\n            this.resize.enable = data.resize;\n        }\n        else {\n            this.resize.load(data.resize);\n        }\n    }\n}\n","export class ClickEvent {\n    constructor() {\n        this.enable = false;\n        this.mode = [];\n    }\n    load(data) {\n        if (!data) {\n            return;\n        }\n        if (data.enable !== undefined) {\n            this.enable = data.enable;\n        }\n        if (data.mode !== undefined) {\n            this.mode = data.mode;\n        }\n    }\n}\n","import { executeOnSingleOrMultiple } from \"../../../../Utils/Utils\";\nexport class DivEvent {\n    constructor() {\n        this.selectors = [];\n        this.enable = false;\n        this.mode = [];\n        this.type = \"circle\";\n    }\n    get el() {\n        return this.elementId;\n    }\n    set el(value) {\n        this.elementId = value;\n    }\n    get elementId() {\n        return this.ids;\n    }\n    set elementId(value) {\n        this.ids = value;\n    }\n    get ids() {\n        return executeOnSingleOrMultiple(this.selectors, (t) => t.replace(\"#\", \"\"));\n    }\n    set ids(value) {\n        this.selectors = executeOnSingleOrMultiple(value, (t) => `#${t}`);\n    }\n    load(data) {\n        var _a, _b;\n        if (!data) {\n            return;\n        }\n        const ids = (_b = (_a = data.ids) !== null && _a !== void 0 ? _a : data.elementId) !== null && _b !== void 0 ? _b : data.el;\n        if (ids !== undefined) {\n            this.ids = ids;\n        }\n        if (data.selectors !== undefined) {\n            this.selectors = data.selectors;\n        }\n        if (data.enable !== undefined) {\n            this.enable = data.enable;\n        }\n        if (data.mode !== undefined) {\n            this.mode = data.mode;\n        }\n        if (data.type !== undefined) {\n            this.type = data.type;\n        }\n    }\n}\n","import { Parallax } from \"./Parallax\";\nexport class HoverEvent {\n    constructor() {\n        this.enable = false;\n        this.mode = [];\n        this.parallax = new Parallax();\n    }\n    load(data) {\n        if (!data) {\n            return;\n        }\n        if (data.enable !== undefined) {\n            this.enable = data.enable;\n        }\n        if (data.mode !== undefined) {\n            this.mode = data.mode;\n        }\n        this.parallax.load(data.parallax);\n    }\n}\n","export class Parallax {\n    constructor() {\n        this.enable = false;\n        this.force = 2;\n        this.smooth = 10;\n    }\n    load(data) {\n        if (!data) {\n            return;\n        }\n        if (data.enable !== undefined) {\n            this.enable = data.enable;\n        }\n        if (data.force !== undefined) {\n            this.force = data.force;\n        }\n        if (data.smooth !== undefined) {\n            this.smooth = data.smooth;\n        }\n    }\n}\n","export class ResizeEvent {\n    constructor() {\n        this.delay = 0.5;\n        this.enable = true;\n    }\n    load(data) {\n        if (data === undefined) {\n            return;\n        }\n        if (data.delay !== undefined) {\n            this.delay = data.delay;\n        }\n        if (data.enable !== undefined) {\n            this.enable = data.enable;\n        }\n    }\n}\n","export class Modes {\n    constructor(engine, container) {\n        this._engine = engine;\n        this._container = container;\n    }\n    load(data) {\n        if (!data) {\n            return;\n        }\n        if (this._container) {\n            const interactors = this._engine.plugins.interactors.get(this._container);\n            if (interactors) {\n                for (const interactor of interactors) {\n                    if (interactor.loadModeOptions) {\n                        interactor.loadModeOptions(this, data);\n                    }\n                }\n            }\n        }\n    }\n}\n","import { deepExtend } from \"../../Utils/Utils\";\nexport class ManualParticle {\n    load(data) {\n        var _a, _b;\n        if (!data) {\n            return;\n        }\n        if (data.position !== undefined) {\n            this.position = {\n                x: (_a = data.position.x) !== null && _a !== void 0 ? _a : 50,\n                y: (_b = data.position.y) !== null && _b !== void 0 ? _b : 50,\n            };\n        }\n        if (data.options !== undefined) {\n            this.options = deepExtend({}, data.options);\n        }\n    }\n}\n","import { deepExtend } from \"../../Utils/Utils\";\nexport class Responsive {\n    constructor() {\n        this.maxWidth = Infinity;\n        this.options = {};\n        this.mode = \"canvas\";\n    }\n    load(data) {\n        if (!data) {\n            return;\n        }\n        if (data.maxWidth !== undefined) {\n            this.maxWidth = data.maxWidth;\n        }\n        if (data.mode !== undefined) {\n            if (data.mode === \"screen\") {\n                this.mode = \"screen\";\n            }\n            else {\n                this.mode = \"canvas\";\n            }\n        }\n        if (data.options !== undefined) {\n            this.options = deepExtend({}, data.options);\n        }\n    }\n}\n","import { ThemeDefault } from \"./ThemeDefault\";\nimport { deepExtend } from \"../../../Utils/Utils\";\nexport class Theme {\n    constructor() {\n        this.name = \"\";\n        this.default = new ThemeDefault();\n    }\n    load(data) {\n        if (!data) {\n            return;\n        }\n        if (data.name !== undefined) {\n            this.name = data.name;\n        }\n        this.default.load(data.default);\n        if (data.options !== undefined) {\n            this.options = deepExtend({}, data.options);\n        }\n    }\n}\n","export class ThemeDefault {\n    constructor() {\n        this.auto = false;\n        this.mode = \"any\";\n        this.value = false;\n    }\n    load(data) {\n        if (!data) {\n            return;\n        }\n        if (data.auto !== undefined) {\n            this.auto = data.auto;\n        }\n        if (data.mode !== undefined) {\n            this.mode = data.mode;\n        }\n        if (data.value !== undefined) {\n            this.value = data.value;\n        }\n    }\n}\n","import { ParticlesOptions } from \"../Options/Classes/Particles/ParticlesOptions\";\nexport function loadOptions(options, ...sourceOptionsArr) {\n    for (const sourceOptions of sourceOptionsArr) {\n        options.load(sourceOptions);\n    }\n}\nexport function loadParticlesOptions(engine, container, ...sourceOptionsArr) {\n    const options = new ParticlesOptions(engine, container);\n    loadOptions(options, ...sourceOptionsArr);\n    return options;\n}\n","import { deepExtend, executeOnSingleOrMultiple } from \"../../../Utils/Utils\";\nimport { AnimatableColor } from \"../AnimatableColor\";\nimport { Collisions } from \"./Collisions/Collisions\";\nimport { Move } from \"./Move/Move\";\nimport { Opacity } from \"./Opacity/Opacity\";\nimport { ParticlesBounce } from \"./Bounce/ParticlesBounce\";\nimport { ParticlesNumber } from \"./Number/ParticlesNumber\";\nimport { Shadow } from \"./Shadow\";\nimport { Shape } from \"./Shape/Shape\";\nimport { Size } from \"./Size/Size\";\nimport { Stroke } from \"./Stroke\";\nimport { ZIndex } from \"./ZIndex/ZIndex\";\nexport class ParticlesOptions {\n    constructor(engine, container) {\n        this._engine = engine;\n        this._container = container;\n        this.bounce = new ParticlesBounce();\n        this.collisions = new Collisions();\n        this.color = new AnimatableColor();\n        this.color.value = \"#fff\";\n        this.groups = {};\n        this.move = new Move();\n        this.number = new ParticlesNumber();\n        this.opacity = new Opacity();\n        this.reduceDuplicates = false;\n        this.shadow = new Shadow();\n        this.shape = new Shape();\n        this.size = new Size();\n        this.stroke = new Stroke();\n        this.zIndex = new ZIndex();\n    }\n    load(data) {\n        var _a, _b, _c, _d, _e, _f;\n        if (!data) {\n            return;\n        }\n        this.bounce.load(data.bounce);\n        this.color.load(AnimatableColor.create(this.color, data.color));\n        if (data.groups !== undefined) {\n            for (const group in data.groups) {\n                const item = data.groups[group];\n                if (item !== undefined) {\n                    this.groups[group] = deepExtend((_a = this.groups[group]) !== null && _a !== void 0 ? _a : {}, item);\n                }\n            }\n        }\n        this.move.load(data.move);\n        this.number.load(data.number);\n        this.opacity.load(data.opacity);\n        if (data.reduceDuplicates !== undefined) {\n            this.reduceDuplicates = data.reduceDuplicates;\n        }\n        this.shape.load(data.shape);\n        this.size.load(data.size);\n        this.shadow.load(data.shadow);\n        this.zIndex.load(data.zIndex);\n        const collisions = (_c = (_b = data.move) === null || _b === void 0 ? void 0 : _b.collisions) !== null && _c !== void 0 ? _c : (_d = data.move) === null || _d === void 0 ? void 0 : _d.bounce;\n        if (collisions !== undefined) {\n            this.collisions.enable = collisions;\n        }\n        this.collisions.load(data.collisions);\n        if (data.interactivity !== undefined) {\n            this.interactivity = deepExtend({}, data.interactivity);\n        }\n        const strokeToLoad = (_e = data.stroke) !== null && _e !== void 0 ? _e : (_f = data.shape) === null || _f === void 0 ? void 0 : _f.stroke;\n        if (strokeToLoad) {\n            this.stroke = executeOnSingleOrMultiple(strokeToLoad, (t) => {\n                const tmp = new Stroke();\n                tmp.load(t);\n                return tmp;\n            });\n        }\n        if (this._container) {\n            const updaters = this._engine.plugins.updaters.get(this._container);\n            if (updaters) {\n                for (const updater of updaters) {\n                    if (updater.loadOptions) {\n                        updater.loadOptions(this, data);\n                    }\n                }\n            }\n            const interactors = this._engine.plugins.interactors.get(this._container);\n            if (interactors) {\n                for (const interactor of interactors) {\n                    if (interactor.loadParticlesOptions) {\n                        interactor.loadParticlesOptions(this, data);\n                    }\n                }\n            }\n        }\n    }\n}\n","import { HslAnimation } from \"./HslAnimation\";\nimport { OptionsColor } from \"./OptionsColor\";\nexport class AnimatableColor extends OptionsColor {\n    constructor() {\n        super();\n        this.animation = new HslAnimation();\n    }\n    static create(source, data) {\n        const color = new AnimatableColor();\n        color.load(source);\n        if (data !== undefined) {\n            if (typeof data === \"string\" || data instanceof Array) {\n                color.load({ value: data });\n            }\n            else {\n                color.load(data);\n            }\n        }\n        return color;\n    }\n    load(data) {\n        super.load(data);\n        if (!data) {\n            return;\n        }\n        const colorAnimation = data.animation;\n        if (colorAnimation !== undefined) {\n            if (colorAnimation.enable !== undefined) {\n                this.animation.h.load(colorAnimation);\n            }\n            else {\n                this.animation.load(data.animation);\n            }\n        }\n    }\n}\n","import { ColorAnimation } from \"./ColorAnimation\";\nexport class HslAnimation {\n    constructor() {\n        this.h = new ColorAnimation();\n        this.s = new ColorAnimation();\n        this.l = new ColorAnimation();\n    }\n    load(data) {\n        if (!data) {\n            return;\n        }\n        this.h.load(data.h);\n        this.s.load(data.s);\n        this.l.load(data.l);\n    }\n}\n","import { setRangeValue } from \"../../Utils/NumberUtils\";\nexport class ColorAnimation {\n    constructor() {\n        this.count = 0;\n        this.enable = false;\n        this.offset = 0;\n        this.speed = 1;\n        this.decay = 0;\n        this.sync = true;\n    }\n    load(data) {\n        if (!data) {\n            return;\n        }\n        if (data.count !== undefined) {\n            this.count = setRangeValue(data.count);\n        }\n        if (data.enable !== undefined) {\n            this.enable = data.enable;\n        }\n        if (data.offset !== undefined) {\n            this.offset = setRangeValue(data.offset);\n        }\n        if (data.speed !== undefined) {\n            this.speed = setRangeValue(data.speed);\n        }\n        if (data.decay !== undefined) {\n            this.decay = setRangeValue(data.decay);\n        }\n        if (data.sync !== undefined) {\n            this.sync = data.sync;\n        }\n    }\n}\n","import { CollisionsAbsorb } from \"./CollisionsAbsorb\";\nimport { CollisionsOverlap } from \"./CollisionsOverlap\";\nimport { ParticlesBounce } from \"../Bounce/ParticlesBounce\";\nexport class Collisions {\n    constructor() {\n        this.absorb = new CollisionsAbsorb();\n        this.bounce = new ParticlesBounce();\n        this.enable = false;\n        this.mode = \"bounce\";\n        this.overlap = new CollisionsOverlap();\n    }\n    load(data) {\n        if (!data) {\n            return;\n        }\n        this.absorb.load(data.absorb);\n        this.bounce.load(data.bounce);\n        if (data.enable !== undefined) {\n            this.enable = data.enable;\n        }\n        if (data.mode !== undefined) {\n            this.mode = data.mode;\n        }\n        this.overlap.load(data.overlap);\n    }\n}\n","export class CollisionsAbsorb {\n    constructor() {\n        this.speed = 2;\n    }\n    load(data) {\n        if (!data) {\n            return;\n        }\n        if (data.speed !== undefined) {\n            this.speed = data.speed;\n        }\n    }\n}\n","export class CollisionsOverlap {\n    constructor() {\n        this.enable = true;\n        this.retries = 0;\n    }\n    load(data) {\n        if (!data) {\n            return;\n        }\n        if (data.enable !== undefined) {\n            this.enable = data.enable;\n        }\n        if (data.retries !== undefined) {\n            this.retries = data.retries;\n        }\n    }\n}\n","import { ParticlesBounceFactor } from \"./ParticlesBounceFactor\";\nexport class ParticlesBounce {\n    constructor() {\n        this.horizontal = new ParticlesBounceFactor();\n        this.vertical = new ParticlesBounceFactor();\n    }\n    load(data) {\n        if (!data) {\n            return;\n        }\n        this.horizontal.load(data.horizontal);\n        this.vertical.load(data.vertical);\n    }\n}\n","import { ValueWithRandom } from \"../../ValueWithRandom\";\nexport class ParticlesBounceFactor extends ValueWithRandom {\n    constructor() {\n        super();\n        this.random.minimumValue = 0.1;\n        this.value = 1;\n    }\n}\n","import { Random } from \"./Random\";\nimport { setRangeValue } from \"../../Utils/NumberUtils\";\nexport class ValueWithRandom {\n    constructor() {\n        this.random = new Random();\n        this.value = 0;\n    }\n    load(data) {\n        if (!data) {\n            return;\n        }\n        if (typeof data.random === \"boolean\") {\n            this.random.enable = data.random;\n        }\n        else {\n            this.random.load(data.random);\n        }\n        if (data.value !== undefined) {\n            this.value = setRangeValue(data.value, this.random.enable ? this.random.minimumValue : undefined);\n        }\n    }\n}\n","export class Random {\n    constructor() {\n        this.enable = false;\n        this.minimumValue = 0;\n    }\n    load(data) {\n        if (!data) {\n            return;\n        }\n        if (data.enable !== undefined) {\n            this.enable = data.enable;\n        }\n        if (data.minimumValue !== undefined) {\n            this.minimumValue = data.minimumValue;\n        }\n    }\n}\n","import { MoveAngle } from \"./MoveAngle\";\nimport { MoveAttract } from \"./MoveAttract\";\nimport { MoveCenter } from \"./MoveCenter\";\nimport { MoveGravity } from \"./MoveGravity\";\nimport { MovePath } from \"./Path/MovePath\";\nimport { MoveTrail } from \"./MoveTrail\";\nimport { OutModes } from \"./OutModes\";\nimport { Spin } from \"./Spin\";\nimport { setRangeValue } from \"../../../../Utils/NumberUtils\";\nexport class Move {\n    constructor() {\n        this.angle = new MoveAngle();\n        this.attract = new MoveAttract();\n        this.center = new MoveCenter();\n        this.decay = 0;\n        this.distance = {};\n        this.direction = \"none\";\n        this.drift = 0;\n        this.enable = false;\n        this.gravity = new MoveGravity();\n        this.path = new MovePath();\n        this.outModes = new OutModes();\n        this.random = false;\n        this.size = false;\n        this.speed = 2;\n        this.spin = new Spin();\n        this.straight = false;\n        this.trail = new MoveTrail();\n        this.vibrate = false;\n        this.warp = false;\n    }\n    get bounce() {\n        return this.collisions;\n    }\n    set bounce(value) {\n        this.collisions = value;\n    }\n    get collisions() {\n        return false;\n    }\n    set collisions(_) {\n    }\n    get noise() {\n        return this.path;\n    }\n    set noise(value) {\n        this.path = value;\n    }\n    get outMode() {\n        return this.outModes.default;\n    }\n    set outMode(value) {\n        this.outModes.default = value;\n    }\n    get out_mode() {\n        return this.outMode;\n    }\n    set out_mode(value) {\n        this.outMode = value;\n    }\n    load(data) {\n        var _a, _b, _c;\n        if (!data) {\n            return;\n        }\n        this.angle.load(typeof data.angle === \"number\" ? { value: data.angle } : data.angle);\n        this.attract.load(data.attract);\n        this.center.load(data.center);\n        if (data.decay !== undefined) {\n            this.decay = setRangeValue(data.decay);\n        }\n        if (data.direction !== undefined) {\n            this.direction = data.direction;\n        }\n        if (data.distance !== undefined) {\n            this.distance =\n                typeof data.distance === \"number\"\n                    ? {\n                        horizontal: data.distance,\n                        vertical: data.distance,\n                    }\n                    : Object.assign({}, data.distance);\n        }\n        if (data.drift !== undefined) {\n            this.drift = setRangeValue(data.drift);\n        }\n        if (data.enable !== undefined) {\n            this.enable = data.enable;\n        }\n        this.gravity.load(data.gravity);\n        const outModes = (_b = (_a = data.outModes) !== null && _a !== void 0 ? _a : data.outMode) !== null && _b !== void 0 ? _b : data.out_mode;\n        if (outModes !== undefined) {\n            if (typeof outModes === \"object\") {\n                this.outModes.load(outModes);\n            }\n            else {\n                this.outModes.load({\n                    default: outModes,\n                });\n            }\n        }\n        this.path.load((_c = data.path) !== null && _c !== void 0 ? _c : data.noise);\n        if (data.random !== undefined) {\n            this.random = data.random;\n        }\n        if (data.size !== undefined) {\n            this.size = data.size;\n        }\n        if (data.speed !== undefined) {\n            this.speed = setRangeValue(data.speed);\n        }\n        this.spin.load(data.spin);\n        if (data.straight !== undefined) {\n            this.straight = data.straight;\n        }\n        this.trail.load(data.trail);\n        if (data.vibrate !== undefined) {\n            this.vibrate = data.vibrate;\n        }\n        if (data.warp !== undefined) {\n            this.warp = data.warp;\n        }\n    }\n}\n","import { setRangeValue } from \"../../../../Utils/NumberUtils\";\nexport class MoveAngle {\n    constructor() {\n        this.offset = 0;\n        this.value = 90;\n    }\n    load(data) {\n        if (!data) {\n            return;\n        }\n        if (data.offset !== undefined) {\n            this.offset = setRangeValue(data.offset);\n        }\n        if (data.value !== undefined) {\n            this.value = setRangeValue(data.value);\n        }\n    }\n}\n","import { setRangeValue } from \"../../../../Utils/NumberUtils\";\nexport class MoveAttract {\n    constructor() {\n        this.distance = 200;\n        this.enable = false;\n        this.rotate = {\n            x: 3000,\n            y: 3000,\n        };\n    }\n    get rotateX() {\n        return this.rotate.x;\n    }\n    set rotateX(value) {\n        this.rotate.x = value;\n    }\n    get rotateY() {\n        return this.rotate.y;\n    }\n    set rotateY(value) {\n        this.rotate.y = value;\n    }\n    load(data) {\n        var _a, _b, _c, _d;\n        if (!data) {\n            return;\n        }\n        if (data.distance !== undefined) {\n            this.distance = setRangeValue(data.distance);\n        }\n        if (data.enable !== undefined) {\n            this.enable = data.enable;\n        }\n        const rotateX = (_b = (_a = data.rotate) === null || _a === void 0 ? void 0 : _a.x) !== null && _b !== void 0 ? _b : data.rotateX;\n        if (rotateX !== undefined) {\n            this.rotate.x = rotateX;\n        }\n        const rotateY = (_d = (_c = data.rotate) === null || _c === void 0 ? void 0 : _c.y) !== null && _d !== void 0 ? _d : data.rotateY;\n        if (rotateY !== undefined) {\n            this.rotate.y = rotateY;\n        }\n    }\n}\n","export class MoveCenter {\n    constructor() {\n        this.x = 50;\n        this.y = 50;\n        this.mode = \"percent\";\n        this.radius = 0;\n    }\n    load(data) {\n        if (!data) {\n            return;\n        }\n        if (data.x !== undefined) {\n            this.x = data.x;\n        }\n        if (data.y !== undefined) {\n            this.y = data.y;\n        }\n        if (data.mode !== undefined) {\n            this.mode = data.mode;\n        }\n        if (data.radius !== undefined) {\n            this.radius = data.radius;\n        }\n    }\n}\n","import { setRangeValue } from \"../../../../Utils/NumberUtils\";\nexport class MoveGravity {\n    constructor() {\n        this.acceleration = 9.81;\n        this.enable = false;\n        this.inverse = false;\n        this.maxSpeed = 50;\n    }\n    load(data) {\n        if (!data) {\n            return;\n        }\n        if (data.acceleration !== undefined) {\n            this.acceleration = setRangeValue(data.acceleration);\n        }\n        if (data.enable !== undefined) {\n            this.enable = data.enable;\n        }\n        if (data.inverse !== undefined) {\n            this.inverse = data.inverse;\n        }\n        if (data.maxSpeed !== undefined) {\n            this.maxSpeed = setRangeValue(data.maxSpeed);\n        }\n    }\n}\n","import { ValueWithRandom } from \"../../../ValueWithRandom\";\nimport { deepExtend } from \"../../../../../Utils/Utils\";\nexport class MovePath {\n    constructor() {\n        this.clamp = true;\n        this.delay = new ValueWithRandom();\n        this.enable = false;\n        this.options = {};\n    }\n    load(data) {\n        if (!data) {\n            return;\n        }\n        if (data.clamp !== undefined) {\n            this.clamp = data.clamp;\n        }\n        this.delay.load(data.delay);\n        if (data.enable !== undefined) {\n            this.enable = data.enable;\n        }\n        this.generator = data.generator;\n        if (data.options) {\n            this.options = deepExtend(this.options, data.options);\n        }\n    }\n}\n","import { MoveTrailFill } from \"./MoveTrailFill\";\nexport class MoveTrail {\n    constructor() {\n        this.enable = false;\n        this.length = 10;\n        this.fill = new MoveTrailFill();\n    }\n    get fillColor() {\n        return this.fill.color;\n    }\n    set fillColor(value) {\n        this.fill.load({ color: value });\n    }\n    load(data) {\n        if (!data) {\n            return;\n        }\n        if (data.enable !== undefined) {\n            this.enable = data.enable;\n        }\n        if (data.fill !== undefined || data.fillColor !== undefined) {\n            this.fill.load(data.fill || { color: data.fillColor });\n        }\n        if (data.length !== undefined) {\n            this.length = data.length;\n        }\n    }\n}\n","import { OptionsColor } from \"../../OptionsColor\";\nexport class MoveTrailFill {\n    load(data) {\n        if (!data) {\n            return;\n        }\n        if (data.color !== undefined) {\n            this.color = OptionsColor.create(this.color, data.color);\n        }\n        if (data.image !== undefined) {\n            this.image = data.image;\n        }\n    }\n}\n","export class OutModes {\n    constructor() {\n        this.default = \"out\";\n    }\n    load(data) {\n        var _a, _b, _c, _d;\n        if (!data) {\n            return;\n        }\n        if (data.default !== undefined) {\n            this.default = data.default;\n        }\n        this.bottom = (_a = data.bottom) !== null && _a !== void 0 ? _a : data.default;\n        this.left = (_b = data.left) !== null && _b !== void 0 ? _b : data.default;\n        this.right = (_c = data.right) !== null && _c !== void 0 ? _c : data.default;\n        this.top = (_d = data.top) !== null && _d !== void 0 ? _d : data.default;\n    }\n}\n","import { deepExtend } from \"../../../../Utils/Utils\";\nimport { setRangeValue } from \"../../../../Utils/NumberUtils\";\nexport class Spin {\n    constructor() {\n        this.acceleration = 0;\n        this.enable = false;\n    }\n    load(data) {\n        if (!data) {\n            return;\n        }\n        if (data.acceleration !== undefined) {\n            this.acceleration = setRangeValue(data.acceleration);\n        }\n        if (data.enable !== undefined) {\n            this.enable = data.enable;\n        }\n        this.position = data.position ? deepExtend({}, data.position) : undefined;\n    }\n}\n","import { OpacityAnimation } from \"./OpacityAnimation\";\nimport { ValueWithRandom } from \"../../ValueWithRandom\";\nimport { setRangeValue } from \"../../../../Utils/NumberUtils\";\nexport class Opacity extends ValueWithRandom {\n    constructor() {\n        super();\n        this.animation = new OpacityAnimation();\n        this.random.minimumValue = 0.1;\n        this.value = 1;\n    }\n    get anim() {\n        return this.animation;\n    }\n    set anim(value) {\n        this.animation = value;\n    }\n    load(data) {\n        var _a;\n        if (!data) {\n            return;\n        }\n        super.load(data);\n        const animation = (_a = data.animation) !== null && _a !== void 0 ? _a : data.anim;\n        if (animation !== undefined) {\n            this.animation.load(animation);\n            this.value = setRangeValue(this.value, this.animation.enable ? this.animation.minimumValue : undefined);\n        }\n    }\n}\n","import { AnimationOptions } from \"../../AnimationOptions\";\nexport class OpacityAnimation extends AnimationOptions {\n    constructor() {\n        super();\n        this.destroy = \"none\";\n        this.enable = false;\n        this.speed = 2;\n        this.startValue = \"random\";\n        this.sync = false;\n    }\n    get opacity_min() {\n        return this.minimumValue;\n    }\n    set opacity_min(value) {\n        this.minimumValue = value;\n    }\n    load(data) {\n        var _a;\n        if (!data) {\n            return;\n        }\n        super.load(data);\n        if (data.destroy !== undefined) {\n            this.destroy = data.destroy;\n        }\n        if (data.enable !== undefined) {\n            this.enable = data.enable;\n        }\n        this.minimumValue = (_a = data.minimumValue) !== null && _a !== void 0 ? _a : data.opacity_min;\n        if (data.speed !== undefined) {\n            this.speed = data.speed;\n        }\n        if (data.startValue !== undefined) {\n            this.startValue = data.startValue;\n        }\n        if (data.sync !== undefined) {\n            this.sync = data.sync;\n        }\n    }\n}\n","import { setRangeValue } from \"../../Utils/NumberUtils\";\nexport class AnimationOptions {\n    constructor() {\n        this.count = 0;\n        this.enable = false;\n        this.speed = 1;\n        this.decay = 0;\n        this.sync = false;\n    }\n    load(data) {\n        if (!data) {\n            return;\n        }\n        if (data.count !== undefined) {\n            this.count = setRangeValue(data.count);\n        }\n        if (data.enable !== undefined) {\n            this.enable = data.enable;\n        }\n        if (data.speed !== undefined) {\n            this.speed = setRangeValue(data.speed);\n        }\n        if (data.decay !== undefined) {\n            this.decay = setRangeValue(data.decay);\n        }\n        if (data.sync !== undefined) {\n            this.sync = data.sync;\n        }\n    }\n}\n","import { ParticlesDensity } from \"./ParticlesDensity\";\nexport class ParticlesNumber {\n    constructor() {\n        this.density = new ParticlesDensity();\n        this.limit = 0;\n        this.value = 0;\n    }\n    get max() {\n        return this.limit;\n    }\n    set max(value) {\n        this.limit = value;\n    }\n    load(data) {\n        var _a;\n        if (!data) {\n            return;\n        }\n        this.density.load(data.density);\n        const limit = (_a = data.limit) !== null && _a !== void 0 ? _a : data.max;\n        if (limit !== undefined) {\n            this.limit = limit;\n        }\n        if (data.value !== undefined) {\n            this.value = data.value;\n        }\n    }\n}\n","export class ParticlesDensity {\n    constructor() {\n        this.enable = false;\n        this.width = 1920;\n        this.height = 1080;\n    }\n    get area() {\n        return this.width;\n    }\n    set area(value) {\n        this.width = value;\n    }\n    get factor() {\n        return this.height;\n    }\n    set factor(value) {\n        this.height = value;\n    }\n    get value_area() {\n        return this.area;\n    }\n    set value_area(value) {\n        this.area = value;\n    }\n    load(data) {\n        var _a, _b, _c;\n        if (!data) {\n            return;\n        }\n        if (data.enable !== undefined) {\n            this.enable = data.enable;\n        }\n        const width = (_b = (_a = data.width) !== null && _a !== void 0 ? _a : data.area) !== null && _b !== void 0 ? _b : data.value_area;\n        if (width !== undefined) {\n            this.width = width;\n        }\n        const height = (_c = data.height) !== null && _c !== void 0 ? _c : data.factor;\n        if (height !== undefined) {\n            this.height = height;\n        }\n    }\n}\n","import { OptionsColor } from \"../OptionsColor\";\nexport class Shadow {\n    constructor() {\n        this.blur = 0;\n        this.color = new OptionsColor();\n        this.enable = false;\n        this.offset = {\n            x: 0,\n            y: 0,\n        };\n        this.color.value = \"#000\";\n    }\n    load(data) {\n        if (!data) {\n            return;\n        }\n        if (data.blur !== undefined) {\n            this.blur = data.blur;\n        }\n        this.color = OptionsColor.create(this.color, data.color);\n        if (data.enable !== undefined) {\n            this.enable = data.enable;\n        }\n        if (data.offset === undefined) {\n            return;\n        }\n        if (data.offset.x !== undefined) {\n            this.offset.x = data.offset.x;\n        }\n        if (data.offset.y !== undefined) {\n            this.offset.y = data.offset.y;\n        }\n    }\n}\n","import { deepExtend } from \"../../../../Utils/Utils\";\nconst charKey = \"character\", charAltKey = \"char\", imageKey = \"image\", imageAltKey = \"images\", polygonKey = \"polygon\", polygonAltKey = \"star\";\nexport class Shape {\n    constructor() {\n        this.options = {};\n        this.type = \"circle\";\n    }\n    get character() {\n        var _a;\n        return ((_a = this.options[charKey]) !== null && _a !== void 0 ? _a : this.options[charAltKey]);\n    }\n    set character(value) {\n        this.options[charAltKey] = this.options[charKey] = value;\n    }\n    get custom() {\n        return this.options;\n    }\n    set custom(value) {\n        this.options = value;\n    }\n    get image() {\n        var _a;\n        return ((_a = this.options[imageKey]) !== null && _a !== void 0 ? _a : this.options[imageAltKey]);\n    }\n    set image(value) {\n        this.options[imageAltKey] = this.options[imageKey] = value;\n    }\n    get images() {\n        return this.image;\n    }\n    set images(value) {\n        this.image = value;\n    }\n    get polygon() {\n        var _a;\n        return ((_a = this.options[polygonKey]) !== null && _a !== void 0 ? _a : this.options[polygonAltKey]);\n    }\n    set polygon(value) {\n        this.options[polygonAltKey] = this.options[polygonKey] = value;\n    }\n    get stroke() {\n        return [];\n    }\n    set stroke(_value) {\n    }\n    load(data) {\n        var _a, _b, _c;\n        if (!data) {\n            return;\n        }\n        const options = (_a = data.options) !== null && _a !== void 0 ? _a : data.custom;\n        if (options !== undefined) {\n            for (const shape in options) {\n                const item = options[shape];\n                if (item) {\n                    this.options[shape] = deepExtend((_b = this.options[shape]) !== null && _b !== void 0 ? _b : {}, item);\n                }\n            }\n        }\n        this.loadShape(data.character, charKey, charAltKey, true);\n        this.loadShape(data.polygon, polygonKey, polygonAltKey, false);\n        this.loadShape((_c = data.image) !== null && _c !== void 0 ? _c : data.images, imageKey, imageAltKey, true);\n        if (data.type !== undefined) {\n            this.type = data.type;\n        }\n    }\n    loadShape(item, mainKey, altKey, altOverride) {\n        var _a, _b;\n        if (!item) {\n            return;\n        }\n        const isArray = item instanceof Array;\n        const emptyValue = isArray ? [] : {}, mainDifferentValues = isArray !== this.options[mainKey] instanceof Array, altDifferentValues = isArray !== this.options[altKey] instanceof Array;\n        if (mainDifferentValues) {\n            this.options[mainKey] = emptyValue;\n        }\n        if (altDifferentValues && altOverride) {\n            this.options[altKey] = emptyValue;\n        }\n        this.options[mainKey] = deepExtend((_a = this.options[mainKey]) !== null && _a !== void 0 ? _a : emptyValue, item);\n        if (!this.options[altKey] || altOverride) {\n            this.options[altKey] = deepExtend((_b = this.options[altKey]) !== null && _b !== void 0 ? _b : emptyValue, item);\n        }\n    }\n}\n","import { SizeAnimation } from \"./SizeAnimation\";\nimport { ValueWithRandom } from \"../../ValueWithRandom\";\nimport { setRangeValue } from \"../../../../Utils/NumberUtils\";\nexport class Size extends ValueWithRandom {\n    constructor() {\n        super();\n        this.animation = new SizeAnimation();\n        this.random.minimumValue = 1;\n        this.value = 3;\n    }\n    get anim() {\n        return this.animation;\n    }\n    set anim(value) {\n        this.animation = value;\n    }\n    load(data) {\n        var _a;\n        super.load(data);\n        if (!data) {\n            return;\n        }\n        const animation = (_a = data.animation) !== null && _a !== void 0 ? _a : data.anim;\n        if (animation !== undefined) {\n            this.animation.load(animation);\n            this.value = setRangeValue(this.value, this.animation.enable ? this.animation.minimumValue : undefined);\n        }\n    }\n}\n","import { AnimationOptions } from \"../../AnimationOptions\";\nexport class SizeAnimation extends AnimationOptions {\n    constructor() {\n        super();\n        this.destroy = \"none\";\n        this.enable = false;\n        this.speed = 5;\n        this.startValue = \"random\";\n        this.sync = false;\n    }\n    get size_min() {\n        return this.minimumValue;\n    }\n    set size_min(value) {\n        this.minimumValue = value;\n    }\n    load(data) {\n        var _a;\n        super.load(data);\n        if (!data) {\n            return;\n        }\n        if (data.destroy !== undefined) {\n            this.destroy = data.destroy;\n        }\n        if (data.enable !== undefined) {\n            this.enable = data.enable;\n        }\n        this.minimumValue = (_a = data.minimumValue) !== null && _a !== void 0 ? _a : data.size_min;\n        if (data.speed !== undefined) {\n            this.speed = data.speed;\n        }\n        if (data.startValue !== undefined) {\n            this.startValue = data.startValue;\n        }\n        if (data.sync !== undefined) {\n            this.sync = data.sync;\n        }\n    }\n}\n","import { AnimatableColor } from \"../AnimatableColor\";\nimport { setRangeValue } from \"../../../Utils/NumberUtils\";\nexport class Stroke {\n    constructor() {\n        this.width = 0;\n    }\n    load(data) {\n        if (!data) {\n            return;\n        }\n        if (data.color !== undefined) {\n            this.color = AnimatableColor.create(this.color, data.color);\n        }\n        if (data.width !== undefined) {\n            this.width = setRangeValue(data.width);\n        }\n        if (data.opacity !== undefined) {\n            this.opacity = setRangeValue(data.opacity);\n        }\n    }\n}\n","import { ValueWithRandom } from \"../../ValueWithRandom\";\nexport class ZIndex extends ValueWithRandom {\n    constructor() {\n        super();\n        this.opacityRate = 1;\n        this.sizeRate = 1;\n        this.velocityRate = 1;\n    }\n    load(data) {\n        super.load(data);\n        if (!data) {\n            return;\n        }\n        if (data.opacityRate !== undefined) {\n            this.opacityRate = data.opacityRate;\n        }\n        if (data.sizeRate !== undefined) {\n            this.sizeRate = data.sizeRate;\n        }\n        if (data.velocityRate !== undefined) {\n            this.velocityRate = data.velocityRate;\n        }\n    }\n}\n","import { InteractionManager } from \"./Utils/InteractionManager\";\nimport { Particle } from \"./Particle\";\nimport { Point } from \"./Utils/Point\";\nimport { QuadTree } from \"./Utils/QuadTree\";\nimport { Rectangle } from \"./Utils/Rectangle\";\nimport { calcPositionFromSize } from \"../Utils/NumberUtils\";\nexport class Particles {\n    constructor(engine, container) {\n        this.container = container;\n        this._engine = engine;\n        this.nextId = 0;\n        this.array = [];\n        this.zArray = [];\n        this.pool = [];\n        this.limit = 0;\n        this.needsSort = false;\n        this.lastZIndex = 0;\n        this.interactionManager = new InteractionManager(this._engine, container);\n        const canvasSize = this.container.canvas.size;\n        this.quadTree = new QuadTree(new Rectangle(-canvasSize.width / 4, -canvasSize.height / 4, (canvasSize.width * 3) / 2, (canvasSize.height * 3) / 2), 4);\n        this.movers = this._engine.plugins.getMovers(container, true);\n        this.updaters = this._engine.plugins.getUpdaters(container, true);\n    }\n    get count() {\n        return this.array.length;\n    }\n    addManualParticles() {\n        const container = this.container, options = container.actualOptions;\n        for (const particle of options.manualParticles) {\n            this.addParticle(calcPositionFromSize({\n                size: container.canvas.size,\n                position: particle.position,\n            }), particle.options);\n        }\n    }\n    addParticle(position, overrideOptions, group, initializer) {\n        const container = this.container, options = container.actualOptions, limit = options.particles.number.limit;\n        if (limit > 0) {\n            const countToRemove = this.count + 1 - limit;\n            if (countToRemove > 0) {\n                this.removeQuantity(countToRemove);\n            }\n        }\n        return this._pushParticle(position, overrideOptions, group, initializer);\n    }\n    clear() {\n        this.array = [];\n        this.zArray = [];\n    }\n    destroy() {\n        this.array = [];\n        this.zArray = [];\n        this.movers = [];\n        this.updaters = [];\n    }\n    async draw(delta) {\n        const container = this.container, canvasSize = this.container.canvas.size;\n        this.quadTree = new QuadTree(new Rectangle(-canvasSize.width / 4, -canvasSize.height / 4, (canvasSize.width * 3) / 2, (canvasSize.height * 3) / 2), 4);\n        container.canvas.clear();\n        await this.update(delta);\n        if (this.needsSort) {\n            this.zArray.sort((a, b) => b.position.z - a.position.z || a.id - b.id);\n            this.lastZIndex = this.zArray[this.zArray.length - 1].position.z;\n            this.needsSort = false;\n        }\n        for (const [, plugin] of container.plugins) {\n            container.canvas.drawPlugin(plugin, delta);\n        }\n        for (const p of this.zArray) {\n            p.draw(delta);\n        }\n    }\n    handleClickMode(mode) {\n        this.interactionManager.handleClickMode(mode);\n    }\n    init() {\n        var _a;\n        const container = this.container, options = container.actualOptions;\n        this.lastZIndex = 0;\n        this.needsSort = false;\n        let handled = false;\n        this.updaters = this._engine.plugins.getUpdaters(container, true);\n        this.interactionManager.init();\n        for (const [, plugin] of container.plugins) {\n            if (plugin.particlesInitialization !== undefined) {\n                handled = plugin.particlesInitialization();\n            }\n            if (handled) {\n                break;\n            }\n        }\n        this.interactionManager.init();\n        for (const [, pathGenerator] of container.pathGenerators) {\n            pathGenerator.init(container);\n        }\n        this.addManualParticles();\n        if (!handled) {\n            for (const group in options.particles.groups) {\n                const groupOptions = options.particles.groups[group];\n                for (let i = this.count, j = 0; j < ((_a = groupOptions.number) === null || _a === void 0 ? void 0 : _a.value) && i < options.particles.number.value; i++, j++) {\n                    this.addParticle(undefined, groupOptions, group);\n                }\n            }\n            for (let i = this.count; i < options.particles.number.value; i++) {\n                this.addParticle();\n            }\n        }\n    }\n    push(nb, mouse, overrideOptions, group) {\n        this.pushing = true;\n        for (let i = 0; i < nb; i++) {\n            this.addParticle(mouse === null || mouse === void 0 ? void 0 : mouse.position, overrideOptions, group);\n        }\n        this.pushing = false;\n    }\n    async redraw() {\n        this.clear();\n        this.init();\n        await this.draw({ value: 0, factor: 0 });\n    }\n    remove(particle, group, override) {\n        this.removeAt(this.array.indexOf(particle), undefined, group, override);\n    }\n    removeAt(index, quantity = 1, group, override) {\n        if (index < 0 || index > this.count) {\n            return;\n        }\n        let deleted = 0;\n        for (let i = index; deleted < quantity && i < this.count; i++) {\n            const particle = this.array[i];\n            if (!particle || particle.group !== group) {\n                continue;\n            }\n            particle.destroy(override);\n            this.array.splice(i--, 1);\n            const zIdx = this.zArray.indexOf(particle);\n            this.zArray.splice(zIdx, 1);\n            this.pool.push(particle);\n            deleted++;\n            this._engine.dispatchEvent(\"particleRemoved\", {\n                container: this.container,\n                data: {\n                    particle,\n                },\n            });\n        }\n    }\n    removeQuantity(quantity, group) {\n        this.removeAt(0, quantity, group);\n    }\n    setDensity() {\n        const options = this.container.actualOptions;\n        for (const group in options.particles.groups) {\n            this._applyDensity(options.particles.groups[group], 0, group);\n        }\n        this._applyDensity(options.particles, options.manualParticles.length);\n    }\n    async update(delta) {\n        var _a, _b;\n        const container = this.container, particlesToDelete = [];\n        for (const [, pathGenerator] of container.pathGenerators) {\n            pathGenerator.update();\n        }\n        for (const [, plugin] of container.plugins) {\n            (_a = plugin.update) === null || _a === void 0 ? void 0 : _a.call(plugin, delta);\n        }\n        for (const particle of this.array) {\n            const resizeFactor = container.canvas.resizeFactor;\n            if (resizeFactor && !particle.ignoresResizeRatio) {\n                particle.position.x *= resizeFactor.width;\n                particle.position.y *= resizeFactor.height;\n                particle.initialPosition.x *= resizeFactor.width;\n                particle.initialPosition.y *= resizeFactor.height;\n            }\n            particle.ignoresResizeRatio = false;\n            await this.interactionManager.reset(particle);\n            for (const [, plugin] of this.container.plugins) {\n                if (particle.destroyed) {\n                    break;\n                }\n                (_b = plugin.particleUpdate) === null || _b === void 0 ? void 0 : _b.call(plugin, particle, delta);\n            }\n            for (const mover of this.movers) {\n                if (mover.isEnabled(particle)) {\n                    mover.move(particle, delta);\n                }\n            }\n            if (particle.destroyed) {\n                particlesToDelete.push(particle);\n                continue;\n            }\n            this.quadTree.insert(new Point(particle.getPosition(), particle));\n        }\n        for (const particle of particlesToDelete) {\n            this.remove(particle);\n        }\n        await this.interactionManager.externalInteract(delta);\n        for (const particle of this.array) {\n            for (const updater of this.updaters) {\n                updater.update(particle, delta);\n            }\n            if (!particle.destroyed && !particle.spawning) {\n                await this.interactionManager.particlesInteract(particle, delta);\n            }\n        }\n        delete container.canvas.resizeFactor;\n    }\n    _applyDensity(options, manualCount, group) {\n        var _a;\n        if (!((_a = options.number.density) === null || _a === void 0 ? void 0 : _a.enable)) {\n            return;\n        }\n        const numberOptions = options.number, densityFactor = this._initDensityFactor(numberOptions.density), optParticlesNumber = numberOptions.value, optParticlesLimit = numberOptions.limit > 0 ? numberOptions.limit : optParticlesNumber, particlesNumber = Math.min(optParticlesNumber, optParticlesLimit) * densityFactor + manualCount, particlesCount = Math.min(this.count, this.array.filter((t) => t.group === group).length);\n        this.limit = numberOptions.limit * densityFactor;\n        if (particlesCount < particlesNumber) {\n            this.push(Math.abs(particlesNumber - particlesCount), undefined, options, group);\n        }\n        else if (particlesCount > particlesNumber) {\n            this.removeQuantity(particlesCount - particlesNumber, group);\n        }\n    }\n    _initDensityFactor(densityOptions) {\n        const container = this.container;\n        if (!container.canvas.element || !densityOptions.enable) {\n            return 1;\n        }\n        const canvas = container.canvas.element, pxRatio = container.retina.pixelRatio;\n        return (canvas.width * canvas.height) / (densityOptions.factor * pxRatio ** 2 * densityOptions.area);\n    }\n    _pushParticle(position, overrideOptions, group, initializer) {\n        try {\n            let particle = this.pool.pop();\n            if (particle) {\n                particle.init(this.nextId, position, overrideOptions, group);\n            }\n            else {\n                particle = new Particle(this._engine, this.nextId, this.container, position, overrideOptions, group);\n            }\n            let canAdd = true;\n            if (initializer) {\n                canAdd = initializer(particle);\n            }\n            if (!canAdd) {\n                return;\n            }\n            this.array.push(particle);\n            this.zArray.push(particle);\n            this.nextId++;\n            this._engine.dispatchEvent(\"particleAdded\", {\n                container: this.container,\n                data: {\n                    particle,\n                },\n            });\n            return particle;\n        }\n        catch (e) {\n            console.warn(`error adding particle: ${e}`);\n            return;\n        }\n    }\n}\n","export class InteractionManager {\n    constructor(engine, container) {\n        this.container = container;\n        this._engine = engine;\n        this._interactors = this._engine.plugins.getInteractors(this.container, true);\n        this._externalInteractors = [];\n        this._particleInteractors = [];\n    }\n    async externalInteract(delta) {\n        for (const interactor of this._externalInteractors) {\n            if (interactor.isEnabled()) {\n                await interactor.interact(delta);\n            }\n        }\n    }\n    handleClickMode(mode) {\n        for (const interactor of this._externalInteractors) {\n            if (interactor.handleClickMode) {\n                interactor.handleClickMode(mode);\n            }\n        }\n    }\n    init() {\n        this._externalInteractors = [];\n        this._particleInteractors = [];\n        for (const interactor of this._interactors) {\n            switch (interactor.type) {\n                case \"external\":\n                    this._externalInteractors.push(interactor);\n                    break;\n                case \"particles\":\n                    this._particleInteractors.push(interactor);\n                    break;\n            }\n            interactor.init();\n        }\n    }\n    async particlesInteract(particle, delta) {\n        for (const interactor of this._externalInteractors) {\n            interactor.clear(particle, delta);\n        }\n        for (const interactor of this._particleInteractors) {\n            if (interactor.isEnabled(particle)) {\n                await interactor.interact(particle, delta);\n            }\n        }\n    }\n    async reset(particle) {\n        for (const interactor of this._externalInteractors) {\n            if (interactor.isEnabled()) {\n                await interactor.reset(particle);\n            }\n        }\n        for (const interactor of this._particleInteractors) {\n            if (interactor.isEnabled(particle)) {\n                await interactor.reset(particle);\n            }\n        }\n    }\n}\n","import { calcExactPositionOrRandomFromSize, clamp, getDistance, getParticleBaseVelocity, getParticleDirectionAngle, getRandom, getRangeMax, getRangeMin, getRangeValue, getValue, randomInRange, setRangeValue, } from \"../Utils/NumberUtils\";\nimport { deepExtend, isInArray, itemFromSingleOrMultiple } from \"../Utils/Utils\";\nimport { getHslFromAnimation, rangeColorToRgb } from \"../Utils/ColorUtils\";\nimport { Interactivity } from \"../Options/Classes/Interactivity/Interactivity\";\nimport { Vector } from \"./Utils/Vector\";\nimport { Vector3d } from \"./Utils/Vector3d\";\nimport { alterHsl } from \"../Utils/CanvasUtils\";\nimport { loadParticlesOptions } from \"../Utils/OptionsUtils\";\nconst fixOutMode = (data) => {\n    if (!isInArray(data.outMode, data.checkModes)) {\n        return;\n    }\n    if (data.coord > data.maxCoord - data.radius * 2) {\n        data.setCb(-data.radius);\n    }\n    else if (data.coord < data.radius * 2) {\n        data.setCb(data.radius);\n    }\n};\nexport class Particle {\n    constructor(engine, id, container, position, overrideOptions, group) {\n        this.container = container;\n        this._engine = engine;\n        this.init(id, position, overrideOptions, group);\n    }\n    destroy(override) {\n        var _a;\n        if (this.unbreakable || this.destroyed) {\n            return;\n        }\n        this.destroyed = true;\n        this.bubble.inRange = false;\n        this.slow.inRange = false;\n        for (const [, plugin] of this.container.plugins) {\n            if (plugin.particleDestroyed) {\n                plugin.particleDestroyed(this, override);\n            }\n        }\n        for (const updater of this.container.particles.updaters) {\n            if (updater.particleDestroyed) {\n                updater.particleDestroyed(this, override);\n            }\n        }\n        (_a = this.pathGenerator) === null || _a === void 0 ? void 0 : _a.reset(this);\n    }\n    draw(delta) {\n        const container = this.container;\n        for (const [, plugin] of container.plugins) {\n            container.canvas.drawParticlePlugin(plugin, this, delta);\n        }\n        container.canvas.drawParticle(this, delta);\n    }\n    getFillColor() {\n        var _a;\n        return this._getRollColor((_a = this.bubble.color) !== null && _a !== void 0 ? _a : getHslFromAnimation(this.color));\n    }\n    getMass() {\n        return (this.getRadius() ** 2 * Math.PI) / 2;\n    }\n    getPosition() {\n        return {\n            x: this.position.x + this.offset.x,\n            y: this.position.y + this.offset.y,\n            z: this.position.z,\n        };\n    }\n    getRadius() {\n        var _a;\n        return (_a = this.bubble.radius) !== null && _a !== void 0 ? _a : this.size.value;\n    }\n    getStrokeColor() {\n        var _a;\n        return this._getRollColor((_a = this.bubble.color) !== null && _a !== void 0 ? _a : getHslFromAnimation(this.strokeColor));\n    }\n    init(id, position, overrideOptions, group) {\n        var _a, _b, _c, _d, _e, _f, _g, _h, _j;\n        const container = this.container, engine = this._engine;\n        this.id = id;\n        this.group = group;\n        this.fill = true;\n        this.pathRotation = false;\n        this.close = true;\n        this.lastPathTime = 0;\n        this.destroyed = false;\n        this.unbreakable = false;\n        this.rotation = 0;\n        this.misplaced = false;\n        this.retina = {\n            maxDistance: {},\n        };\n        this.outType = \"normal\";\n        this.ignoresResizeRatio = true;\n        const pxRatio = container.retina.pixelRatio, mainOptions = container.actualOptions, particlesOptions = loadParticlesOptions(this._engine, container, mainOptions.particles), shapeType = particlesOptions.shape.type, { reduceDuplicates } = particlesOptions;\n        this.shape = itemFromSingleOrMultiple(shapeType, this.id, reduceDuplicates);\n        const shapeOptions = particlesOptions.shape;\n        if (overrideOptions && overrideOptions.shape && overrideOptions.shape.type) {\n            const overrideShapeType = overrideOptions.shape.type, shape = itemFromSingleOrMultiple(overrideShapeType, this.id, reduceDuplicates);\n            if (shape) {\n                this.shape = shape;\n                shapeOptions.load(overrideOptions.shape);\n            }\n        }\n        this.shapeData = this._loadShapeData(shapeOptions, reduceDuplicates);\n        particlesOptions.load(overrideOptions);\n        particlesOptions.load((_a = this.shapeData) === null || _a === void 0 ? void 0 : _a.particles);\n        this.interactivity = new Interactivity(engine, container);\n        this.interactivity.load(container.actualOptions.interactivity);\n        this.interactivity.load(particlesOptions.interactivity);\n        this.fill = (_c = (_b = this.shapeData) === null || _b === void 0 ? void 0 : _b.fill) !== null && _c !== void 0 ? _c : this.fill;\n        this.close = (_e = (_d = this.shapeData) === null || _d === void 0 ? void 0 : _d.close) !== null && _e !== void 0 ? _e : this.close;\n        this.options = particlesOptions;\n        const pathOptions = this.options.move.path;\n        this.pathDelay = getValue(pathOptions.delay) * 1000;\n        if (pathOptions.generator) {\n            this.pathGenerator = this._engine.plugins.getPathGenerator(pathOptions.generator);\n            if (this.pathGenerator && container.addPath(pathOptions.generator, this.pathGenerator)) {\n                this.pathGenerator.init(container);\n            }\n        }\n        const zIndexValue = getRangeValue(this.options.zIndex.value);\n        container.retina.initParticle(this);\n        const sizeOptions = this.options.size, sizeRange = sizeOptions.value, sizeAnimation = sizeOptions.animation;\n        this.size = {\n            enable: sizeOptions.animation.enable,\n            value: getRangeValue(sizeOptions.value) * container.retina.pixelRatio,\n            max: getRangeMax(sizeRange) * pxRatio,\n            min: getRangeMin(sizeRange) * pxRatio,\n            loops: 0,\n            maxLoops: getRangeValue(sizeOptions.animation.count),\n        };\n        if (sizeAnimation.enable) {\n            this.size.status = \"increasing\";\n            this.size.decay = 1 - getRangeValue(sizeAnimation.decay);\n            switch (sizeAnimation.startValue) {\n                case \"min\":\n                    this.size.value = this.size.min;\n                    this.size.status = \"increasing\";\n                    break;\n                case \"random\":\n                    this.size.value = randomInRange(this.size);\n                    this.size.status = getRandom() >= 0.5 ? \"increasing\" : \"decreasing\";\n                    break;\n                case \"max\":\n                default:\n                    this.size.value = this.size.max;\n                    this.size.status = \"decreasing\";\n                    break;\n            }\n        }\n        this.size.initialValue = this.size.value;\n        this.bubble = {\n            inRange: false,\n        };\n        this.slow = {\n            inRange: false,\n            factor: 1,\n        };\n        this.position = this._calcPosition(container, position, clamp(zIndexValue, 0, container.zLayers));\n        this.initialPosition = this.position.copy();\n        const canvasSize = container.canvas.size, moveCenter = Object.assign({}, this.options.move.center), isCenterPercent = moveCenter.mode === \"percent\";\n        this.moveCenter = {\n            x: moveCenter.x * (isCenterPercent ? canvasSize.width / 100 : 1),\n            y: moveCenter.y * (isCenterPercent ? canvasSize.height / 100 : 1),\n            radius: (_f = this.options.move.center.radius) !== null && _f !== void 0 ? _f : 0,\n            mode: (_g = this.options.move.center.mode) !== null && _g !== void 0 ? _g : \"percent\",\n        };\n        this.direction = getParticleDirectionAngle(this.options.move.direction, this.position, this.moveCenter);\n        switch (this.options.move.direction) {\n            case \"inside\":\n                this.outType = \"inside\";\n                break;\n            case \"outside\":\n                this.outType = \"outside\";\n                break;\n        }\n        this.initialVelocity = this._calculateVelocity();\n        this.velocity = this.initialVelocity.copy();\n        this.moveDecay = 1 - getRangeValue(this.options.move.decay);\n        this.offset = Vector.origin;\n        const particles = container.particles;\n        particles.needsSort = particles.needsSort || particles.lastZIndex < this.position.z;\n        particles.lastZIndex = this.position.z;\n        this.zIndexFactor = this.position.z / container.zLayers;\n        this.sides = 24;\n        let drawer = container.drawers.get(this.shape);\n        if (!drawer) {\n            drawer = this._engine.plugins.getShapeDrawer(this.shape);\n            if (drawer) {\n                container.drawers.set(this.shape, drawer);\n            }\n        }\n        if (drawer === null || drawer === void 0 ? void 0 : drawer.loadShape) {\n            drawer === null || drawer === void 0 ? void 0 : drawer.loadShape(this);\n        }\n        const sideCountFunc = drawer === null || drawer === void 0 ? void 0 : drawer.getSidesCount;\n        if (sideCountFunc) {\n            this.sides = sideCountFunc(this);\n        }\n        this.spawning = false;\n        this.shadowColor = rangeColorToRgb(this.options.shadow.color);\n        for (const updater of container.particles.updaters) {\n            updater.init(this);\n        }\n        for (const mover of container.particles.movers) {\n            (_h = mover.init) === null || _h === void 0 ? void 0 : _h.call(mover, this);\n        }\n        if (drawer === null || drawer === void 0 ? void 0 : drawer.particleInit) {\n            drawer.particleInit(container, this);\n        }\n        for (const [, plugin] of container.plugins) {\n            (_j = plugin.particleCreated) === null || _j === void 0 ? void 0 : _j.call(plugin, this);\n        }\n    }\n    isInsideCanvas() {\n        const radius = this.getRadius(), canvasSize = this.container.canvas.size;\n        return (this.position.x >= -radius &&\n            this.position.y >= -radius &&\n            this.position.y <= canvasSize.height + radius &&\n            this.position.x <= canvasSize.width + radius);\n    }\n    isVisible() {\n        return !this.destroyed && !this.spawning && this.isInsideCanvas();\n    }\n    reset() {\n        var _a;\n        for (const updater of this.container.particles.updaters) {\n            (_a = updater.reset) === null || _a === void 0 ? void 0 : _a.call(updater, this);\n        }\n    }\n    _calcPosition(container, position, zIndex, tryCount = 0) {\n        var _a, _b, _c, _d;\n        for (const [, plugin] of container.plugins) {\n            const pluginPos = plugin.particlePosition !== undefined ? plugin.particlePosition(position, this) : undefined;\n            if (pluginPos !== undefined) {\n                return Vector3d.create(pluginPos.x, pluginPos.y, zIndex);\n            }\n        }\n        const canvasSize = container.canvas.size, exactPosition = calcExactPositionOrRandomFromSize({\n            size: canvasSize,\n            position: position,\n        }), pos = Vector3d.create(exactPosition.x, exactPosition.y, zIndex), radius = this.getRadius(), outModes = this.options.move.outModes, fixHorizontal = (outMode) => {\n            fixOutMode({\n                outMode,\n                checkModes: [\"bounce\", \"bounce-horizontal\"],\n                coord: pos.x,\n                maxCoord: container.canvas.size.width,\n                setCb: (value) => (pos.x += value),\n                radius,\n            });\n        }, fixVertical = (outMode) => {\n            fixOutMode({\n                outMode,\n                checkModes: [\"bounce\", \"bounce-vertical\"],\n                coord: pos.y,\n                maxCoord: container.canvas.size.height,\n                setCb: (value) => (pos.y += value),\n                radius,\n            });\n        };\n        fixHorizontal((_a = outModes.left) !== null && _a !== void 0 ? _a : outModes.default);\n        fixHorizontal((_b = outModes.right) !== null && _b !== void 0 ? _b : outModes.default);\n        fixVertical((_c = outModes.top) !== null && _c !== void 0 ? _c : outModes.default);\n        fixVertical((_d = outModes.bottom) !== null && _d !== void 0 ? _d : outModes.default);\n        if (this._checkOverlap(pos, tryCount)) {\n            return this._calcPosition(container, undefined, zIndex, tryCount + 1);\n        }\n        return pos;\n    }\n    _calculateVelocity() {\n        const baseVelocity = getParticleBaseVelocity(this.direction), res = baseVelocity.copy(), moveOptions = this.options.move;\n        if (moveOptions.direction === \"inside\" || moveOptions.direction === \"outside\") {\n            return res;\n        }\n        const rad = (Math.PI / 180) * getRangeValue(moveOptions.angle.value), radOffset = (Math.PI / 180) * getRangeValue(moveOptions.angle.offset), range = {\n            left: radOffset - rad / 2,\n            right: radOffset + rad / 2,\n        };\n        if (!moveOptions.straight) {\n            res.angle += randomInRange(setRangeValue(range.left, range.right));\n        }\n        if (moveOptions.random && typeof moveOptions.speed === \"number\") {\n            res.length *= getRandom();\n        }\n        return res;\n    }\n    _checkOverlap(pos, tryCount = 0) {\n        const collisionsOptions = this.options.collisions, radius = this.getRadius();\n        if (!collisionsOptions.enable) {\n            return false;\n        }\n        const overlapOptions = collisionsOptions.overlap;\n        if (overlapOptions.enable) {\n            return false;\n        }\n        const retries = overlapOptions.retries;\n        if (retries >= 0 && tryCount > retries) {\n            throw new Error(\"Particle is overlapping and can't be placed\");\n        }\n        let overlaps = false;\n        for (const particle of this.container.particles.array) {\n            if (getDistance(pos, particle.position) < radius + particle.getRadius()) {\n                overlaps = true;\n                break;\n            }\n        }\n        return overlaps;\n    }\n    _getRollColor(color) {\n        var _a;\n        if (!color || !this.roll || (!this.backColor && !this.roll.alter)) {\n            return color;\n        }\n        const backFactor = this.roll.horizontal && this.roll.vertical ? 2 : 1, backSum = this.roll.horizontal ? Math.PI / 2 : 0, rolled = Math.floor((((_a = this.roll.angle) !== null && _a !== void 0 ? _a : 0) + backSum) / (Math.PI / backFactor)) % 2;\n        if (!rolled) {\n            return color;\n        }\n        if (this.backColor) {\n            return this.backColor;\n        }\n        if (this.roll.alter) {\n            return alterHsl(color, this.roll.alter.type, this.roll.alter.value);\n        }\n        return color;\n    }\n    _loadShapeData(shapeOptions, reduceDuplicates) {\n        const shapeData = shapeOptions.options[this.shape];\n        if (shapeData) {\n            return deepExtend({}, itemFromSingleOrMultiple(shapeData, this.id, reduceDuplicates));\n        }\n    }\n}\n","export class Point {\n    constructor(position, particle) {\n        this.position = position;\n        this.particle = particle;\n    }\n}\n","import { Circle } from \"./Circle\";\nimport { Rectangle } from \"./Rectangle\";\nimport { getDistance } from \"../../Utils/NumberUtils\";\nexport class QuadTree {\n    constructor(rectangle, capacity) {\n        this.rectangle = rectangle;\n        this.capacity = capacity;\n        this._points = [];\n        this._divided = false;\n    }\n    insert(point) {\n        var _a, _b, _c, _d, _e;\n        if (!this.rectangle.contains(point.position)) {\n            return false;\n        }\n        if (this._points.length < this.capacity) {\n            this._points.push(point);\n            return true;\n        }\n        if (!this._divided) {\n            this.subdivide();\n        }\n        return ((_e = (((_a = this._NE) === null || _a === void 0 ? void 0 : _a.insert(point)) ||\n            ((_b = this._NW) === null || _b === void 0 ? void 0 : _b.insert(point)) ||\n            ((_c = this._SE) === null || _c === void 0 ? void 0 : _c.insert(point)) ||\n            ((_d = this._SW) === null || _d === void 0 ? void 0 : _d.insert(point)))) !== null && _e !== void 0 ? _e : false);\n    }\n    query(range, check, found) {\n        var _a, _b, _c, _d;\n        const res = found !== null && found !== void 0 ? found : [];\n        if (!range.intersects(this.rectangle)) {\n            return [];\n        }\n        for (const p of this._points) {\n            if (!range.contains(p.position) &&\n                getDistance(range.position, p.position) > p.particle.getRadius() &&\n                (!check || check(p.particle))) {\n                continue;\n            }\n            res.push(p.particle);\n        }\n        if (this._divided) {\n            (_a = this._NE) === null || _a === void 0 ? void 0 : _a.query(range, check, res);\n            (_b = this._NW) === null || _b === void 0 ? void 0 : _b.query(range, check, res);\n            (_c = this._SE) === null || _c === void 0 ? void 0 : _c.query(range, check, res);\n            (_d = this._SW) === null || _d === void 0 ? void 0 : _d.query(range, check, res);\n        }\n        return res;\n    }\n    queryCircle(position, radius, check) {\n        return this.query(new Circle(position.x, position.y, radius), check);\n    }\n    queryRectangle(position, size, check) {\n        return this.query(new Rectangle(position.x, position.y, size.width, size.height), check);\n    }\n    subdivide() {\n        const x = this.rectangle.position.x, y = this.rectangle.position.y, w = this.rectangle.size.width, h = this.rectangle.size.height, capacity = this.capacity;\n        this._NE = new QuadTree(new Rectangle(x, y, w / 2, h / 2), capacity);\n        this._NW = new QuadTree(new Rectangle(x + w / 2, y, w / 2, h / 2), capacity);\n        this._SE = new QuadTree(new Rectangle(x, y + h / 2, w / 2, h / 2), capacity);\n        this._SW = new QuadTree(new Rectangle(x + w / 2, y + h / 2, w / 2, h / 2), capacity);\n        this._divided = true;\n    }\n}\n","import { Range } from \"./Range\";\nimport { getDistance } from \"../../Utils/NumberUtils\";\nexport class Circle extends Range {\n    constructor(x, y, radius) {\n        super(x, y);\n        this.radius = radius;\n    }\n    contains(point) {\n        return getDistance(point, this.position) <= this.radius;\n    }\n    intersects(range) {\n        const rect = range, circle = range, pos1 = this.position, pos2 = range.position, distPos = { x: Math.abs(pos2.x - pos1.x), y: Math.abs(pos2.y - pos1.y) }, r = this.radius;\n        if (circle.radius !== undefined) {\n            const rSum = r + circle.radius, dist = Math.sqrt(distPos.x ** 2 + distPos.y ** 2);\n            return rSum > dist;\n        }\n        else if (rect.size !== undefined) {\n            const w = rect.size.width, h = rect.size.height, edges = Math.pow(distPos.x - w, 2) + Math.pow(distPos.y - h, 2);\n            return edges <= r ** 2 || (distPos.x <= r + w && distPos.y <= r + h) || distPos.x <= w || distPos.y <= h;\n        }\n        return false;\n    }\n}\n","export class Range {\n    constructor(x, y) {\n        this.position = {\n            x: x,\n            y: y,\n        };\n    }\n}\n","import { Circle } from \"./Circle\";\nimport { Range } from \"./Range\";\nexport class Rectangle extends Range {\n    constructor(x, y, width, height) {\n        super(x, y);\n        this.size = {\n            height: height,\n            width: width,\n        };\n    }\n    contains(point) {\n        const w = this.size.width, h = this.size.height, pos = this.position;\n        return point.x >= pos.x && point.x <= pos.x + w && point.y >= pos.y && point.y <= pos.y + h;\n    }\n    intersects(range) {\n        if (range instanceof Circle) {\n            range.intersects(this);\n        }\n        const w = this.size.width, h = this.size.height, pos1 = this.position, pos2 = range.position, size2 = range instanceof Rectangle ? range.size : { width: 0, height: 0 }, w2 = size2.width, h2 = size2.height;\n        return pos2.x < pos1.x + w && pos2.x + w2 > pos1.x && pos2.y < pos1.y + h && pos2.y + h2 > pos1.y;\n    }\n}\n","import { getRangeValue } from \"../Utils/NumberUtils\";\nimport { isSsr } from \"../Utils/Utils\";\nexport class Retina {\n    constructor(container) {\n        this.container = container;\n    }\n    init() {\n        const container = this.container, options = container.actualOptions;\n        this.pixelRatio = !options.detectRetina || isSsr() ? 1 : window.devicePixelRatio;\n        this.reduceFactor = 1;\n        const ratio = this.pixelRatio;\n        if (container.canvas.element) {\n            const element = container.canvas.element;\n            container.canvas.size.width = element.offsetWidth * ratio;\n            container.canvas.size.height = element.offsetHeight * ratio;\n        }\n        const particles = options.particles;\n        this.attractDistance = getRangeValue(particles.move.attract.distance) * ratio;\n        this.sizeAnimationSpeed = getRangeValue(particles.size.animation.speed) * ratio;\n        this.maxSpeed = getRangeValue(particles.move.gravity.maxSpeed) * ratio;\n    }\n    initParticle(particle) {\n        const options = particle.options, ratio = this.pixelRatio, moveDistance = options.move.distance, props = particle.retina;\n        props.attractDistance = getRangeValue(options.move.attract.distance) * ratio;\n        props.moveDrift = getRangeValue(options.move.drift) * ratio;\n        props.moveSpeed = getRangeValue(options.move.speed) * ratio;\n        props.sizeAnimationSpeed = getRangeValue(options.size.animation.speed) * ratio;\n        const maxDistance = props.maxDistance;\n        maxDistance.horizontal = moveDistance.horizontal !== undefined ? moveDistance.horizontal * ratio : undefined;\n        maxDistance.vertical = moveDistance.vertical !== undefined ? moveDistance.vertical * ratio : undefined;\n        props.maxSpeed = getRangeValue(options.move.gravity.maxSpeed) * ratio;\n    }\n}\n","import { executeOnSingleOrMultiple } from \"../../Utils/Utils\";\nfunction getItemsFromInitializer(container, map, initializers, force = false) {\n    let res = map.get(container);\n    if (!res || force) {\n        res = [...initializers.values()].map((t) => t(container));\n        map.set(container, res);\n    }\n    return res;\n}\nexport class Plugins {\n    constructor(engine) {\n        this._engine = engine;\n        this.plugins = [];\n        this._initializers = {\n            interactors: new Map(),\n            movers: new Map(),\n            updaters: new Map(),\n        };\n        this.interactors = new Map();\n        this.movers = new Map();\n        this.updaters = new Map();\n        this.presets = new Map();\n        this.drawers = new Map();\n        this.pathGenerators = new Map();\n    }\n    addInteractor(name, initInteractor) {\n        this._initializers.interactors.set(name, initInteractor);\n    }\n    addParticleMover(name, initMover) {\n        this._initializers.movers.set(name, initMover);\n    }\n    addParticleUpdater(name, initUpdater) {\n        this._initializers.updaters.set(name, initUpdater);\n    }\n    addPathGenerator(type, pathGenerator) {\n        if (!this.getPathGenerator(type)) {\n            this.pathGenerators.set(type, pathGenerator);\n        }\n    }\n    addPlugin(plugin) {\n        if (!this.getPlugin(plugin.id)) {\n            this.plugins.push(plugin);\n        }\n    }\n    addPreset(presetKey, options, override = false) {\n        if (override || !this.getPreset(presetKey)) {\n            this.presets.set(presetKey, options);\n        }\n    }\n    addShapeDrawer(types, drawer) {\n        executeOnSingleOrMultiple(types, (type) => {\n            if (!this.getShapeDrawer(type)) {\n                this.drawers.set(type, drawer);\n            }\n        });\n    }\n    destroy(container) {\n        this.updaters.delete(container);\n        this.movers.delete(container);\n        this.interactors.delete(container);\n    }\n    getAvailablePlugins(container) {\n        const res = new Map();\n        for (const plugin of this.plugins) {\n            if (!plugin.needsPlugin(container.actualOptions)) {\n                continue;\n            }\n            res.set(plugin.id, plugin.getPlugin(container));\n        }\n        return res;\n    }\n    getInteractors(container, force = false) {\n        return getItemsFromInitializer(container, this.interactors, this._initializers.interactors, force);\n    }\n    getMovers(container, force = false) {\n        return getItemsFromInitializer(container, this.movers, this._initializers.movers, force);\n    }\n    getPathGenerator(type) {\n        return this.pathGenerators.get(type);\n    }\n    getPlugin(plugin) {\n        return this.plugins.find((t) => t.id === plugin);\n    }\n    getPreset(preset) {\n        return this.presets.get(preset);\n    }\n    getShapeDrawer(type) {\n        return this.drawers.get(type);\n    }\n    getSupportedShapes() {\n        return this.drawers.keys();\n    }\n    getUpdaters(container, force = false) {\n        return getItemsFromInitializer(container, this.updaters, this._initializers.updaters, force);\n    }\n    loadOptions(options, sourceOptions) {\n        for (const plugin of this.plugins) {\n            plugin.loadOptions(options, sourceOptions);\n        }\n    }\n    loadParticlesOptions(container, options, ...sourceOptions) {\n        const updaters = this.updaters.get(container);\n        if (!updaters) {\n            return;\n        }\n        for (const updater of updaters) {\n            if (updater.loadOptions) {\n                updater.loadOptions(options, ...sourceOptions);\n            }\n        }\n    }\n}\n","import { getRangeValue, parseAlpha } from \"./NumberUtils\";\nimport { hslToRgb, hslaToRgba } from \"./ColorUtils\";\nexport class HslColorManager {\n    constructor() {\n        this.key = \"hsl\";\n        this.stringPrefix = \"hsl\";\n    }\n    handleColor(color) {\n        var _a;\n        const colorValue = color.value, hslColor = (_a = colorValue.hsl) !== null && _a !== void 0 ? _a : color.value;\n        if (hslColor.h !== undefined && hslColor.s !== undefined && hslColor.l !== undefined) {\n            return hslToRgb(hslColor);\n        }\n    }\n    handleRangeColor(color) {\n        var _a;\n        const colorValue = color.value, hslColor = (_a = colorValue.hsl) !== null && _a !== void 0 ? _a : color.value;\n        if (hslColor.h !== undefined && hslColor.l !== undefined) {\n            return hslToRgb({\n                h: getRangeValue(hslColor.h),\n                l: getRangeValue(hslColor.l),\n                s: getRangeValue(hslColor.s),\n            });\n        }\n    }\n    parseString(input) {\n        if (!input.startsWith(\"hsl\")) {\n            return;\n        }\n        const regex = /hsla?\\(\\s*(\\d+)\\s*,\\s*(\\d+)%\\s*,\\s*(\\d+)%\\s*(,\\s*([\\d.%]+)\\s*)?\\)/i, result = regex.exec(input);\n        return result\n            ? hslaToRgba({\n                a: result.length > 4 ? parseAlpha(result[5]) : 1,\n                h: parseInt(result[1], 10),\n                l: parseInt(result[3], 10),\n                s: parseInt(result[2], 10),\n            })\n            : undefined;\n    }\n}\n","import { getRangeValue, parseAlpha } from \"./NumberUtils\";\nexport class RgbColorManager {\n    constructor() {\n        this.key = \"rgb\";\n        this.stringPrefix = \"rgb\";\n    }\n    handleColor(color) {\n        var _a;\n        const colorValue = color.value, rgbColor = (_a = colorValue.rgb) !== null && _a !== void 0 ? _a : color.value;\n        if (rgbColor.r !== undefined) {\n            return rgbColor;\n        }\n    }\n    handleRangeColor(color) {\n        var _a;\n        const colorValue = color.value, rgbColor = (_a = colorValue.rgb) !== null && _a !== void 0 ? _a : color.value;\n        if (rgbColor.r !== undefined) {\n            return {\n                r: getRangeValue(rgbColor.r),\n                g: getRangeValue(rgbColor.g),\n                b: getRangeValue(rgbColor.b),\n            };\n        }\n    }\n    parseString(input) {\n        if (!input.startsWith(this.stringPrefix)) {\n            return;\n        }\n        const regex = /rgba?\\(\\s*(\\d+)\\s*,\\s*(\\d+)\\s*,\\s*(\\d+)\\s*(,\\s*([\\d.%]+)\\s*)?\\)/i, result = regex.exec(input);\n        return result\n            ? {\n                a: result.length > 4 ? parseAlpha(result[5]) : 1,\n                b: parseInt(result[3], 10),\n                g: parseInt(result[2], 10),\n                r: parseInt(result[1], 10),\n            }\n            : undefined;\n    }\n}\n","export {};\n","export {};\n","export {};\n","export {};\n","export {};\n","export {};\n","export {};\n","export {};\n","export {};\n","export {};\n","export {};\n","export {};\n","export {};\n","export {};\n","export {};\n","export {};\n","export {};\n","export {};\n","export {};\n","export {};\n","export {};\n","export {};\n","export {};\n","export {};\n","export {};\n","export {};\n","export {};\n","export {};\n","export {};\n","export {};\n","export {};\n","export {};\n","export class ExternalInteractorBase {\n    constructor(container) {\n        this.container = container;\n        this.type = \"external\";\n    }\n}\n","export class ParticlesInteractorBase {\n    constructor(container) {\n        this.container = container;\n        this.type = \"particles\";\n    }\n}\n","export {};\n","export {};\n","export {};\n","export {};\n","export {};\n","export {};\n","export {};\n","export {};\n","export {};\n","export {};\n","export {};\n","export {};\n","export {};\n","export {};\n","export {};\n","export {};\n","export {};\n","export {};\n","export {};\n","export {};\n","export {};\n","export {};\n","export {};\n","export {};\n","export {};\n","export {};\n","export {};\n","export {};\n","export {};\n","export {};\n","export {};\n","export {};\n","export {};\n","export {};\n","export {};\n","export {};\n","export {};\n","export {};\n","export {};\n","export {};\n","export {};\n","export {};\n","export {};\n","export {};\n","export {};\n","export {};\n","export {};\n","export {};\n","export {};\n","export {};\n","export {};\n","export {};\n","export {};\n","export {};\n","export {};\n","export {};\n","export {};\n","export {};\n","export {};\n","export {};\n","export {};\n","export {};\n","export {};\n","export {};\n","export {};\n","export {};\n","export {};\n","export {};\n","export * from \"../../../../Core/Interfaces/IShapeValues\";\n","export {};\n","export {};\n","export {};\n","export {};\n","export {};\n","export {};\n","export {};\n","export {};\n","export {};\n","export {};\n","export {};\n","export {};\n","export {};\n","export {};\n","export {};\n","import { OptionsColor, setRangeValue } from \"tsparticles-engine\";\nimport { AbsorberSize } from \"./AbsorberSize\";\nexport class Absorber {\n    constructor() {\n        this.color = new OptionsColor();\n        this.color.value = \"#000000\";\n        this.draggable = false;\n        this.opacity = 1;\n        this.destroy = true;\n        this.orbits = false;\n        this.size = new AbsorberSize();\n    }\n    load(data) {\n        if (data === undefined) {\n            return;\n        }\n        if (data.color !== undefined) {\n            this.color = OptionsColor.create(this.color, data.color);\n        }\n        if (data.draggable !== undefined) {\n            this.draggable = data.draggable;\n        }\n        this.name = data.name;\n        if (data.opacity !== undefined) {\n            this.opacity = data.opacity;\n        }\n        if (data.position !== undefined) {\n            this.position = {};\n            if (data.position.x !== undefined) {\n                this.position.x = setRangeValue(data.position.x);\n            }\n            if (data.position.y !== undefined) {\n                this.position.y = setRangeValue(data.position.y);\n            }\n        }\n        if (data.size !== undefined) {\n            this.size.load(data.size);\n        }\n        if (data.destroy !== undefined) {\n            this.destroy = data.destroy;\n        }\n        if (data.orbits !== undefined) {\n            this.orbits = data.orbits;\n        }\n    }\n}\n","import { AbsorberSizeLimit } from \"./AbsorberSizeLimit\";\nimport { ValueWithRandom } from \"tsparticles-engine\";\nexport class AbsorberSize extends ValueWithRandom {\n    constructor() {\n        super();\n        this.density = 5;\n        this.value = 50;\n        this.limit = new AbsorberSizeLimit();\n    }\n    load(data) {\n        if (!data) {\n            return;\n        }\n        super.load(data);\n        if (data.density !== undefined) {\n            this.density = data.density;\n        }\n        if (typeof data.limit === \"number\") {\n            this.limit.radius = data.limit;\n        }\n        else {\n            this.limit.load(data.limit);\n        }\n    }\n}\n","export class AbsorberSizeLimit {\n    constructor() {\n        this.radius = 0;\n        this.mass = 0;\n    }\n    load(data) {\n        if (!data) {\n            return;\n        }\n        if (data.mass !== undefined) {\n            this.mass = data.mass;\n        }\n        if (data.radius !== undefined) {\n            this.radius = data.radius;\n        }\n    }\n}\n","import { executeOnSingleOrMultiple, itemFromSingleOrMultiple } from \"tsparticles-engine\";\nimport { AbsorberInstance } from \"./AbsorberInstance\";\nexport class Absorbers {\n    constructor(container) {\n        this.container = container;\n        this.array = [];\n        this.absorbers = [];\n        this.interactivityAbsorbers = [];\n        container.getAbsorber = (idxOrName) => idxOrName === undefined || typeof idxOrName === \"number\"\n            ? this.array[idxOrName || 0]\n            : this.array.find((t) => t.name === idxOrName);\n        container.addAbsorber = (options, position) => this.addAbsorber(options, position);\n    }\n    addAbsorber(options, position) {\n        const absorber = new AbsorberInstance(this, this.container, options, position);\n        this.array.push(absorber);\n        return absorber;\n    }\n    draw(context) {\n        for (const absorber of this.array) {\n            absorber.draw(context);\n        }\n    }\n    handleClickMode(mode) {\n        const absorberOptions = this.absorbers, modeAbsorbers = this.interactivityAbsorbers;\n        if (mode === \"absorber\") {\n            const absorbersModeOptions = itemFromSingleOrMultiple(modeAbsorbers), absorbersOptions = absorbersModeOptions !== null && absorbersModeOptions !== void 0 ? absorbersModeOptions : itemFromSingleOrMultiple(absorberOptions), aPosition = this.container.interactivity.mouse.clickPosition;\n            this.addAbsorber(absorbersOptions, aPosition);\n        }\n    }\n    async init() {\n        this.absorbers = this.container.actualOptions.absorbers;\n        this.interactivityAbsorbers = this.container.actualOptions.interactivity.modes.absorbers;\n        executeOnSingleOrMultiple(this.absorbers, (absorber) => {\n            this.addAbsorber(absorber);\n        });\n    }\n    particleUpdate(particle) {\n        for (const absorber of this.array) {\n            absorber.attract(particle);\n            if (particle.destroyed) {\n                break;\n            }\n        }\n    }\n    removeAbsorber(absorber) {\n        const index = this.array.indexOf(absorber);\n        if (index >= 0) {\n            this.array.splice(index, 1);\n        }\n    }\n    resize() {\n        for (const absorber of this.array) {\n            absorber.resize();\n        }\n    }\n    stop() {\n        this.array = [];\n    }\n}\n","import { Vector, calcPositionOrRandomFromSize, calcPositionOrRandomFromSizeRanged, getDistance, getDistances, getRandom, getRangeValue, getStyleFromRgb, isPointInside, rangeColorToRgb, } from \"tsparticles-engine\";\nimport { Absorber } from \"./Options/Classes/Absorber\";\nexport class AbsorberInstance {\n    constructor(absorbers, container, options, position) {\n        var _a, _b, _c;\n        this.absorbers = absorbers;\n        this.container = container;\n        this.initialPosition = position ? Vector.create(position.x, position.y) : undefined;\n        if (options instanceof Absorber) {\n            this.options = options;\n        }\n        else {\n            this.options = new Absorber();\n            this.options.load(options);\n        }\n        this.dragging = false;\n        this.name = this.options.name;\n        this.opacity = this.options.opacity;\n        this.size = getRangeValue(this.options.size.value) * container.retina.pixelRatio;\n        this.mass = this.size * this.options.size.density * container.retina.reduceFactor;\n        const limit = this.options.size.limit;\n        this.limit = {\n            radius: limit.radius * container.retina.pixelRatio * container.retina.reduceFactor,\n            mass: limit.mass,\n        };\n        this.color = (_a = rangeColorToRgb(this.options.color)) !== null && _a !== void 0 ? _a : {\n            b: 0,\n            g: 0,\n            r: 0,\n        };\n        this.position = (_c = (_b = this.initialPosition) === null || _b === void 0 ? void 0 : _b.copy()) !== null && _c !== void 0 ? _c : this.calcPosition();\n    }\n    attract(particle) {\n        const container = this.container, options = this.options;\n        if (options.draggable) {\n            const mouse = container.interactivity.mouse;\n            if (mouse.clicking && mouse.downPosition) {\n                const mouseDist = getDistance(this.position, mouse.downPosition);\n                if (mouseDist <= this.size) {\n                    this.dragging = true;\n                }\n            }\n            else {\n                this.dragging = false;\n            }\n            if (this.dragging && mouse.position) {\n                this.position.x = mouse.position.x;\n                this.position.y = mouse.position.y;\n            }\n        }\n        const pos = particle.getPosition(), { dx, dy, distance } = getDistances(this.position, pos), v = Vector.create(dx, dy);\n        v.length = (this.mass / Math.pow(distance, 2)) * container.retina.reduceFactor;\n        if (distance < this.size + particle.getRadius()) {\n            const sizeFactor = particle.getRadius() * 0.033 * container.retina.pixelRatio;\n            if ((this.size > particle.getRadius() && distance < this.size - particle.getRadius()) ||\n                (particle.absorberOrbit !== undefined && particle.absorberOrbit.length < 0)) {\n                if (options.destroy) {\n                    particle.destroy();\n                }\n                else {\n                    particle.needsNewPosition = true;\n                    this.updateParticlePosition(particle, v);\n                }\n            }\n            else {\n                if (options.destroy) {\n                    particle.size.value -= sizeFactor;\n                }\n                this.updateParticlePosition(particle, v);\n            }\n            if (this.limit.radius <= 0 || this.size < this.limit.radius) {\n                this.size += sizeFactor;\n            }\n            if (this.limit.mass <= 0 || this.mass < this.limit.mass) {\n                this.mass += sizeFactor * this.options.size.density * container.retina.reduceFactor;\n            }\n        }\n        else {\n            this.updateParticlePosition(particle, v);\n        }\n    }\n    draw(context) {\n        context.translate(this.position.x, this.position.y);\n        context.beginPath();\n        context.arc(0, 0, this.size, 0, Math.PI * 2, false);\n        context.closePath();\n        context.fillStyle = getStyleFromRgb(this.color, this.opacity);\n        context.fill();\n    }\n    resize() {\n        const initialPosition = this.initialPosition;\n        this.position =\n            initialPosition && isPointInside(initialPosition, this.container.canvas.size, Vector.origin)\n                ? initialPosition\n                : this.calcPosition();\n    }\n    calcPosition() {\n        const exactPosition = calcPositionOrRandomFromSizeRanged({\n            size: this.container.canvas.size,\n            position: this.options.position,\n        });\n        return Vector.create(exactPosition.x, exactPosition.y);\n    }\n    updateParticlePosition(particle, v) {\n        var _a;\n        if (particle.destroyed) {\n            return;\n        }\n        const container = this.container, canvasSize = container.canvas.size;\n        if (particle.needsNewPosition) {\n            const newPosition = calcPositionOrRandomFromSize({ size: canvasSize });\n            particle.position.setTo(newPosition);\n            particle.velocity.setTo(particle.initialVelocity);\n            particle.absorberOrbit = undefined;\n            particle.needsNewPosition = false;\n        }\n        if (this.options.orbits) {\n            if (particle.absorberOrbit === undefined) {\n                particle.absorberOrbit = Vector.create(0, 0);\n                particle.absorberOrbit.length = getDistance(particle.getPosition(), this.position);\n                particle.absorberOrbit.angle = getRandom() * Math.PI * 2;\n            }\n            if (particle.absorberOrbit.length <= this.size && !this.options.destroy) {\n                const minSize = Math.min(canvasSize.width, canvasSize.height);\n                particle.absorberOrbit.length = minSize * (1 + (getRandom() * 0.2 - 0.1));\n            }\n            if (particle.absorberOrbitDirection === undefined) {\n                particle.absorberOrbitDirection =\n                    particle.velocity.x >= 0 ? \"clockwise\" : \"counter-clockwise\";\n            }\n            const orbitRadius = particle.absorberOrbit.length, orbitAngle = particle.absorberOrbit.angle, orbitDirection = particle.absorberOrbitDirection;\n            particle.velocity.setTo(Vector.origin);\n            const updateFunc = {\n                x: orbitDirection === \"clockwise\" ? Math.cos : Math.sin,\n                y: orbitDirection === \"clockwise\" ? Math.sin : Math.cos,\n            };\n            particle.position.x = this.position.x + orbitRadius * updateFunc.x(orbitAngle);\n            particle.position.y = this.position.y + orbitRadius * updateFunc.y(orbitAngle);\n            particle.absorberOrbit.length -= v.length;\n            particle.absorberOrbit.angle +=\n                ((((_a = particle.retina.moveSpeed) !== null && _a !== void 0 ? _a : 0) * container.retina.pixelRatio) / 100) *\n                    container.retina.reduceFactor;\n        }\n        else {\n            const addV = Vector.origin;\n            addV.length = v.length;\n            addV.angle = v.angle;\n            particle.velocity.addTo(addV);\n        }\n    }\n}\n","export {};\n","export {};\n","import { DestroyUpdater } from \"./DestroyUpdater\";\nexport async function loadDestroyUpdater(engine) {\n    await engine.addParticleUpdater(\"destroy\", (container) => new DestroyUpdater(engine, container));\n}\n","import { getRangeValue, getValue, itemFromSingleOrMultiple, loadParticlesOptions, randomInRange, setRangeValue, } from \"tsparticles-engine\";\nimport { Destroy } from \"./Options/Classes/Destroy\";\nexport class DestroyUpdater {\n    constructor(engine, container) {\n        this.engine = engine;\n        this.container = container;\n    }\n    init(particle) {\n        const container = this.container, particlesOptions = particle.options, destroyOptions = particlesOptions.destroy;\n        if (!destroyOptions) {\n            return;\n        }\n        particle.splitCount = 0;\n        const destroyBounds = destroyOptions.bounds;\n        if (!particle.destroyBounds) {\n            particle.destroyBounds = {};\n        }\n        if (destroyBounds.bottom) {\n            particle.destroyBounds.bottom = (getRangeValue(destroyBounds.bottom) * container.canvas.size.height) / 100;\n        }\n        if (destroyBounds.left) {\n            particle.destroyBounds.left = (getRangeValue(destroyBounds.left) * container.canvas.size.width) / 100;\n        }\n        if (destroyBounds.right) {\n            particle.destroyBounds.right = (getRangeValue(destroyBounds.right) * container.canvas.size.width) / 100;\n        }\n        if (destroyBounds.top) {\n            particle.destroyBounds.top = (getRangeValue(destroyBounds.top) * container.canvas.size.height) / 100;\n        }\n    }\n    isEnabled(particle) {\n        return !particle.destroyed;\n    }\n    loadOptions(options, ...sources) {\n        if (!options.destroy) {\n            options.destroy = new Destroy();\n        }\n        for (const source of sources) {\n            options.destroy.load(source === null || source === void 0 ? void 0 : source.destroy);\n        }\n    }\n    particleDestroyed(particle, override) {\n        if (override) {\n            return;\n        }\n        const destroyOptions = particle.options.destroy;\n        if (destroyOptions && destroyOptions.mode === \"split\") {\n            this.split(particle);\n        }\n    }\n    update(particle) {\n        if (!this.isEnabled(particle)) {\n            return;\n        }\n        const position = particle.getPosition(), bounds = particle.destroyBounds;\n        if (!bounds) {\n            return;\n        }\n        if ((bounds.bottom !== undefined && position.y >= bounds.bottom) ||\n            (bounds.left !== undefined && position.x <= bounds.left) ||\n            (bounds.right !== undefined && position.x >= bounds.right) ||\n            (bounds.top !== undefined && position.y <= bounds.top)) {\n            particle.destroy();\n        }\n    }\n    addSplitParticle(parent, splitParticlesOptions) {\n        var _a, _b, _c;\n        const destroyOptions = parent.options.destroy;\n        if (!destroyOptions) {\n            return;\n        }\n        const splitOptions = destroyOptions.split, options = loadParticlesOptions(this.engine, this.container, parent.options), factor = getValue(splitOptions.factor), parentColor = parent.getFillColor();\n        if (splitOptions.color) {\n            options.color.load(splitOptions.color);\n        }\n        else if (splitOptions.colorOffset && parentColor) {\n            options.color.load({\n                value: {\n                    hsl: {\n                        h: parentColor.h + getRangeValue((_a = splitOptions.colorOffset.h) !== null && _a !== void 0 ? _a : 0),\n                        s: parentColor.s + getRangeValue((_b = splitOptions.colorOffset.s) !== null && _b !== void 0 ? _b : 0),\n                        l: parentColor.l + getRangeValue((_c = splitOptions.colorOffset.l) !== null && _c !== void 0 ? _c : 0),\n                    },\n                },\n            });\n        }\n        else {\n            options.color.load({\n                value: {\n                    hsl: parent.getFillColor(),\n                },\n            });\n        }\n        options.move.load({\n            center: {\n                x: parent.position.x,\n                y: parent.position.y,\n                mode: \"precise\",\n            },\n        });\n        if (typeof options.size.value === \"number\") {\n            options.size.value /= factor;\n        }\n        else {\n            options.size.value.min /= factor;\n            options.size.value.max /= factor;\n        }\n        options.load(splitParticlesOptions);\n        const offset = splitOptions.sizeOffset ? setRangeValue(-parent.size.value, parent.size.value) : 0, position = {\n            x: parent.position.x + randomInRange(offset),\n            y: parent.position.y + randomInRange(offset),\n        };\n        return this.container.particles.addParticle(position, options, parent.group, (particle) => {\n            var _a;\n            if (particle.size.value < 0.5) {\n                return false;\n            }\n            particle.velocity.length = randomInRange(setRangeValue(parent.velocity.length, particle.velocity.length));\n            particle.splitCount = ((_a = parent.splitCount) !== null && _a !== void 0 ? _a : 0) + 1;\n            particle.unbreakable = true;\n            setTimeout(() => {\n                particle.unbreakable = false;\n            }, 500);\n            return true;\n        });\n    }\n    split(particle) {\n        const destroyOptions = particle.options.destroy;\n        if (!destroyOptions) {\n            return;\n        }\n        const splitOptions = destroyOptions.split;\n        if (splitOptions.count >= 0 &&\n            (particle.splitCount === undefined || particle.splitCount++ > splitOptions.count)) {\n            return;\n        }\n        const rate = getValue(splitOptions.rate), particlesSplitOptions = itemFromSingleOrMultiple(splitOptions.particles);\n        for (let i = 0; i < rate; i++) {\n            this.addSplitParticle(particle, particlesSplitOptions);\n        }\n    }\n}\n","import { DestroyBounds } from \"./DestroyBounds\";\nimport { Split } from \"./Split\";\nexport class Destroy {\n    constructor() {\n        this.bounds = new DestroyBounds();\n        this.mode = \"none\";\n        this.split = new Split();\n    }\n    load(data) {\n        if (!data) {\n            return;\n        }\n        if (data.mode) {\n            this.mode = data.mode;\n        }\n        if (data.bounds) {\n            this.bounds.load(data.bounds);\n        }\n        this.split.load(data.split);\n    }\n}\n","import { setRangeValue } from \"tsparticles-engine\";\nexport class DestroyBounds {\n    load(data) {\n        if (!data) {\n            return;\n        }\n        if (data.bottom !== undefined) {\n            this.bottom = setRangeValue(data.bottom);\n        }\n        if (data.left !== undefined) {\n            this.left = setRangeValue(data.left);\n        }\n        if (data.right !== undefined) {\n            this.right = setRangeValue(data.right);\n        }\n        if (data.top !== undefined) {\n            this.top = setRangeValue(data.top);\n        }\n    }\n}\n","import { OptionsColor, deepExtend, executeOnSingleOrMultiple } from \"tsparticles-engine\";\nimport { SplitFactor } from \"./SplitFactor\";\nimport { SplitRate } from \"./SplitRate\";\nexport class Split {\n    constructor() {\n        this.count = 1;\n        this.factor = new SplitFactor();\n        this.rate = new SplitRate();\n        this.sizeOffset = true;\n    }\n    load(data) {\n        var _a;\n        if (!data) {\n            return;\n        }\n        if (data.color !== undefined) {\n            this.color = OptionsColor.create(this.color, data.color);\n        }\n        if (data.count !== undefined) {\n            this.count = data.count;\n        }\n        this.factor.load(data.factor);\n        this.rate.load(data.rate);\n        this.particles = executeOnSingleOrMultiple(data.particles, (particles) => {\n            return deepExtend({}, particles);\n        });\n        if (data.sizeOffset !== undefined) {\n            this.sizeOffset = data.sizeOffset;\n        }\n        if (data.colorOffset) {\n            this.colorOffset = (_a = this.colorOffset) !== null && _a !== void 0 ? _a : {};\n            if (data.colorOffset.h !== undefined) {\n                this.colorOffset.h = data.colorOffset.h;\n            }\n            if (data.colorOffset.s !== undefined) {\n                this.colorOffset.s = data.colorOffset.s;\n            }\n            if (data.colorOffset.l !== undefined) {\n                this.colorOffset.l = data.colorOffset.l;\n            }\n        }\n    }\n}\n","import { ValueWithRandom } from \"tsparticles-engine\";\nexport class SplitFactor extends ValueWithRandom {\n    constructor() {\n        super();\n        this.value = 3;\n    }\n}\n","import { ValueWithRandom } from \"tsparticles-engine\";\nexport class SplitRate extends ValueWithRandom {\n    constructor() {\n        super();\n        this.value = { min: 4, max: 9 };\n    }\n}\n","import { executeOnSingleOrMultiple, isInArray } from \"tsparticles-engine\";\nimport { CircleShape } from \"./Shapes/Circle/CircleShape\";\nimport { Emitter } from \"./Options/Classes/Emitter\";\nimport { Emitters } from \"./Emitters\";\nimport { ShapeManager } from \"./ShapeManager\";\nimport { SquareShape } from \"./Shapes/Square/SquareShape\";\nclass EmittersPlugin {\n    constructor(engine) {\n        this._engine = engine;\n        this.id = \"emitters\";\n    }\n    getPlugin(container) {\n        return new Emitters(this._engine, container);\n    }\n    loadOptions(options, source) {\n        var _a, _b, _c, _d, _e, _f;\n        if (!this.needsPlugin(options) && !this.needsPlugin(source)) {\n            return;\n        }\n        if (source === null || source === void 0 ? void 0 : source.emitters) {\n            options.emitters = executeOnSingleOrMultiple(source.emitters, (emitter) => {\n                const tmp = new Emitter();\n                tmp.load(emitter);\n                return tmp;\n            });\n        }\n        const interactivityEmitters = (_b = (_a = source === null || source === void 0 ? void 0 : source.interactivity) === null || _a === void 0 ? void 0 : _a.modes) === null || _b === void 0 ? void 0 : _b.emitters;\n        if (interactivityEmitters) {\n            if (interactivityEmitters instanceof Array) {\n                options.interactivity.modes.emitters = {\n                    random: {\n                        count: 1,\n                        enable: true,\n                    },\n                    value: interactivityEmitters.map((s) => {\n                        const tmp = new Emitter();\n                        tmp.load(s);\n                        return tmp;\n                    }),\n                };\n            }\n            else {\n                const emitterMode = interactivityEmitters;\n                if (emitterMode.value !== undefined) {\n                    if (emitterMode.value instanceof Array) {\n                        options.interactivity.modes.emitters = {\n                            random: {\n                                count: (_c = emitterMode.random.count) !== null && _c !== void 0 ? _c : 1,\n                                enable: (_d = emitterMode.random.enable) !== null && _d !== void 0 ? _d : false,\n                            },\n                            value: emitterMode.value.map((s) => {\n                                const tmp = new Emitter();\n                                tmp.load(s);\n                                return tmp;\n                            }),\n                        };\n                    }\n                    else {\n                        const tmp = new Emitter();\n                        tmp.load(emitterMode.value);\n                        options.interactivity.modes.emitters = {\n                            random: {\n                                count: (_e = emitterMode.random.count) !== null && _e !== void 0 ? _e : 1,\n                                enable: (_f = emitterMode.random.enable) !== null && _f !== void 0 ? _f : false,\n                            },\n                            value: tmp,\n                        };\n                    }\n                }\n                else {\n                    const emitterOptions = (options.interactivity.modes.emitters = {\n                        random: {\n                            count: 1,\n                            enable: false,\n                        },\n                        value: new Emitter(),\n                    });\n                    emitterOptions.value.load(interactivityEmitters);\n                }\n            }\n        }\n    }\n    needsPlugin(options) {\n        var _a, _b, _c;\n        if (!options) {\n            return false;\n        }\n        const emitters = options.emitters;\n        return ((emitters instanceof Array && !!emitters.length) ||\n            emitters !== undefined ||\n            (!!((_c = (_b = (_a = options.interactivity) === null || _a === void 0 ? void 0 : _a.events) === null || _b === void 0 ? void 0 : _b.onClick) === null || _c === void 0 ? void 0 : _c.mode) &&\n                isInArray(\"emitter\", options.interactivity.events.onClick.mode)));\n    }\n}\nexport async function loadEmittersPlugin(engine) {\n    if (!engine.emitterShapeManager) {\n        engine.emitterShapeManager = new ShapeManager(engine);\n    }\n    if (!engine.addEmitterShape) {\n        engine.addEmitterShape = (name, shape) => {\n            var _a;\n            (_a = engine.emitterShapeManager) === null || _a === void 0 ? void 0 : _a.addShape(name, shape);\n        };\n    }\n    const plugin = new EmittersPlugin(engine);\n    await engine.addPlugin(plugin);\n    engine.addEmitterShape(\"circle\", new CircleShape());\n    engine.addEmitterShape(\"square\", new SquareShape());\n}\nexport * from \"./EmitterContainer\";\nexport * from \"./EmittersEngine\";\nexport * from \"./Enums/EmitterClickMode\";\nexport * from \"./Enums/EmitterShapeType\";\n","import { getRandom } from \"tsparticles-engine\";\nexport class CircleShape {\n    randomPosition(position, size, fill) {\n        const generateTheta = (x, y) => {\n            const u = getRandom() / 4.0, theta = Math.atan((y / x) * Math.tan(2 * Math.PI * u)), v = getRandom();\n            if (v < 0.25) {\n                return theta;\n            }\n            else if (v < 0.5) {\n                return Math.PI - theta;\n            }\n            else if (v < 0.75) {\n                return Math.PI + theta;\n            }\n            else {\n                return -theta;\n            }\n        }, radius = (x, y, theta) => (x * y) / Math.sqrt((y * Math.cos(theta)) ** 2 + (x * Math.sin(theta)) ** 2), [a, b] = [size.width / 2, size.height / 2], randomTheta = generateTheta(a, b), maxRadius = radius(a, b, randomTheta), randomRadius = fill ? maxRadius * Math.sqrt(getRandom()) : maxRadius;\n        return {\n            x: position.x + randomRadius * Math.cos(randomTheta),\n            y: position.y + randomRadius * Math.sin(randomTheta),\n        };\n    }\n}\n","import { AnimatableColor, deepExtend, executeOnSingleOrMultiple, setRangeValue } from \"tsparticles-engine\";\nimport { EmitterLife } from \"./EmitterLife\";\nimport { EmitterRate } from \"./EmitterRate\";\nimport { EmitterSize } from \"./EmitterSize\";\nexport class Emitter {\n    constructor() {\n        this.autoPlay = true;\n        this.fill = true;\n        this.life = new EmitterLife();\n        this.rate = new EmitterRate();\n        this.shape = \"square\";\n        this.startCount = 0;\n    }\n    load(data) {\n        if (!data) {\n            return;\n        }\n        if (data.autoPlay !== undefined) {\n            this.autoPlay = data.autoPlay;\n        }\n        if (data.size !== undefined) {\n            if (!this.size) {\n                this.size = new EmitterSize();\n            }\n            this.size.load(data.size);\n        }\n        if (data.direction !== undefined) {\n            this.direction = data.direction;\n        }\n        this.domId = data.domId;\n        if (data.fill !== undefined) {\n            this.fill = data.fill;\n        }\n        this.life.load(data.life);\n        this.name = data.name;\n        this.particles = executeOnSingleOrMultiple(data.particles, (particles) => {\n            return deepExtend({}, particles);\n        });\n        this.rate.load(data.rate);\n        if (data.shape !== undefined) {\n            this.shape = data.shape;\n        }\n        if (data.position !== undefined) {\n            this.position = {};\n            if (data.position.x !== undefined) {\n                this.position.x = setRangeValue(data.position.x);\n            }\n            if (data.position.y !== undefined) {\n                this.position.y = setRangeValue(data.position.y);\n            }\n        }\n        if (data.spawnColor !== undefined) {\n            if (this.spawnColor === undefined) {\n                this.spawnColor = new AnimatableColor();\n            }\n            this.spawnColor.load(data.spawnColor);\n        }\n        if (data.startCount !== undefined) {\n            this.startCount = data.startCount;\n        }\n    }\n}\n","export class EmitterLife {\n    constructor() {\n        this.wait = false;\n    }\n    load(data) {\n        if (!data) {\n            return;\n        }\n        if (data.count !== undefined) {\n            this.count = data.count;\n        }\n        if (data.delay !== undefined) {\n            this.delay = data.delay;\n        }\n        if (data.duration !== undefined) {\n            this.duration = data.duration;\n        }\n        if (data.wait !== undefined) {\n            this.wait = data.wait;\n        }\n    }\n}\n","import { setRangeValue } from \"tsparticles-engine\";\nexport class EmitterRate {\n    constructor() {\n        this.quantity = 1;\n        this.delay = 0.1;\n    }\n    load(data) {\n        if (data === undefined) {\n            return;\n        }\n        if (data.quantity !== undefined) {\n            this.quantity = setRangeValue(data.quantity);\n        }\n        if (data.delay !== undefined) {\n            this.delay = setRangeValue(data.delay);\n        }\n    }\n}\n","export class EmitterSize {\n    constructor() {\n        this.mode = \"percent\";\n        this.height = 0;\n        this.width = 0;\n    }\n    load(data) {\n        if (data === undefined) {\n            return;\n        }\n        if (data.mode !== undefined) {\n            this.mode = data.mode;\n        }\n        if (data.height !== undefined) {\n            this.height = data.height;\n        }\n        if (data.width !== undefined) {\n            this.width = data.width;\n        }\n    }\n}\n","import { arrayRandomIndex, executeOnSingleOrMultiple, itemFromArray } from \"tsparticles-engine\";\nimport { Emitter } from \"./Options/Classes/Emitter\";\nimport { EmitterInstance } from \"./EmitterInstance\";\nexport class Emitters {\n    constructor(engine, container) {\n        this.container = container;\n        this._engine = engine;\n        this.array = [];\n        this.emitters = [];\n        this.interactivityEmitters = {\n            random: {\n                count: 1,\n                enable: false,\n            },\n            value: [],\n        };\n        container.getEmitter = (idxOrName) => idxOrName === undefined || typeof idxOrName === \"number\"\n            ? this.array[idxOrName || 0]\n            : this.array.find((t) => t.name === idxOrName);\n        container.addEmitter = (options, position) => this.addEmitter(options, position);\n        container.removeEmitter = (idxOrName) => {\n            const emitter = container.getEmitter(idxOrName);\n            if (emitter) {\n                this.removeEmitter(emitter);\n            }\n        };\n        container.playEmitter = (idxOrName) => {\n            const emitter = container.getEmitter(idxOrName);\n            if (emitter) {\n                emitter.externalPlay();\n            }\n        };\n        container.pauseEmitter = (idxOrName) => {\n            const emitter = container.getEmitter(idxOrName);\n            if (emitter) {\n                emitter.externalPause();\n            }\n        };\n    }\n    addEmitter(options, position) {\n        const emitterOptions = new Emitter();\n        emitterOptions.load(options);\n        const emitter = new EmitterInstance(this._engine, this, this.container, emitterOptions, position);\n        this.array.push(emitter);\n        return emitter;\n    }\n    handleClickMode(mode) {\n        const emitterOptions = this.emitters, modeEmitters = this.interactivityEmitters;\n        if (mode !== \"emitter\") {\n            return;\n        }\n        let emittersModeOptions;\n        if (modeEmitters && modeEmitters.value instanceof Array) {\n            if (modeEmitters.value.length > 0 && modeEmitters.random.enable) {\n                emittersModeOptions = [];\n                const usedIndexes = [];\n                for (let i = 0; i < modeEmitters.random.count; i++) {\n                    const idx = arrayRandomIndex(modeEmitters.value);\n                    if (usedIndexes.includes(idx) && usedIndexes.length < modeEmitters.value.length) {\n                        i--;\n                        continue;\n                    }\n                    usedIndexes.push(idx);\n                    emittersModeOptions.push(itemFromArray(modeEmitters.value, idx));\n                }\n            }\n            else {\n                emittersModeOptions = modeEmitters.value;\n            }\n        }\n        else {\n            emittersModeOptions = modeEmitters === null || modeEmitters === void 0 ? void 0 : modeEmitters.value;\n        }\n        const emittersOptions = emittersModeOptions !== null && emittersModeOptions !== void 0 ? emittersModeOptions : emitterOptions, ePosition = this.container.interactivity.mouse.clickPosition;\n        executeOnSingleOrMultiple(emittersOptions, (emitter) => {\n            this.addEmitter(emitter, ePosition);\n        });\n    }\n    async init() {\n        this.emitters = this.container.actualOptions.emitters;\n        this.interactivityEmitters = this.container.actualOptions.interactivity.modes.emitters;\n        if (!this.emitters) {\n            return;\n        }\n        if (this.emitters instanceof Array) {\n            for (const emitterOptions of this.emitters) {\n                this.addEmitter(emitterOptions);\n            }\n        }\n        else {\n            this.addEmitter(this.emitters);\n        }\n    }\n    pause() {\n        for (const emitter of this.array) {\n            emitter.pause();\n        }\n    }\n    play() {\n        for (const emitter of this.array) {\n            emitter.play();\n        }\n    }\n    removeEmitter(emitter) {\n        const index = this.array.indexOf(emitter);\n        if (index >= 0) {\n            this.array.splice(index, 1);\n        }\n    }\n    resize() {\n        for (const emitter of this.array) {\n            emitter.resize();\n        }\n    }\n    stop() {\n        this.array = [];\n    }\n    update(delta) {\n        for (const emitter of this.array) {\n            emitter.update(delta);\n        }\n    }\n}\n","import { Vector, calcPositionOrRandomFromSizeRanged, deepExtend, getRangeValue, isPointInside, itemFromSingleOrMultiple, randomInRange, rangeColorToHsl, } from \"tsparticles-engine\";\nimport { Emitter } from \"./Options/Classes/Emitter\";\nimport { EmitterSize } from \"./Options/Classes/EmitterSize\";\nexport class EmitterInstance {\n    constructor(engine, emitters, container, options, position) {\n        var _a, _b, _c, _d, _e, _f, _g;\n        var _h;\n        this.emitters = emitters;\n        this.container = container;\n        this._engine = engine;\n        this._currentDuration = 0;\n        this._currentEmitDelay = 0;\n        this._currentSpawnDelay = 0;\n        this._initialPosition = position;\n        if (options instanceof Emitter) {\n            this.options = options;\n        }\n        else {\n            this.options = new Emitter();\n            this.options.load(options);\n        }\n        this._spawnDelay = (((_a = this.options.life.delay) !== null && _a !== void 0 ? _a : 0) * 1000) / this.container.retina.reduceFactor;\n        this.position = (_b = this._initialPosition) !== null && _b !== void 0 ? _b : this.calcPosition();\n        this.name = this.options.name;\n        this._shape = (_c = this._engine.emitterShapeManager) === null || _c === void 0 ? void 0 : _c.getShape(this.options.shape);\n        this.fill = this.options.fill;\n        this._firstSpawn = !this.options.life.wait;\n        this._startParticlesAdded = false;\n        let particlesOptions = deepExtend({}, this.options.particles);\n        particlesOptions !== null && particlesOptions !== void 0 ? particlesOptions : (particlesOptions = {});\n        (_d = particlesOptions.move) !== null && _d !== void 0 ? _d : (particlesOptions.move = {});\n        (_e = (_h = particlesOptions.move).direction) !== null && _e !== void 0 ? _e : (_h.direction = this.options.direction);\n        if (this.options.spawnColor) {\n            this.spawnColor = rangeColorToHsl(this.options.spawnColor);\n        }\n        this._paused = !this.options.autoPlay;\n        this._particlesOptions = particlesOptions;\n        this.size =\n            (_f = this.options.size) !== null && _f !== void 0 ? _f : (() => {\n                const size = new EmitterSize();\n                size.load({\n                    height: 0,\n                    mode: \"percent\",\n                    width: 0,\n                });\n                return size;\n            })();\n        this._lifeCount = (_g = this.options.life.count) !== null && _g !== void 0 ? _g : -1;\n        this._immortal = this._lifeCount <= 0;\n        this._engine.dispatchEvent(\"emitterCreated\", {\n            container,\n            data: {\n                emitter: this,\n            },\n        });\n        this.play();\n    }\n    externalPause() {\n        this._paused = true;\n        this.pause();\n    }\n    externalPlay() {\n        this._paused = false;\n        this.play();\n    }\n    getPosition() {\n        if (this.options.domId) {\n            const container = this.container, element = document.getElementById(this.options.domId);\n            if (element) {\n                const elRect = element.getBoundingClientRect();\n                return {\n                    x: (elRect.x + elRect.width / 2) * container.retina.pixelRatio,\n                    y: (elRect.y + elRect.height / 2) * container.retina.pixelRatio,\n                };\n            }\n        }\n        return this.position;\n    }\n    getSize() {\n        const container = this.container;\n        if (this.options.domId) {\n            const element = document.getElementById(this.options.domId);\n            if (element) {\n                const elRect = element.getBoundingClientRect();\n                return {\n                    width: elRect.width * container.retina.pixelRatio,\n                    height: elRect.height * container.retina.pixelRatio,\n                };\n            }\n        }\n        return {\n            width: this.size.mode === \"percent\"\n                ? (container.canvas.size.width * this.size.width) / 100\n                : this.size.width,\n            height: this.size.mode === \"percent\"\n                ? (container.canvas.size.height * this.size.height) / 100\n                : this.size.height,\n        };\n    }\n    pause() {\n        if (this._paused) {\n            return;\n        }\n        delete this._emitDelay;\n    }\n    play() {\n        var _a;\n        if (this._paused) {\n            return;\n        }\n        if (!(this.container.retina.reduceFactor &&\n            (this._lifeCount > 0 || this._immortal || !this.options.life.count) &&\n            (this._firstSpawn || this._currentSpawnDelay >= ((_a = this._spawnDelay) !== null && _a !== void 0 ? _a : 0)))) {\n            return;\n        }\n        if (this._emitDelay === undefined) {\n            const delay = getRangeValue(this.options.rate.delay);\n            this._emitDelay = (1000 * delay) / this.container.retina.reduceFactor;\n        }\n        if (this._lifeCount > 0 || this._immortal) {\n            this.prepareToDie();\n        }\n    }\n    resize() {\n        const initialPosition = this._initialPosition;\n        this.position =\n            initialPosition && isPointInside(initialPosition, this.container.canvas.size, Vector.origin)\n                ? initialPosition\n                : this.calcPosition();\n    }\n    update(delta) {\n        var _a, _b, _c;\n        if (this._paused) {\n            return;\n        }\n        if (this._firstSpawn) {\n            this._firstSpawn = false;\n            this._currentSpawnDelay = (_a = this._spawnDelay) !== null && _a !== void 0 ? _a : 0;\n            this._currentEmitDelay = (_b = this._emitDelay) !== null && _b !== void 0 ? _b : 0;\n        }\n        if (!this._startParticlesAdded) {\n            this._startParticlesAdded = true;\n            this.emitParticles(this.options.startCount);\n        }\n        if (this._duration !== undefined) {\n            this._currentDuration += delta.value;\n            if (this._currentDuration >= this._duration) {\n                this.pause();\n                if (this._spawnDelay !== undefined) {\n                    delete this._spawnDelay;\n                }\n                if (!this._immortal) {\n                    this._lifeCount--;\n                }\n                if (this._lifeCount > 0 || this._immortal) {\n                    this.position = this.calcPosition();\n                    this._spawnDelay = (((_c = this.options.life.delay) !== null && _c !== void 0 ? _c : 0) * 1000) / this.container.retina.reduceFactor;\n                }\n                else {\n                    this.destroy();\n                }\n                this._currentDuration -= this._duration;\n                delete this._duration;\n            }\n        }\n        if (this._spawnDelay !== undefined) {\n            this._currentSpawnDelay += delta.value;\n            if (this._currentSpawnDelay >= this._spawnDelay) {\n                this._engine.dispatchEvent(\"emitterPlay\", {\n                    container: this.container,\n                });\n                this.play();\n                this._currentSpawnDelay -= this._currentSpawnDelay;\n                delete this._spawnDelay;\n            }\n        }\n        if (this._emitDelay !== undefined) {\n            this._currentEmitDelay += delta.value;\n            if (this._currentEmitDelay >= this._emitDelay) {\n                this.emit();\n                this._currentEmitDelay -= this._emitDelay;\n            }\n        }\n    }\n    calcPosition() {\n        return calcPositionOrRandomFromSizeRanged({\n            size: this.container.canvas.size,\n            position: this.options.position,\n        });\n    }\n    destroy() {\n        this.emitters.removeEmitter(this);\n        this._engine.dispatchEvent(\"emitterDestroyed\", {\n            container: this.container,\n            data: {\n                emitter: this,\n            },\n        });\n    }\n    emit() {\n        if (this._paused) {\n            return;\n        }\n        const quantity = getRangeValue(this.options.rate.quantity);\n        this.emitParticles(quantity);\n    }\n    emitParticles(quantity) {\n        var _a, _b, _c;\n        const position = this.getPosition(), size = this.getSize(), singleParticlesOptions = itemFromSingleOrMultiple(this._particlesOptions);\n        for (let i = 0; i < quantity; i++) {\n            const particlesOptions = deepExtend({}, singleParticlesOptions);\n            if (this.spawnColor) {\n                const hslAnimation = (_a = this.options.spawnColor) === null || _a === void 0 ? void 0 : _a.animation;\n                if (hslAnimation) {\n                    this.spawnColor.h = this.setColorAnimation(hslAnimation.h, this.spawnColor.h, 360);\n                    this.spawnColor.s = this.setColorAnimation(hslAnimation.s, this.spawnColor.s, 100);\n                    this.spawnColor.l = this.setColorAnimation(hslAnimation.l, this.spawnColor.l, 100);\n                }\n                if (!particlesOptions.color) {\n                    particlesOptions.color = {\n                        value: this.spawnColor,\n                    };\n                }\n                else {\n                    particlesOptions.color.value = this.spawnColor;\n                }\n            }\n            if (!position) {\n                return;\n            }\n            const pPosition = (_c = (_b = this._shape) === null || _b === void 0 ? void 0 : _b.randomPosition(position, size, this.fill)) !== null && _c !== void 0 ? _c : position;\n            this.container.particles.addParticle(pPosition, particlesOptions);\n        }\n    }\n    prepareToDie() {\n        var _a;\n        if (this._paused) {\n            return;\n        }\n        const duration = (_a = this.options.life) === null || _a === void 0 ? void 0 : _a.duration;\n        if (this.container.retina.reduceFactor &&\n            (this._lifeCount > 0 || this._immortal) &&\n            duration !== undefined &&\n            duration > 0) {\n            this._duration = duration * 1000;\n        }\n    }\n    setColorAnimation(animation, initValue, maxValue) {\n        var _a;\n        const container = this.container;\n        if (!animation.enable) {\n            return initValue;\n        }\n        const colorOffset = randomInRange(animation.offset), delay = getRangeValue(this.options.rate.delay), emitFactor = (1000 * delay) / container.retina.reduceFactor, colorSpeed = getRangeValue((_a = animation.speed) !== null && _a !== void 0 ? _a : 0);\n        return (initValue + (colorSpeed * container.fpsLimit) / emitFactor + colorOffset * 3.6) % maxValue;\n    }\n}\n","const shapes = new Map();\nexport class ShapeManager {\n    constructor(engine) {\n        this._engine = engine;\n    }\n    addShape(name, drawer) {\n        if (!this.getShape(name)) {\n            shapes.set(name, drawer);\n        }\n    }\n    getShape(name) {\n        return shapes.get(name);\n    }\n    getSupportedShapes() {\n        return shapes.keys();\n    }\n}\n","import { getRandom } from \"tsparticles-engine\";\nfunction randomSquareCoordinate(position, offset) {\n    return position + offset * (getRandom() - 0.5);\n}\nexport class SquareShape {\n    randomPosition(position, size, fill) {\n        if (fill) {\n            return {\n                x: randomSquareCoordinate(position.x, size.width),\n                y: randomSquareCoordinate(position.y, size.height),\n            };\n        }\n        else {\n            const halfW = size.width / 2, halfH = size.height / 2, side = Math.floor(getRandom() * 4), v = (getRandom() - 0.5) * 2;\n            switch (side) {\n                case 0:\n                    return {\n                        x: position.x + v * halfW,\n                        y: position.y - halfH,\n                    };\n                case 1:\n                    return {\n                        x: position.x - halfW,\n                        y: position.y + v * halfH,\n                    };\n                case 2:\n                    return {\n                        x: position.x + v * halfW,\n                        y: position.y + halfH,\n                    };\n                case 3:\n                default:\n                    return {\n                        x: position.x + halfW,\n                        y: position.y + v * halfH,\n                    };\n            }\n        }\n    }\n}\n","export {};\n","export {};\n","export {};\n","export {};\n","import { TrailMaker } from \"./TrailMaker\";\nexport async function loadExternalTrailInteraction(engine) {\n    await engine.addInteractor(\"externalTrail\", (container) => new TrailMaker(container));\n}\nexport * from \"./Options/Classes/Trail\";\nexport * from \"./Options/Interfaces/ITrail\";\n","import { ExternalInteractorBase, isInArray } from \"tsparticles-engine\";\nimport { Trail } from \"./Options/Classes/Trail\";\nexport class TrailMaker extends ExternalInteractorBase {\n    constructor(container) {\n        super(container);\n        this._delay = 0;\n    }\n    clear() {\n    }\n    init() {\n    }\n    async interact(delta) {\n        var _a, _b, _c, _d;\n        if (!this.container.retina.reduceFactor) {\n            return;\n        }\n        const container = this.container, options = container.actualOptions, trailOptions = options.interactivity.modes.trail;\n        if (!trailOptions) {\n            return;\n        }\n        const optDelay = (trailOptions.delay * 1000) / this.container.retina.reduceFactor;\n        if (this._delay < optDelay) {\n            this._delay += delta.value;\n        }\n        if (this._delay < optDelay) {\n            return;\n        }\n        let canEmit = true;\n        if (trailOptions.pauseOnStop) {\n            if (container.interactivity.mouse.position === this._lastPosition ||\n                (((_a = container.interactivity.mouse.position) === null || _a === void 0 ? void 0 : _a.x) === ((_b = this._lastPosition) === null || _b === void 0 ? void 0 : _b.x) &&\n                    ((_c = container.interactivity.mouse.position) === null || _c === void 0 ? void 0 : _c.y) === ((_d = this._lastPosition) === null || _d === void 0 ? void 0 : _d.y))) {\n                canEmit = false;\n            }\n        }\n        if (container.interactivity.mouse.position) {\n            this._lastPosition = {\n                x: container.interactivity.mouse.position.x,\n                y: container.interactivity.mouse.position.y,\n            };\n        }\n        else {\n            delete this._lastPosition;\n        }\n        if (canEmit) {\n            container.particles.push(trailOptions.quantity, container.interactivity.mouse, trailOptions.particles);\n        }\n        this._delay -= optDelay;\n    }\n    isEnabled(particle) {\n        var _a;\n        const container = this.container, options = container.actualOptions, mouse = container.interactivity.mouse, events = ((_a = particle === null || particle === void 0 ? void 0 : particle.interactivity) !== null && _a !== void 0 ? _a : options.interactivity).events;\n        return ((mouse.clicking && mouse.inside && !!mouse.position && isInArray(\"trail\", events.onClick.mode)) ||\n            (mouse.inside && !!mouse.position && isInArray(\"trail\", events.onHover.mode)));\n    }\n    loadModeOptions(options, ...sources) {\n        if (!options.trail) {\n            options.trail = new Trail();\n        }\n        for (const source of sources) {\n            options.trail.load(source === null || source === void 0 ? void 0 : source.trail);\n        }\n    }\n    reset() {\n    }\n}\n","import { deepExtend } from \"tsparticles-engine\";\nexport class Trail {\n    constructor() {\n        this.delay = 1;\n        this.pauseOnStop = false;\n        this.quantity = 1;\n    }\n    load(data) {\n        if (!data) {\n            return;\n        }\n        if (data.delay !== undefined) {\n            this.delay = data.delay;\n        }\n        if (data.quantity !== undefined) {\n            this.quantity = data.quantity;\n        }\n        if (data.particles !== undefined) {\n            this.particles = deepExtend({}, data.particles);\n        }\n        if (data.pauseOnStop !== undefined) {\n            this.pauseOnStop = data.pauseOnStop;\n        }\n    }\n}\n","export {};\n","import { RollUpdater } from \"./RollUpdater\";\nexport async function loadRollUpdater(engine) {\n    await engine.addParticleUpdater(\"roll\", () => new RollUpdater());\n}\n","import { getRandom, getRangeValue, rangeColorToHsl } from \"tsparticles-engine\";\nimport { Roll } from \"./Options/Classes/Roll\";\nfunction updateRoll(particle, delta) {\n    const roll = particle.options.roll;\n    if (!particle.roll || !(roll === null || roll === void 0 ? void 0 : roll.enable)) {\n        return;\n    }\n    const speed = particle.roll.speed * delta.factor, max = 2 * Math.PI;\n    particle.roll.angle += speed;\n    if (particle.roll.angle > max) {\n        particle.roll.angle -= max;\n    }\n}\nexport class RollUpdater {\n    getTransformValues(particle) {\n        var _a;\n        const roll = ((_a = particle.roll) === null || _a === void 0 ? void 0 : _a.enable) && particle.roll, rollHorizontal = roll && roll.horizontal, rollVertical = roll && roll.vertical;\n        return {\n            a: rollHorizontal ? Math.cos(roll.angle) : undefined,\n            d: rollVertical ? Math.sin(roll.angle) : undefined,\n        };\n    }\n    init(particle) {\n        const rollOpt = particle.options.roll;\n        if (rollOpt === null || rollOpt === void 0 ? void 0 : rollOpt.enable) {\n            particle.roll = {\n                enable: rollOpt.enable,\n                horizontal: rollOpt.mode === \"horizontal\" || rollOpt.mode === \"both\",\n                vertical: rollOpt.mode === \"vertical\" || rollOpt.mode === \"both\",\n                angle: getRandom() * Math.PI * 2,\n                speed: getRangeValue(rollOpt.speed) / 360,\n            };\n            if (rollOpt.backColor) {\n                particle.backColor = rangeColorToHsl(rollOpt.backColor);\n            }\n            else if (rollOpt.darken.enable && rollOpt.enlighten.enable) {\n                const alterType = getRandom() >= 0.5 ? \"darken\" : \"enlighten\";\n                particle.roll.alter = {\n                    type: alterType,\n                    value: getRangeValue(alterType === \"darken\" ? rollOpt.darken.value : rollOpt.enlighten.value),\n                };\n            }\n            else if (rollOpt.darken.enable) {\n                particle.roll.alter = {\n                    type: \"darken\",\n                    value: getRangeValue(rollOpt.darken.value),\n                };\n            }\n            else if (rollOpt.enlighten.enable) {\n                particle.roll.alter = {\n                    type: \"enlighten\",\n                    value: getRangeValue(rollOpt.enlighten.value),\n                };\n            }\n        }\n        else {\n            particle.roll = {\n                enable: false,\n                horizontal: false,\n                vertical: false,\n                angle: 0,\n                speed: 0,\n            };\n        }\n    }\n    isEnabled(particle) {\n        const roll = particle.options.roll;\n        return !particle.destroyed && !particle.spawning && !!(roll === null || roll === void 0 ? void 0 : roll.enable);\n    }\n    loadOptions(options, ...sources) {\n        if (!options.roll) {\n            options.roll = new Roll();\n        }\n        for (const source of sources) {\n            options.roll.load(source === null || source === void 0 ? void 0 : source.roll);\n        }\n    }\n    update(particle, delta) {\n        if (!this.isEnabled(particle)) {\n            return;\n        }\n        updateRoll(particle, delta);\n    }\n}\n","import { OptionsColor, setRangeValue } from \"tsparticles-engine\";\nimport { RollLight } from \"./RollLight\";\nexport class Roll {\n    constructor() {\n        this.darken = new RollLight();\n        this.enable = false;\n        this.enlighten = new RollLight();\n        this.mode = \"vertical\";\n        this.speed = 25;\n    }\n    load(data) {\n        if (!data) {\n            return;\n        }\n        if (data.backColor !== undefined) {\n            this.backColor = OptionsColor.create(this.backColor, data.backColor);\n        }\n        this.darken.load(data.darken);\n        if (data.enable !== undefined) {\n            this.enable = data.enable;\n        }\n        this.enlighten.load(data.enlighten);\n        if (data.mode !== undefined) {\n            this.mode = data.mode;\n        }\n        if (data.speed !== undefined) {\n            this.speed = setRangeValue(data.speed);\n        }\n    }\n}\n","import { setRangeValue } from \"tsparticles-engine\";\nexport class RollLight {\n    constructor() {\n        this.enable = false;\n        this.value = 0;\n    }\n    load(data) {\n        if (!data) {\n            return;\n        }\n        if (data.enable !== undefined) {\n            this.enable = data.enable;\n        }\n        if (data.value !== undefined) {\n            this.value = setRangeValue(data.value);\n        }\n    }\n}\n","import { initPjs } from \"tsparticles-particles.js\";\nimport { loadAngleUpdater } from \"tsparticles-updater-angle\";\nimport { loadBaseMover } from \"tsparticles-move-base\";\nimport { loadCircleShape } from \"tsparticles-shape-circle\";\nimport { loadColorUpdater } from \"tsparticles-updater-color\";\nimport { loadExternalAttractInteraction } from \"tsparticles-interaction-external-attract\";\nimport { loadExternalBounceInteraction } from \"tsparticles-interaction-external-bounce\";\nimport { loadExternalBubbleInteraction } from \"tsparticles-interaction-external-bubble\";\nimport { loadExternalConnectInteraction } from \"tsparticles-interaction-external-connect\";\nimport { loadExternalGrabInteraction } from \"tsparticles-interaction-external-grab\";\nimport { loadExternalPauseInteraction } from \"tsparticles-interaction-external-pause\";\nimport { loadExternalPushInteraction } from \"tsparticles-interaction-external-push\";\nimport { loadExternalRemoveInteraction } from \"tsparticles-interaction-external-remove\";\nimport { loadExternalRepulseInteraction } from \"tsparticles-interaction-external-repulse\";\nimport { loadExternalSlowInteraction } from \"tsparticles-interaction-external-slow\";\nimport { loadImageShape } from \"tsparticles-shape-image\";\nimport { loadLifeUpdater } from \"tsparticles-updater-life\";\nimport { loadLineShape } from \"tsparticles-shape-line\";\nimport { loadOpacityUpdater } from \"tsparticles-updater-opacity\";\nimport { loadOutModesUpdater } from \"tsparticles-updater-out-modes\";\nimport { loadParallaxMover } from \"tsparticles-move-parallax\";\nimport { loadParticlesAttractInteraction } from \"tsparticles-interaction-particles-attract\";\nimport { loadParticlesCollisionsInteraction } from \"tsparticles-interaction-particles-collisions\";\nimport { loadParticlesLinksInteraction } from \"tsparticles-interaction-particles-links\";\nimport { loadPolygonShape } from \"tsparticles-shape-polygon\";\nimport { loadSizeUpdater } from \"tsparticles-updater-size\";\nimport { loadSquareShape } from \"tsparticles-shape-square\";\nimport { loadStarShape } from \"tsparticles-shape-star\";\nimport { loadStrokeColorUpdater } from \"tsparticles-updater-stroke-color\";\nimport { loadTextShape } from \"tsparticles-shape-text\";\nexport async function loadSlim(engine) {\n    await loadBaseMover(engine);\n    await loadParallaxMover(engine);\n    await loadExternalAttractInteraction(engine);\n    await loadExternalBounceInteraction(engine);\n    await loadExternalBubbleInteraction(engine);\n    await loadExternalConnectInteraction(engine);\n    await loadExternalGrabInteraction(engine);\n    await loadExternalPauseInteraction(engine);\n    await loadExternalPushInteraction(engine);\n    await loadExternalRemoveInteraction(engine);\n    await loadExternalRepulseInteraction(engine);\n    await loadExternalSlowInteraction(engine);\n    await loadParticlesAttractInteraction(engine);\n    await loadParticlesCollisionsInteraction(engine);\n    await loadParticlesLinksInteraction(engine);\n    await loadCircleShape(engine);\n    await loadImageShape(engine);\n    await loadLineShape(engine);\n    await loadPolygonShape(engine);\n    await loadSquareShape(engine);\n    await loadStarShape(engine);\n    await loadTextShape(engine);\n    await loadLifeUpdater(engine);\n    await loadOpacityUpdater(engine);\n    await loadSizeUpdater(engine);\n    await loadAngleUpdater(engine);\n    await loadColorUpdater(engine);\n    await loadStrokeColorUpdater(engine);\n    await loadOutModesUpdater(engine);\n    await initPjs(engine);\n}\n","const initPjs = (engine) => {\n    const particlesJS = (tagId, options) => {\n        return engine.load(tagId, options);\n    };\n    particlesJS.load = (tagId, pathConfigJson, callback) => {\n        engine\n            .loadJSON(tagId, pathConfigJson)\n            .then((container) => {\n            if (container) {\n                callback(container);\n            }\n        })\n            .catch(() => {\n            callback(undefined);\n        });\n    };\n    particlesJS.setOnClickHandler = (callback) => {\n        engine.setOnClickHandler(callback);\n    };\n    const pJSDom = engine.dom();\n    return { particlesJS, pJSDom };\n};\nexport { initPjs };\n","import { RotateUpdater } from \"./RotateUpdater\";\nexport async function loadAngleUpdater(engine) {\n    await engine.addParticleUpdater(\"rotate\", (container) => new RotateUpdater(container));\n}\n","import { getRandom, getRangeValue } from \"tsparticles-engine\";\nimport { Rotate } from \"./Options/Classes/Rotate\";\nfunction updateAngle(particle, delta) {\n    var _a, _b;\n    const rotate = particle.rotate, rotateOptions = particle.options.rotate;\n    if (!rotate || !rotateOptions) {\n        return;\n    }\n    const rotateAnimation = rotateOptions.animation, speed = ((_a = rotate.velocity) !== null && _a !== void 0 ? _a : 0) * delta.factor, max = 2 * Math.PI, decay = (_b = rotate.decay) !== null && _b !== void 0 ? _b : 1;\n    if (!rotateAnimation.enable) {\n        return;\n    }\n    switch (rotate.status) {\n        case \"increasing\":\n            rotate.value += speed;\n            if (rotate.value > max) {\n                rotate.value -= max;\n            }\n            break;\n        case \"decreasing\":\n        default:\n            rotate.value -= speed;\n            if (rotate.value < 0) {\n                rotate.value += max;\n            }\n            break;\n    }\n    if (rotate.velocity && decay !== 1) {\n        rotate.velocity *= decay;\n    }\n}\nexport class RotateUpdater {\n    constructor(container) {\n        this.container = container;\n    }\n    init(particle) {\n        const rotateOptions = particle.options.rotate;\n        if (!rotateOptions) {\n            return;\n        }\n        particle.rotate = {\n            enable: rotateOptions.animation.enable,\n            value: (getRangeValue(rotateOptions.value) * Math.PI) / 180,\n        };\n        particle.pathRotation = rotateOptions.path;\n        let rotateDirection = rotateOptions.direction;\n        if (rotateDirection === \"random\") {\n            const index = Math.floor(getRandom() * 2);\n            rotateDirection = index > 0 ? \"counter-clockwise\" : \"clockwise\";\n        }\n        switch (rotateDirection) {\n            case \"counter-clockwise\":\n            case \"counterClockwise\":\n                particle.rotate.status = \"decreasing\";\n                break;\n            case \"clockwise\":\n                particle.rotate.status = \"increasing\";\n                break;\n        }\n        const rotateAnimation = rotateOptions.animation;\n        if (rotateAnimation.enable) {\n            particle.rotate.decay = 1 - getRangeValue(rotateAnimation.decay);\n            particle.rotate.velocity =\n                (getRangeValue(rotateAnimation.speed) / 360) * this.container.retina.reduceFactor;\n            if (!rotateAnimation.sync) {\n                particle.rotate.velocity *= getRandom();\n            }\n        }\n        particle.rotation = particle.rotate.value;\n    }\n    isEnabled(particle) {\n        const rotate = particle.options.rotate;\n        if (!rotate) {\n            return false;\n        }\n        return !particle.destroyed && !particle.spawning && rotate.animation.enable && !rotate.path;\n    }\n    loadOptions(options, ...sources) {\n        if (!options.rotate) {\n            options.rotate = new Rotate();\n        }\n        for (const source of sources) {\n            options.rotate.load(source === null || source === void 0 ? void 0 : source.rotate);\n        }\n    }\n    update(particle, delta) {\n        var _a, _b;\n        if (!this.isEnabled(particle)) {\n            return;\n        }\n        updateAngle(particle, delta);\n        particle.rotation = (_b = (_a = particle.rotate) === null || _a === void 0 ? void 0 : _a.value) !== null && _b !== void 0 ? _b : 0;\n    }\n}\n","import { ValueWithRandom } from \"tsparticles-engine\";\nimport { RotateAnimation } from \"./RotateAnimation\";\nexport class Rotate extends ValueWithRandom {\n    constructor() {\n        super();\n        this.animation = new RotateAnimation();\n        this.direction = \"clockwise\";\n        this.path = false;\n        this.value = 0;\n    }\n    load(data) {\n        if (!data) {\n            return;\n        }\n        super.load(data);\n        if (data.direction !== undefined) {\n            this.direction = data.direction;\n        }\n        this.animation.load(data.animation);\n        if (data.path !== undefined) {\n            this.path = data.path;\n        }\n    }\n}\n","import { setRangeValue } from \"tsparticles-engine\";\nexport class RotateAnimation {\n    constructor() {\n        this.enable = false;\n        this.speed = 0;\n        this.decay = 0;\n        this.sync = false;\n    }\n    load(data) {\n        if (!data) {\n            return;\n        }\n        if (data.enable !== undefined) {\n            this.enable = data.enable;\n        }\n        if (data.speed !== undefined) {\n            this.speed = setRangeValue(data.speed);\n        }\n        if (data.decay !== undefined) {\n            this.decay = setRangeValue(data.decay);\n        }\n        if (data.sync !== undefined) {\n            this.sync = data.sync;\n        }\n    }\n}\n","import { BaseMover } from \"./BaseMover\";\nexport async function loadBaseMover(engine) {\n    engine.addMover(\"base\", () => new BaseMover());\n}\n","import { getDistance, getRangeMax, getRangeValue } from \"tsparticles-engine\";\nimport { applyDistance, applyPath, getProximitySpeedFactor, spin } from \"./Utils\";\nexport class BaseMover {\n    init(particle) {\n        var _a;\n        const container = particle.container, options = particle.options, gravityOptions = options.move.gravity, spinOptions = options.move.spin;\n        particle.gravity = {\n            enable: gravityOptions.enable,\n            acceleration: getRangeValue(gravityOptions.acceleration),\n            inverse: gravityOptions.inverse,\n        };\n        if (spinOptions.enable) {\n            const spinPos = (_a = spinOptions.position) !== null && _a !== void 0 ? _a : { x: 50, y: 50 }, spinCenter = {\n                x: (spinPos.x / 100) * container.canvas.size.width,\n                y: (spinPos.y / 100) * container.canvas.size.height,\n            }, pos = particle.getPosition(), distance = getDistance(pos, spinCenter), spinAcceleration = getRangeValue(spinOptions.acceleration);\n            particle.retina.spinAcceleration = spinAcceleration * container.retina.pixelRatio;\n            particle.spin = {\n                center: spinCenter,\n                direction: particle.velocity.x >= 0 ? \"clockwise\" : \"counter-clockwise\",\n                angle: particle.velocity.angle,\n                radius: distance,\n                acceleration: particle.retina.spinAcceleration,\n            };\n        }\n    }\n    isEnabled(particle) {\n        return !particle.destroyed && particle.options.move.enable;\n    }\n    move(particle, delta) {\n        var _a, _b, _c;\n        var _d, _e;\n        const particleOptions = particle.options, moveOptions = particleOptions.move;\n        if (!moveOptions.enable) {\n            return;\n        }\n        const container = particle.container, slowFactor = getProximitySpeedFactor(particle), baseSpeed = ((_a = (_d = particle.retina).moveSpeed) !== null && _a !== void 0 ? _a : (_d.moveSpeed = getRangeValue(moveOptions.speed) * container.retina.pixelRatio)) *\n            container.retina.reduceFactor, moveDrift = ((_b = (_e = particle.retina).moveDrift) !== null && _b !== void 0 ? _b : (_e.moveDrift = getRangeValue(particle.options.move.drift) * container.retina.pixelRatio)), maxSize = getRangeMax(particleOptions.size.value) * container.retina.pixelRatio, sizeFactor = moveOptions.size ? particle.getRadius() / maxSize : 1, speedFactor = sizeFactor * slowFactor * (delta.factor || 1), diffFactor = 2, moveSpeed = (baseSpeed * speedFactor) / diffFactor;\n        if (moveOptions.spin.enable) {\n            spin(particle, moveSpeed);\n        }\n        else {\n            applyPath(particle, delta);\n            const gravityOptions = particle.gravity, gravityFactor = (gravityOptions === null || gravityOptions === void 0 ? void 0 : gravityOptions.enable) && gravityOptions.inverse ? -1 : 1;\n            if ((gravityOptions === null || gravityOptions === void 0 ? void 0 : gravityOptions.enable) && moveSpeed) {\n                particle.velocity.y +=\n                    (gravityFactor * (gravityOptions.acceleration * delta.factor)) / (60 * moveSpeed);\n            }\n            if (moveDrift && moveSpeed) {\n                particle.velocity.x += (moveDrift * delta.factor) / (60 * moveSpeed);\n            }\n            const decay = particle.moveDecay;\n            if (decay != 1) {\n                particle.velocity.multTo(decay);\n            }\n            const velocity = particle.velocity.mult(moveSpeed), maxSpeed = (_c = particle.retina.maxSpeed) !== null && _c !== void 0 ? _c : container.retina.maxSpeed;\n            if ((gravityOptions === null || gravityOptions === void 0 ? void 0 : gravityOptions.enable) &&\n                maxSpeed > 0 &&\n                ((!gravityOptions.inverse && velocity.y >= 0 && velocity.y >= maxSpeed) ||\n                    (gravityOptions.inverse && velocity.y <= 0 && velocity.y <= -maxSpeed))) {\n                velocity.y = gravityFactor * maxSpeed;\n                if (moveSpeed) {\n                    particle.velocity.y = velocity.y / moveSpeed;\n                }\n            }\n            const zIndexOptions = particle.options.zIndex, zVelocityFactor = (1 - particle.zIndexFactor) ** zIndexOptions.velocityRate;\n            if (zVelocityFactor != 1) {\n                velocity.multTo(zVelocityFactor);\n            }\n            particle.position.addTo(velocity);\n            if (moveOptions.vibrate) {\n                particle.position.x += Math.sin(particle.position.x * Math.cos(particle.position.y));\n                particle.position.y += Math.cos(particle.position.y * Math.sin(particle.position.x));\n            }\n        }\n        applyDistance(particle);\n    }\n}\n","import { clamp, getDistances, getRandom } from \"tsparticles-engine\";\nexport function applyDistance(particle) {\n    const initialPosition = particle.initialPosition, { dx, dy } = getDistances(initialPosition, particle.position), dxFixed = Math.abs(dx), dyFixed = Math.abs(dy), hDistance = particle.retina.maxDistance.horizontal, vDistance = particle.retina.maxDistance.vertical;\n    if (!hDistance && !vDistance) {\n        return;\n    }\n    if (((hDistance && dxFixed >= hDistance) || (vDistance && dyFixed >= vDistance)) && !particle.misplaced) {\n        particle.misplaced = (!!hDistance && dxFixed > hDistance) || (!!vDistance && dyFixed > vDistance);\n        if (hDistance) {\n            particle.velocity.x = particle.velocity.y / 2 - particle.velocity.x;\n        }\n        if (vDistance) {\n            particle.velocity.y = particle.velocity.x / 2 - particle.velocity.y;\n        }\n    }\n    else if ((!hDistance || dxFixed < hDistance) && (!vDistance || dyFixed < vDistance) && particle.misplaced) {\n        particle.misplaced = false;\n    }\n    else if (particle.misplaced) {\n        const pos = particle.position, vel = particle.velocity;\n        if (hDistance && ((pos.x < initialPosition.x && vel.x < 0) || (pos.x > initialPosition.x && vel.x > 0))) {\n            vel.x *= -getRandom();\n        }\n        if (vDistance && ((pos.y < initialPosition.y && vel.y < 0) || (pos.y > initialPosition.y && vel.y > 0))) {\n            vel.y *= -getRandom();\n        }\n    }\n}\nexport function spin(particle, moveSpeed) {\n    const container = particle.container;\n    if (!particle.spin) {\n        return;\n    }\n    const updateFunc = {\n        x: particle.spin.direction === \"clockwise\" ? Math.cos : Math.sin,\n        y: particle.spin.direction === \"clockwise\" ? Math.sin : Math.cos,\n    };\n    particle.position.x = particle.spin.center.x + particle.spin.radius * updateFunc.x(particle.spin.angle);\n    particle.position.y = particle.spin.center.y + particle.spin.radius * updateFunc.y(particle.spin.angle);\n    particle.spin.radius += particle.spin.acceleration;\n    const maxCanvasSize = Math.max(container.canvas.size.width, container.canvas.size.height);\n    if (particle.spin.radius > maxCanvasSize / 2) {\n        particle.spin.radius = maxCanvasSize / 2;\n        particle.spin.acceleration *= -1;\n    }\n    else if (particle.spin.radius < 0) {\n        particle.spin.radius = 0;\n        particle.spin.acceleration *= -1;\n    }\n    particle.spin.angle += (moveSpeed / 100) * (1 - particle.spin.radius / maxCanvasSize);\n}\nexport function applyPath(particle, delta) {\n    var _a;\n    const particlesOptions = particle.options, pathOptions = particlesOptions.move.path, pathEnabled = pathOptions.enable;\n    if (!pathEnabled) {\n        return;\n    }\n    if (particle.lastPathTime <= particle.pathDelay) {\n        particle.lastPathTime += delta.value;\n        return;\n    }\n    const path = (_a = particle.pathGenerator) === null || _a === void 0 ? void 0 : _a.generate(particle);\n    if (path) {\n        particle.velocity.addTo(path);\n    }\n    if (pathOptions.clamp) {\n        particle.velocity.x = clamp(particle.velocity.x, -1, 1);\n        particle.velocity.y = clamp(particle.velocity.y, -1, 1);\n    }\n    particle.lastPathTime -= particle.pathDelay;\n}\nexport function getProximitySpeedFactor(particle) {\n    return particle.slow.inRange ? particle.slow.factor : 1;\n}\n","import { CircleDrawer } from \"./CircleDrawer\";\nexport async function loadCircleShape(engine) {\n    await engine.addShape(\"circle\", new CircleDrawer());\n}\n","export class CircleDrawer {\n    draw(context, particle, radius) {\n        if (!particle.circleRange) {\n            particle.circleRange = { min: 0, max: Math.PI * 2 };\n        }\n        const circleRange = particle.circleRange;\n        context.arc(0, 0, radius, circleRange.min, circleRange.max, false);\n    }\n    getSidesCount() {\n        return 12;\n    }\n    particleInit(container, particle) {\n        var _a;\n        const shapeData = particle.shapeData, angle = (_a = shapeData === null || shapeData === void 0 ? void 0 : shapeData.angle) !== null && _a !== void 0 ? _a : {\n            max: 360,\n            min: 0,\n        };\n        particle.circleRange =\n            typeof angle !== \"object\"\n                ? {\n                    min: 0,\n                    max: (angle * Math.PI) / 180,\n                }\n                : { min: (angle.min * Math.PI) / 180, max: (angle.max * Math.PI) / 180 };\n    }\n}\n","import { ColorUpdater } from \"./ColorUpdater\";\nexport async function loadColorUpdater(engine) {\n    await engine.addParticleUpdater(\"color\", (container) => new ColorUpdater(container));\n}\n","import { getHslAnimationFromHsl, randomInRange, rangeColorToHsl } from \"tsparticles-engine\";\nfunction updateColorValue(delta, value, valueAnimation, max, decrease) {\n    var _a, _b;\n    const colorValue = value;\n    if (!colorValue ||\n        !valueAnimation.enable ||\n        (colorValue.loops !== undefined &&\n            colorValue.maxLoops !== undefined &&\n            colorValue.maxLoops > 0 &&\n            colorValue.loops >= colorValue.maxLoops)) {\n        return;\n    }\n    const offset = randomInRange(valueAnimation.offset), velocity = ((_a = value.velocity) !== null && _a !== void 0 ? _a : 0) * delta.factor + offset * 3.6, decay = (_b = value.decay) !== null && _b !== void 0 ? _b : 1;\n    if (!decrease || colorValue.status === \"increasing\") {\n        colorValue.value += velocity;\n        if (colorValue.value > max) {\n            if (!colorValue.loops) {\n                colorValue.loops = 0;\n            }\n            colorValue.loops++;\n            if (decrease) {\n                colorValue.status = \"decreasing\";\n                colorValue.value -= colorValue.value % max;\n            }\n        }\n    }\n    else {\n        colorValue.value -= velocity;\n        if (colorValue.value < 0) {\n            if (!colorValue.loops) {\n                colorValue.loops = 0;\n            }\n            colorValue.loops++;\n            colorValue.status = \"increasing\";\n            colorValue.value += colorValue.value;\n        }\n    }\n    if (colorValue.velocity && decay !== 1) {\n        colorValue.velocity *= decay;\n    }\n    if (colorValue.value > max) {\n        colorValue.value %= max;\n    }\n}\nfunction updateColor(particle, delta) {\n    var _a, _b, _c;\n    const animationOptions = particle.options.color.animation;\n    const h = (_a = particle.color) === null || _a === void 0 ? void 0 : _a.h, s = (_b = particle.color) === null || _b === void 0 ? void 0 : _b.s, l = (_c = particle.color) === null || _c === void 0 ? void 0 : _c.l;\n    if (h) {\n        updateColorValue(delta, h, animationOptions.h, 360, false);\n    }\n    if (s) {\n        updateColorValue(delta, s, animationOptions.s, 100, true);\n    }\n    if (l) {\n        updateColorValue(delta, l, animationOptions.l, 100, true);\n    }\n}\nexport class ColorUpdater {\n    constructor(container) {\n        this.container = container;\n    }\n    init(particle) {\n        const hslColor = rangeColorToHsl(particle.options.color, particle.id, particle.options.reduceDuplicates);\n        if (hslColor) {\n            particle.color = getHslAnimationFromHsl(hslColor, particle.options.color.animation, this.container.retina.reduceFactor);\n        }\n    }\n    isEnabled(particle) {\n        var _a, _b, _c;\n        const animationOptions = particle.options.color.animation;\n        return (!particle.destroyed &&\n            !particle.spawning &&\n            ((((_a = particle.color) === null || _a === void 0 ? void 0 : _a.h.value) !== undefined && animationOptions.h.enable) ||\n                (((_b = particle.color) === null || _b === void 0 ? void 0 : _b.s.value) !== undefined && animationOptions.s.enable) ||\n                (((_c = particle.color) === null || _c === void 0 ? void 0 : _c.l.value) !== undefined && animationOptions.l.enable)));\n    }\n    update(particle, delta) {\n        updateColor(particle, delta);\n    }\n}\n","import { Attractor } from \"./Attractor\";\nexport async function loadExternalAttractInteraction(engine) {\n    await engine.addInteractor(\"externalAttract\", (container) => new Attractor(engine, container));\n}\nexport * from \"./Options/Classes/Attract\";\nexport * from \"./Options/Interfaces/IAttract\";\n","import { Circle, ExternalInteractorBase, Vector, clamp, getDistances, getEasing, isInArray, mouseMoveEvent, } from \"tsparticles-engine\";\nimport { Attract } from \"./Options/Classes/Attract\";\nexport class Attractor extends ExternalInteractorBase {\n    constructor(engine, container) {\n        super(container);\n        this._engine = engine;\n        if (!container.attract) {\n            container.attract = { particles: [] };\n        }\n        this.handleClickMode = (mode) => {\n            const options = this.container.actualOptions, attract = options.interactivity.modes.attract;\n            if (!attract || mode !== \"attract\") {\n                return;\n            }\n            if (!container.attract) {\n                container.attract = { particles: [] };\n            }\n            container.attract.clicking = true;\n            container.attract.count = 0;\n            for (const particle of container.attract.particles) {\n                if (!this.isEnabled(particle)) {\n                    continue;\n                }\n                particle.velocity.setTo(particle.initialVelocity);\n            }\n            container.attract.particles = [];\n            container.attract.finish = false;\n            setTimeout(() => {\n                if (!container.destroyed) {\n                    if (!container.attract) {\n                        container.attract = { particles: [] };\n                    }\n                    container.attract.clicking = false;\n                }\n            }, attract.duration * 1000);\n        };\n    }\n    clear() {\n    }\n    init() {\n        const container = this.container, attract = container.actualOptions.interactivity.modes.attract;\n        if (!attract) {\n            return;\n        }\n        container.retina.attractModeDistance = attract.distance * container.retina.pixelRatio;\n    }\n    async interact() {\n        const container = this.container, options = container.actualOptions, mouseMoveStatus = container.interactivity.status === mouseMoveEvent, events = options.interactivity.events, hoverEnabled = events.onHover.enable, hoverMode = events.onHover.mode, clickEnabled = events.onClick.enable, clickMode = events.onClick.mode;\n        if (mouseMoveStatus && hoverEnabled && isInArray(\"attract\", hoverMode)) {\n            this.hoverAttract();\n        }\n        else if (clickEnabled && isInArray(\"attract\", clickMode)) {\n            this.clickAttract();\n        }\n    }\n    isEnabled(particle) {\n        var _a;\n        const container = this.container, options = container.actualOptions, mouse = container.interactivity.mouse, events = ((_a = particle === null || particle === void 0 ? void 0 : particle.interactivity) !== null && _a !== void 0 ? _a : options.interactivity).events;\n        if ((!mouse.position || !events.onHover.enable) && (!mouse.clickPosition || !events.onClick.enable)) {\n            return false;\n        }\n        const hoverMode = events.onHover.mode, clickMode = events.onClick.mode;\n        return isInArray(\"attract\", hoverMode) || isInArray(\"attract\", clickMode);\n    }\n    loadModeOptions(options, ...sources) {\n        if (!options.attract) {\n            options.attract = new Attract();\n        }\n        for (const source of sources) {\n            options.attract.load(source === null || source === void 0 ? void 0 : source.attract);\n        }\n    }\n    reset() {\n    }\n    clickAttract() {\n        const container = this.container;\n        if (!container.attract) {\n            container.attract = { particles: [] };\n        }\n        if (!container.attract.finish) {\n            if (!container.attract.count) {\n                container.attract.count = 0;\n            }\n            container.attract.count++;\n            if (container.attract.count === container.particles.count) {\n                container.attract.finish = true;\n            }\n        }\n        if (container.attract.clicking) {\n            const mousePos = container.interactivity.mouse.clickPosition, attractRadius = container.retina.attractModeDistance;\n            if (!attractRadius || attractRadius < 0 || !mousePos) {\n                return;\n            }\n            this.processAttract(mousePos, attractRadius, new Circle(mousePos.x, mousePos.y, attractRadius));\n        }\n        else if (container.attract.clicking === false) {\n            container.attract.particles = [];\n        }\n        return;\n    }\n    hoverAttract() {\n        const container = this.container, mousePos = container.interactivity.mouse.position, attractRadius = container.retina.attractModeDistance;\n        if (!attractRadius || attractRadius < 0 || !mousePos) {\n            return;\n        }\n        this.processAttract(mousePos, attractRadius, new Circle(mousePos.x, mousePos.y, attractRadius));\n    }\n    processAttract(position, attractRadius, area) {\n        const container = this.container, attractOptions = container.actualOptions.interactivity.modes.attract;\n        if (!attractOptions) {\n            return;\n        }\n        const query = container.particles.quadTree.query(area, (p) => this.isEnabled(p));\n        for (const particle of query) {\n            const { dx, dy, distance } = getDistances(particle.position, position);\n            const velocity = attractOptions.speed * attractOptions.factor;\n            const attractFactor = clamp(getEasing(attractOptions.easing)(1 - distance / attractRadius) * velocity, 0, attractOptions.maxSpeed);\n            const normVec = Vector.create(distance === 0 ? velocity : (dx / distance) * attractFactor, distance === 0 ? velocity : (dy / distance) * attractFactor);\n            particle.position.subFrom(normVec);\n        }\n    }\n}\n","export class Attract {\n    constructor() {\n        this.distance = 200;\n        this.duration = 0.4;\n        this.easing = \"ease-out-quad\";\n        this.factor = 1;\n        this.maxSpeed = 50;\n        this.speed = 1;\n    }\n    load(data) {\n        if (!data) {\n            return;\n        }\n        if (data.distance !== undefined) {\n            this.distance = data.distance;\n        }\n        if (data.duration !== undefined) {\n            this.duration = data.duration;\n        }\n        if (data.easing !== undefined) {\n            this.easing = data.easing;\n        }\n        if (data.factor !== undefined) {\n            this.factor = data.factor;\n        }\n        if (data.maxSpeed !== undefined) {\n            this.maxSpeed = data.maxSpeed;\n        }\n        if (data.speed !== undefined) {\n            this.speed = data.speed;\n        }\n    }\n}\n","export {};\n","import { Bouncer } from \"./Bouncer\";\nexport async function loadExternalBounceInteraction(engine) {\n    await engine.addInteractor(\"externalBounce\", (container) => new Bouncer(container));\n}\nexport * from \"./Options/Classes/Bounce\";\nexport * from \"./Options/Interfaces/IBounce\";\n","import { Circle, ExternalInteractorBase, Rectangle, Vector, calculateBounds, circleBounce, circleBounceDataFromParticle, divModeExecute, isDivModeEnabled, isInArray, mouseMoveEvent, rectBounce, } from \"tsparticles-engine\";\nimport { Bounce } from \"./Options/Classes/Bounce\";\nexport class Bouncer extends ExternalInteractorBase {\n    constructor(container) {\n        super(container);\n    }\n    clear() {\n    }\n    init() {\n        const container = this.container, bounce = container.actualOptions.interactivity.modes.bounce;\n        if (!bounce) {\n            return;\n        }\n        container.retina.bounceModeDistance = bounce.distance * container.retina.pixelRatio;\n    }\n    async interact() {\n        const container = this.container, options = container.actualOptions, events = options.interactivity.events, mouseMoveStatus = container.interactivity.status === mouseMoveEvent, hoverEnabled = events.onHover.enable, hoverMode = events.onHover.mode, divs = events.onDiv;\n        if (mouseMoveStatus && hoverEnabled && isInArray(\"bounce\", hoverMode)) {\n            this.processMouseBounce();\n        }\n        else {\n            divModeExecute(\"bounce\", divs, (selector, div) => this.singleSelectorBounce(selector, div));\n        }\n    }\n    isEnabled(particle) {\n        var _a;\n        const container = this.container, options = container.actualOptions, mouse = container.interactivity.mouse, events = ((_a = particle === null || particle === void 0 ? void 0 : particle.interactivity) !== null && _a !== void 0 ? _a : options.interactivity).events, divs = events.onDiv;\n        return ((mouse.position && events.onHover.enable && isInArray(\"bounce\", events.onHover.mode)) ||\n            isDivModeEnabled(\"bounce\", divs));\n    }\n    loadModeOptions(options, ...sources) {\n        if (!options.bounce) {\n            options.bounce = new Bounce();\n        }\n        for (const source of sources) {\n            options.bounce.load(source === null || source === void 0 ? void 0 : source.bounce);\n        }\n    }\n    reset() {\n    }\n    processBounce(position, radius, area) {\n        const query = this.container.particles.quadTree.query(area, (p) => this.isEnabled(p));\n        for (const particle of query) {\n            if (area instanceof Circle) {\n                circleBounce(circleBounceDataFromParticle(particle), {\n                    position,\n                    radius,\n                    mass: (radius ** 2 * Math.PI) / 2,\n                    velocity: Vector.origin,\n                    factor: Vector.origin,\n                });\n            }\n            else if (area instanceof Rectangle) {\n                rectBounce(particle, calculateBounds(position, radius));\n            }\n        }\n    }\n    processMouseBounce() {\n        const container = this.container, pxRatio = container.retina.pixelRatio, tolerance = 10 * pxRatio, mousePos = container.interactivity.mouse.position, radius = container.retina.bounceModeDistance;\n        if (!radius || radius < 0 || !mousePos) {\n            return;\n        }\n        this.processBounce(mousePos, radius, new Circle(mousePos.x, mousePos.y, radius + tolerance));\n    }\n    singleSelectorBounce(selector, div) {\n        const container = this.container, query = document.querySelectorAll(selector);\n        if (!query.length) {\n            return;\n        }\n        query.forEach((item) => {\n            const elem = item, pxRatio = container.retina.pixelRatio, pos = {\n                x: (elem.offsetLeft + elem.offsetWidth / 2) * pxRatio,\n                y: (elem.offsetTop + elem.offsetHeight / 2) * pxRatio,\n            }, radius = (elem.offsetWidth / 2) * pxRatio, tolerance = 10 * pxRatio, area = div.type === \"circle\"\n                ? new Circle(pos.x, pos.y, radius + tolerance)\n                : new Rectangle(elem.offsetLeft * pxRatio - tolerance, elem.offsetTop * pxRatio - tolerance, elem.offsetWidth * pxRatio + tolerance * 2, elem.offsetHeight * pxRatio + tolerance * 2);\n            this.processBounce(pos, radius, area);\n        });\n    }\n}\n","export class Bounce {\n    constructor() {\n        this.distance = 200;\n    }\n    load(data) {\n        if (!data) {\n            return;\n        }\n        if (data.distance !== undefined) {\n            this.distance = data.distance;\n        }\n    }\n}\n","export {};\n","import { Bubbler } from \"./Bubbler\";\nexport async function loadExternalBubbleInteraction(engine) {\n    await engine.addInteractor(\"externalBubble\", (container) => new Bubbler(container));\n}\nexport * from \"./Options/Classes/BubbleBase\";\nexport * from \"./Options/Classes/BubbleDiv\";\nexport * from \"./Options/Classes/Bubble\";\nexport * from \"./Options/Interfaces/IBubbleBase\";\nexport * from \"./Options/Interfaces/IBubbleDiv\";\nexport * from \"./Options/Interfaces/IBubble\";\n","import { Circle, ExternalInteractorBase, Rectangle, clamp, colorMix, divMode, divModeExecute, getDistance, getRangeMax, isDivModeEnabled, isInArray, itemFromSingleOrMultiple, mouseLeaveEvent, mouseMoveEvent, rangeColorToHsl, rgbToHsl, } from \"tsparticles-engine\";\nimport { Bubble } from \"./Options/Classes/Bubble\";\nfunction calculateBubbleValue(particleValue, modeValue, optionsValue, ratio) {\n    if (modeValue >= optionsValue) {\n        const value = particleValue + (modeValue - optionsValue) * ratio;\n        return clamp(value, particleValue, modeValue);\n    }\n    else if (modeValue < optionsValue) {\n        const value = particleValue - (optionsValue - modeValue) * ratio;\n        return clamp(value, modeValue, particleValue);\n    }\n}\nexport class Bubbler extends ExternalInteractorBase {\n    constructor(container) {\n        super(container);\n        if (!container.bubble) {\n            container.bubble = {};\n        }\n        this.handleClickMode = (mode) => {\n            if (mode !== \"bubble\") {\n                return;\n            }\n            if (!container.bubble) {\n                container.bubble = {};\n            }\n            container.bubble.clicking = true;\n        };\n    }\n    clear(particle, delta, force) {\n        if (particle.bubble.inRange && !force) {\n            return;\n        }\n        delete particle.bubble.div;\n        delete particle.bubble.opacity;\n        delete particle.bubble.radius;\n        delete particle.bubble.color;\n    }\n    init() {\n        const container = this.container, bubble = container.actualOptions.interactivity.modes.bubble;\n        if (!bubble) {\n            return;\n        }\n        container.retina.bubbleModeDistance = bubble.distance * container.retina.pixelRatio;\n        if (bubble.size !== undefined) {\n            container.retina.bubbleModeSize = bubble.size * container.retina.pixelRatio;\n        }\n    }\n    async interact(delta) {\n        const options = this.container.actualOptions, events = options.interactivity.events, onHover = events.onHover, onClick = events.onClick, hoverEnabled = onHover.enable, hoverMode = onHover.mode, clickEnabled = onClick.enable, clickMode = onClick.mode, divs = events.onDiv;\n        if (hoverEnabled && isInArray(\"bubble\", hoverMode)) {\n            this.hoverBubble(delta);\n        }\n        else if (clickEnabled && isInArray(\"bubble\", clickMode)) {\n            this.clickBubble(delta);\n        }\n        else {\n            divModeExecute(\"bubble\", divs, (selector, div) => this.singleSelectorHover(delta, selector, div));\n        }\n    }\n    isEnabled(particle) {\n        var _a;\n        const container = this.container, options = container.actualOptions, mouse = container.interactivity.mouse, events = ((_a = particle === null || particle === void 0 ? void 0 : particle.interactivity) !== null && _a !== void 0 ? _a : options.interactivity).events, divs = events.onDiv, divBubble = isDivModeEnabled(\"bubble\", divs);\n        if (!(divBubble || (events.onHover.enable && mouse.position) || (events.onClick.enable && mouse.clickPosition))) {\n            return false;\n        }\n        const hoverMode = events.onHover.mode;\n        const clickMode = events.onClick.mode;\n        return isInArray(\"bubble\", hoverMode) || isInArray(\"bubble\", clickMode) || divBubble;\n    }\n    loadModeOptions(options, ...sources) {\n        if (!options.bubble) {\n            options.bubble = new Bubble();\n        }\n        for (const source of sources) {\n            options.bubble.load(source === null || source === void 0 ? void 0 : source.bubble);\n        }\n    }\n    reset(particle) {\n        particle.bubble.inRange = false;\n    }\n    clickBubble(delta) {\n        var _a, _b;\n        const container = this.container, options = container.actualOptions, mouseClickPos = container.interactivity.mouse.clickPosition, bubble = options.interactivity.modes.bubble;\n        if (!bubble || !mouseClickPos) {\n            return;\n        }\n        if (!container.bubble) {\n            container.bubble = {};\n        }\n        const distance = container.retina.bubbleModeDistance;\n        if (!distance || distance < 0) {\n            return;\n        }\n        const query = container.particles.quadTree.queryCircle(mouseClickPos, distance, (p) => this.isEnabled(p));\n        for (const particle of query) {\n            if (!container.bubble.clicking) {\n                continue;\n            }\n            particle.bubble.inRange = !container.bubble.durationEnd;\n            const pos = particle.getPosition(), distMouse = getDistance(pos, mouseClickPos), timeSpent = (new Date().getTime() - (container.interactivity.mouse.clickTime || 0)) / 1000;\n            if (timeSpent > bubble.duration) {\n                container.bubble.durationEnd = true;\n            }\n            if (timeSpent > bubble.duration * 2) {\n                container.bubble.clicking = false;\n                container.bubble.durationEnd = false;\n            }\n            const sizeData = {\n                bubbleObj: {\n                    optValue: container.retina.bubbleModeSize,\n                    value: particle.bubble.radius,\n                },\n                particlesObj: {\n                    optValue: getRangeMax(particle.options.size.value) * container.retina.pixelRatio,\n                    value: particle.size.value,\n                },\n                type: \"size\",\n            };\n            this.process(particle, distMouse, timeSpent, sizeData);\n            const opacityData = {\n                bubbleObj: {\n                    optValue: bubble.opacity,\n                    value: particle.bubble.opacity,\n                },\n                particlesObj: {\n                    optValue: getRangeMax(particle.options.opacity.value),\n                    value: (_b = (_a = particle.opacity) === null || _a === void 0 ? void 0 : _a.value) !== null && _b !== void 0 ? _b : 1,\n                },\n                type: \"opacity\",\n            };\n            this.process(particle, distMouse, timeSpent, opacityData);\n            if (!container.bubble.durationEnd) {\n                if (distMouse <= distance) {\n                    this.hoverBubbleColor(particle, distMouse);\n                }\n                else {\n                    delete particle.bubble.color;\n                }\n            }\n            else {\n                delete particle.bubble.color;\n            }\n        }\n    }\n    hoverBubble(delta) {\n        const container = this.container, mousePos = container.interactivity.mouse.position, distance = container.retina.bubbleModeDistance;\n        if (!distance || distance < 0 || mousePos === undefined) {\n            return;\n        }\n        const query = container.particles.quadTree.queryCircle(mousePos, distance, (p) => this.isEnabled(p));\n        for (const particle of query) {\n            particle.bubble.inRange = true;\n            const pos = particle.getPosition(), pointDistance = getDistance(pos, mousePos), ratio = 1 - pointDistance / distance;\n            if (pointDistance <= distance) {\n                if (ratio >= 0 && container.interactivity.status === mouseMoveEvent) {\n                    this.hoverBubbleSize(particle, ratio);\n                    this.hoverBubbleOpacity(particle, ratio);\n                    this.hoverBubbleColor(particle, ratio);\n                }\n            }\n            else {\n                this.reset(particle);\n            }\n            if (container.interactivity.status === mouseLeaveEvent) {\n                this.reset(particle);\n            }\n        }\n    }\n    hoverBubbleColor(particle, ratio, divBubble) {\n        const options = this.container.actualOptions;\n        const bubbleOptions = divBubble !== null && divBubble !== void 0 ? divBubble : options.interactivity.modes.bubble;\n        if (!bubbleOptions) {\n            return;\n        }\n        if (!particle.bubble.finalColor) {\n            const modeColor = bubbleOptions.color;\n            if (!modeColor) {\n                return;\n            }\n            const bubbleColor = itemFromSingleOrMultiple(modeColor);\n            particle.bubble.finalColor = rangeColorToHsl(bubbleColor);\n        }\n        if (!particle.bubble.finalColor) {\n            return;\n        }\n        if (bubbleOptions.mix) {\n            particle.bubble.color = undefined;\n            const pColor = particle.getFillColor();\n            particle.bubble.color = pColor\n                ? rgbToHsl(colorMix(pColor, particle.bubble.finalColor, 1 - ratio, ratio))\n                : particle.bubble.finalColor;\n        }\n        else {\n            particle.bubble.color = particle.bubble.finalColor;\n        }\n    }\n    hoverBubbleOpacity(particle, ratio, divBubble) {\n        var _a, _b, _c, _d;\n        const container = this.container, options = container.actualOptions, modeOpacity = (_a = divBubble === null || divBubble === void 0 ? void 0 : divBubble.opacity) !== null && _a !== void 0 ? _a : (_b = options.interactivity.modes.bubble) === null || _b === void 0 ? void 0 : _b.opacity;\n        if (!modeOpacity) {\n            return;\n        }\n        const optOpacity = particle.options.opacity.value;\n        const pOpacity = (_d = (_c = particle.opacity) === null || _c === void 0 ? void 0 : _c.value) !== null && _d !== void 0 ? _d : 1;\n        const opacity = calculateBubbleValue(pOpacity, modeOpacity, getRangeMax(optOpacity), ratio);\n        if (opacity !== undefined) {\n            particle.bubble.opacity = opacity;\n        }\n    }\n    hoverBubbleSize(particle, ratio, divBubble) {\n        const container = this.container, modeSize = (divBubble === null || divBubble === void 0 ? void 0 : divBubble.size) ? divBubble.size * container.retina.pixelRatio : container.retina.bubbleModeSize;\n        if (modeSize === undefined) {\n            return;\n        }\n        const optSize = getRangeMax(particle.options.size.value) * container.retina.pixelRatio;\n        const pSize = particle.size.value;\n        const size = calculateBubbleValue(pSize, modeSize, optSize, ratio);\n        if (size !== undefined) {\n            particle.bubble.radius = size;\n        }\n    }\n    process(particle, distMouse, timeSpent, data) {\n        const container = this.container, bubbleParam = data.bubbleObj.optValue, options = container.actualOptions, bubble = options.interactivity.modes.bubble;\n        if (!bubble || bubbleParam === undefined) {\n            return;\n        }\n        const bubbleDuration = bubble.duration, bubbleDistance = container.retina.bubbleModeDistance, particlesParam = data.particlesObj.optValue, pObjBubble = data.bubbleObj.value, pObj = data.particlesObj.value || 0, type = data.type;\n        if (!bubbleDistance || bubbleDistance < 0 || bubbleParam === particlesParam) {\n            return;\n        }\n        if (!container.bubble) {\n            container.bubble = {};\n        }\n        if (!container.bubble.durationEnd) {\n            if (distMouse <= bubbleDistance) {\n                const obj = pObjBubble !== null && pObjBubble !== void 0 ? pObjBubble : pObj;\n                if (obj !== bubbleParam) {\n                    const value = pObj - (timeSpent * (pObj - bubbleParam)) / bubbleDuration;\n                    if (type === \"size\") {\n                        particle.bubble.radius = value;\n                    }\n                    if (type === \"opacity\") {\n                        particle.bubble.opacity = value;\n                    }\n                }\n            }\n            else {\n                if (type === \"size\") {\n                    delete particle.bubble.radius;\n                }\n                if (type === \"opacity\") {\n                    delete particle.bubble.opacity;\n                }\n            }\n        }\n        else if (pObjBubble) {\n            if (type === \"size\") {\n                delete particle.bubble.radius;\n            }\n            if (type === \"opacity\") {\n                delete particle.bubble.opacity;\n            }\n        }\n    }\n    singleSelectorHover(delta, selector, div) {\n        const container = this.container, selectors = document.querySelectorAll(selector), bubble = container.actualOptions.interactivity.modes.bubble;\n        if (!bubble || !selectors.length) {\n            return;\n        }\n        selectors.forEach((item) => {\n            const elem = item, pxRatio = container.retina.pixelRatio, pos = {\n                x: (elem.offsetLeft + elem.offsetWidth / 2) * pxRatio,\n                y: (elem.offsetTop + elem.offsetHeight / 2) * pxRatio,\n            }, repulseRadius = (elem.offsetWidth / 2) * pxRatio, area = div.type === \"circle\"\n                ? new Circle(pos.x, pos.y, repulseRadius)\n                : new Rectangle(elem.offsetLeft * pxRatio, elem.offsetTop * pxRatio, elem.offsetWidth * pxRatio, elem.offsetHeight * pxRatio), query = container.particles.quadTree.query(area, (p) => this.isEnabled(p));\n            for (const particle of query) {\n                if (!area.contains(particle.getPosition())) {\n                    continue;\n                }\n                particle.bubble.inRange = true;\n                const divs = bubble.divs;\n                const divBubble = divMode(divs, elem);\n                if (!particle.bubble.div || particle.bubble.div !== elem) {\n                    this.clear(particle, delta, true);\n                    particle.bubble.div = elem;\n                }\n                this.hoverBubbleSize(particle, 1, divBubble);\n                this.hoverBubbleOpacity(particle, 1, divBubble);\n                this.hoverBubbleColor(particle, 1, divBubble);\n            }\n        });\n    }\n}\n","import { BubbleBase } from \"./BubbleBase\";\nimport { BubbleDiv } from \"./BubbleDiv\";\nimport { executeOnSingleOrMultiple } from \"tsparticles-engine\";\nexport class Bubble extends BubbleBase {\n    load(data) {\n        super.load(data);\n        if (!data) {\n            return;\n        }\n        this.divs = executeOnSingleOrMultiple(data.divs, (div) => {\n            const tmp = new BubbleDiv();\n            tmp.load(div);\n            return tmp;\n        });\n    }\n}\n","import { OptionsColor, executeOnSingleOrMultiple } from \"tsparticles-engine\";\nexport class BubbleBase {\n    constructor() {\n        this.distance = 200;\n        this.duration = 0.4;\n        this.mix = false;\n    }\n    load(data) {\n        if (!data) {\n            return;\n        }\n        if (data.distance !== undefined) {\n            this.distance = data.distance;\n        }\n        if (data.duration !== undefined) {\n            this.duration = data.duration;\n        }\n        if (data.mix !== undefined) {\n            this.mix = data.mix;\n        }\n        if (data.opacity !== undefined) {\n            this.opacity = data.opacity;\n        }\n        if (data.color !== undefined) {\n            const sourceColor = this.color instanceof Array ? undefined : this.color;\n            this.color = executeOnSingleOrMultiple(data.color, (color) => {\n                return OptionsColor.create(sourceColor, color);\n            });\n        }\n        if (data.size !== undefined) {\n            this.size = data.size;\n        }\n    }\n}\n","import { BubbleBase } from \"./BubbleBase\";\nimport { executeOnSingleOrMultiple } from \"tsparticles-engine\";\nexport class BubbleDiv extends BubbleBase {\n    constructor() {\n        super();\n        this.selectors = [];\n    }\n    get ids() {\n        return executeOnSingleOrMultiple(this.selectors, (t) => t.replace(\"#\", \"\"));\n    }\n    set ids(value) {\n        this.selectors = executeOnSingleOrMultiple(value, (t) => `#${t}`);\n    }\n    load(data) {\n        super.load(data);\n        if (!data) {\n            return;\n        }\n        if (data.ids !== undefined) {\n            this.ids = data.ids;\n        }\n        if (data.selectors !== undefined) {\n            this.selectors = data.selectors;\n        }\n    }\n}\n","export {};\n","export {};\n","export {};\n","import { Connector } from \"./Connector\";\nexport async function loadExternalConnectInteraction(engine) {\n    await engine.addInteractor(\"externalConnect\", (container) => new Connector(container));\n}\nexport * from \"./Options/Classes/Connect\";\nexport * from \"./Options/Classes/ConnectLinks\";\nexport * from \"./Options/Interfaces/IConnect\";\nexport * from \"./Options/Interfaces/IConnectLinks\";\n","import { ExternalInteractorBase, colorMix, drawLine, getStyleFromHsl, getStyleFromRgb, isInArray, } from \"tsparticles-engine\";\nimport { Connect } from \"./Options/Classes/Connect\";\nfunction gradient(context, p1, p2, opacity) {\n    const gradStop = Math.floor(p2.getRadius() / p1.getRadius()), color1 = p1.getFillColor(), color2 = p2.getFillColor();\n    if (!color1 || !color2) {\n        return;\n    }\n    const sourcePos = p1.getPosition(), destPos = p2.getPosition(), midRgb = colorMix(color1, color2, p1.getRadius(), p2.getRadius()), grad = context.createLinearGradient(sourcePos.x, sourcePos.y, destPos.x, destPos.y);\n    grad.addColorStop(0, getStyleFromHsl(color1, opacity));\n    grad.addColorStop(gradStop > 1 ? 1 : gradStop, getStyleFromRgb(midRgb, opacity));\n    grad.addColorStop(1, getStyleFromHsl(color2, opacity));\n    return grad;\n}\nfunction drawConnectLine(context, width, lineStyle, begin, end) {\n    drawLine(context, begin, end);\n    context.lineWidth = width;\n    context.strokeStyle = lineStyle;\n    context.stroke();\n}\nfunction lineStyle(container, ctx, p1, p2) {\n    const options = container.actualOptions, connectOptions = options.interactivity.modes.connect;\n    if (!connectOptions) {\n        return;\n    }\n    return gradient(ctx, p1, p2, connectOptions.links.opacity);\n}\nfunction drawConnection(container, p1, p2) {\n    container.canvas.draw((ctx) => {\n        var _a;\n        const ls = lineStyle(container, ctx, p1, p2);\n        if (!ls) {\n            return;\n        }\n        const pos1 = p1.getPosition(), pos2 = p2.getPosition();\n        drawConnectLine(ctx, (_a = p1.retina.linksWidth) !== null && _a !== void 0 ? _a : 0, ls, pos1, pos2);\n    });\n}\nexport class Connector extends ExternalInteractorBase {\n    constructor(container) {\n        super(container);\n    }\n    clear() {\n    }\n    init() {\n        const container = this.container, connect = container.actualOptions.interactivity.modes.connect;\n        if (!connect) {\n            return;\n        }\n        container.retina.connectModeDistance = connect.distance * container.retina.pixelRatio;\n        container.retina.connectModeRadius = connect.radius * container.retina.pixelRatio;\n    }\n    async interact() {\n        const container = this.container, options = container.actualOptions;\n        if (options.interactivity.events.onHover.enable && container.interactivity.status === \"pointermove\") {\n            const mousePos = container.interactivity.mouse.position;\n            if (!container.retina.connectModeDistance ||\n                container.retina.connectModeDistance < 0 ||\n                !container.retina.connectModeRadius ||\n                container.retina.connectModeRadius < 0 ||\n                !mousePos) {\n                return;\n            }\n            const distance = Math.abs(container.retina.connectModeRadius), query = container.particles.quadTree.queryCircle(mousePos, distance, (p) => this.isEnabled(p));\n            let i = 0;\n            for (const p1 of query) {\n                const pos1 = p1.getPosition();\n                for (const p2 of query.slice(i + 1)) {\n                    const pos2 = p2.getPosition(), distMax = Math.abs(container.retina.connectModeDistance), xDiff = Math.abs(pos1.x - pos2.x), yDiff = Math.abs(pos1.y - pos2.y);\n                    if (xDiff < distMax && yDiff < distMax) {\n                        drawConnection(container, p1, p2);\n                    }\n                }\n                ++i;\n            }\n        }\n    }\n    isEnabled(particle) {\n        var _a;\n        const container = this.container, mouse = container.interactivity.mouse, events = ((_a = particle === null || particle === void 0 ? void 0 : particle.interactivity) !== null && _a !== void 0 ? _a : container.actualOptions.interactivity).events;\n        if (!(events.onHover.enable && mouse.position)) {\n            return false;\n        }\n        return isInArray(\"connect\", events.onHover.mode);\n    }\n    loadModeOptions(options, ...sources) {\n        if (!options.connect) {\n            options.connect = new Connect();\n        }\n        for (const source of sources) {\n            options.connect.load(source === null || source === void 0 ? void 0 : source.connect);\n        }\n    }\n    reset() {\n    }\n}\n","import { ConnectLinks } from \"./ConnectLinks\";\nexport class Connect {\n    constructor() {\n        this.distance = 80;\n        this.links = new ConnectLinks();\n        this.radius = 60;\n    }\n    get lineLinked() {\n        return this.links;\n    }\n    set lineLinked(value) {\n        this.links = value;\n    }\n    get line_linked() {\n        return this.links;\n    }\n    set line_linked(value) {\n        this.links = value;\n    }\n    load(data) {\n        var _a, _b;\n        if (!data) {\n            return;\n        }\n        if (data.distance !== undefined) {\n            this.distance = data.distance;\n        }\n        this.links.load((_b = (_a = data.links) !== null && _a !== void 0 ? _a : data.lineLinked) !== null && _b !== void 0 ? _b : data.line_linked);\n        if (data.radius !== undefined) {\n            this.radius = data.radius;\n        }\n    }\n}\n","export class ConnectLinks {\n    constructor() {\n        this.opacity = 0.5;\n    }\n    load(data) {\n        if (!data) {\n            return;\n        }\n        if (data.opacity !== undefined) {\n            this.opacity = data.opacity;\n        }\n    }\n}\n","export {};\n","export {};\n","import { Grabber } from \"./Grabber\";\nexport async function loadExternalGrabInteraction(engine) {\n    await engine.addInteractor(\"externalGrab\", (container) => new Grabber(container));\n}\nexport * from \"./Options/Classes/Grab\";\nexport * from \"./Options/Classes/GrabLinks\";\nexport * from \"./Options/Interfaces/IGrab\";\nexport * from \"./Options/Interfaces/IGrabLinks\";\n","import { ExternalInteractorBase, drawLine, getDistance, getLinkColor, getLinkRandomColor, getStyleFromRgb, isInArray, mouseMoveEvent, } from \"tsparticles-engine\";\nimport { Grab } from \"./Options/Classes/Grab\";\nexport function drawGrabLine(context, width, begin, end, colorLine, opacity) {\n    drawLine(context, begin, end);\n    context.strokeStyle = getStyleFromRgb(colorLine, opacity);\n    context.lineWidth = width;\n    context.stroke();\n}\nfunction drawGrab(container, particle, lineColor, opacity, mousePos) {\n    container.canvas.draw((ctx) => {\n        var _a;\n        const beginPos = particle.getPosition();\n        drawGrabLine(ctx, (_a = particle.retina.linksWidth) !== null && _a !== void 0 ? _a : 0, beginPos, mousePos, lineColor, opacity);\n    });\n}\nexport class Grabber extends ExternalInteractorBase {\n    constructor(container) {\n        super(container);\n    }\n    clear() {\n    }\n    init() {\n        const container = this.container, grab = container.actualOptions.interactivity.modes.grab;\n        if (!grab) {\n            return;\n        }\n        container.retina.grabModeDistance = grab.distance * container.retina.pixelRatio;\n    }\n    async interact() {\n        var _a, _b;\n        const container = this.container, options = container.actualOptions, interactivity = options.interactivity;\n        if (!interactivity.modes.grab ||\n            !interactivity.events.onHover.enable ||\n            container.interactivity.status !== mouseMoveEvent) {\n            return;\n        }\n        const mousePos = container.interactivity.mouse.position;\n        if (!mousePos) {\n            return;\n        }\n        const distance = container.retina.grabModeDistance;\n        if (!distance || distance < 0) {\n            return;\n        }\n        const query = container.particles.quadTree.queryCircle(mousePos, distance, (p) => this.isEnabled(p));\n        for (const particle of query) {\n            const pos = particle.getPosition(), pointDistance = getDistance(pos, mousePos);\n            if (pointDistance > distance) {\n                continue;\n            }\n            const grabLineOptions = interactivity.modes.grab.links, lineOpacity = grabLineOptions.opacity, opacityLine = lineOpacity - (pointDistance * lineOpacity) / distance;\n            if (opacityLine <= 0) {\n                continue;\n            }\n            const optColor = (_a = grabLineOptions.color) !== null && _a !== void 0 ? _a : (_b = particle.options.links) === null || _b === void 0 ? void 0 : _b.color;\n            if (!container.particles.grabLineColor && optColor) {\n                const linksOptions = interactivity.modes.grab.links;\n                container.particles.grabLineColor = getLinkRandomColor(optColor, linksOptions.blink, linksOptions.consent);\n            }\n            const colorLine = getLinkColor(particle, undefined, container.particles.grabLineColor);\n            if (!colorLine) {\n                return;\n            }\n            drawGrab(container, particle, colorLine, opacityLine, mousePos);\n        }\n    }\n    isEnabled(particle) {\n        var _a;\n        const container = this.container, mouse = container.interactivity.mouse, events = ((_a = particle === null || particle === void 0 ? void 0 : particle.interactivity) !== null && _a !== void 0 ? _a : container.actualOptions.interactivity).events;\n        return events.onHover.enable && !!mouse.position && isInArray(\"grab\", events.onHover.mode);\n    }\n    loadModeOptions(options, ...sources) {\n        if (!options.grab) {\n            options.grab = new Grab();\n        }\n        for (const source of sources) {\n            options.grab.load(source === null || source === void 0 ? void 0 : source.grab);\n        }\n    }\n    reset() {\n    }\n}\n","import { GrabLinks } from \"./GrabLinks\";\nexport class Grab {\n    constructor() {\n        this.distance = 100;\n        this.links = new GrabLinks();\n    }\n    get lineLinked() {\n        return this.links;\n    }\n    set lineLinked(value) {\n        this.links = value;\n    }\n    get line_linked() {\n        return this.links;\n    }\n    set line_linked(value) {\n        this.links = value;\n    }\n    load(data) {\n        var _a, _b;\n        if (!data) {\n            return;\n        }\n        if (data.distance !== undefined) {\n            this.distance = data.distance;\n        }\n        this.links.load((_b = (_a = data.links) !== null && _a !== void 0 ? _a : data.lineLinked) !== null && _b !== void 0 ? _b : data.line_linked);\n    }\n}\n","import { OptionsColor } from \"tsparticles-engine\";\nexport class GrabLinks {\n    constructor() {\n        this.blink = false;\n        this.consent = false;\n        this.opacity = 1;\n    }\n    load(data) {\n        if (!data) {\n            return;\n        }\n        if (data.blink !== undefined) {\n            this.blink = data.blink;\n        }\n        if (data.color !== undefined) {\n            this.color = OptionsColor.create(this.color, data.color);\n        }\n        if (data.consent !== undefined) {\n            this.consent = data.consent;\n        }\n        if (data.opacity !== undefined) {\n            this.opacity = data.opacity;\n        }\n    }\n}\n","export {};\n","export {};\n","import { Pauser } from \"./Pauser\";\nexport function loadExternalPauseInteraction(engine) {\n    engine.addInteractor(\"externalPause\", (container) => new Pauser(container));\n}\n","import { ExternalInteractorBase } from \"tsparticles-engine\";\nexport class Pauser extends ExternalInteractorBase {\n    constructor(container) {\n        super(container);\n        this.handleClickMode = (mode) => {\n            if (mode !== \"pause\") {\n                return;\n            }\n            const container = this.container;\n            if (container.getAnimationStatus()) {\n                container.pause();\n            }\n            else {\n                container.play();\n            }\n        };\n    }\n    clear() {\n    }\n    init() {\n    }\n    async interact() {\n    }\n    isEnabled() {\n        return true;\n    }\n    reset() {\n    }\n}\n","import { Pusher } from \"./Pusher\";\nexport async function loadExternalPushInteraction(engine) {\n    await engine.addInteractor(\"externalPush\", (container) => new Pusher(container));\n}\nexport * from \"./Options/Classes/Push\";\nexport * from \"./Options/Interfaces/IPush\";\n","import { ExternalInteractorBase } from \"tsparticles-engine\";\nimport { Push } from \"./Options/Classes/Push\";\nimport { itemFromArray } from \"tsparticles-engine\";\nexport class Pusher extends ExternalInteractorBase {\n    constructor(container) {\n        super(container);\n        this.handleClickMode = (mode) => {\n            if (mode !== \"push\") {\n                return;\n            }\n            const container = this.container, options = container.actualOptions, pushOptions = options.interactivity.modes.push;\n            if (!pushOptions) {\n                return;\n            }\n            const pushNb = pushOptions.quantity;\n            if (pushNb <= 0) {\n                return;\n            }\n            const group = itemFromArray([undefined, ...pushOptions.groups]), groupOptions = group !== undefined ? container.actualOptions.particles.groups[group] : undefined;\n            container.particles.push(pushNb, container.interactivity.mouse, groupOptions, group);\n        };\n    }\n    clear() {\n    }\n    init() {\n    }\n    async interact() {\n    }\n    isEnabled() {\n        return true;\n    }\n    loadModeOptions(options, ...sources) {\n        if (!options.push) {\n            options.push = new Push();\n        }\n        for (const source of sources) {\n            options.push.load(source === null || source === void 0 ? void 0 : source.push);\n        }\n    }\n    reset() {\n    }\n}\n","export class Push {\n    constructor() {\n        this.default = true;\n        this.groups = [];\n        this.quantity = 4;\n    }\n    get particles_nb() {\n        return this.quantity;\n    }\n    set particles_nb(value) {\n        this.quantity = value;\n    }\n    load(data) {\n        var _a;\n        if (!data) {\n            return;\n        }\n        if (data.default !== undefined) {\n            this.default = data.default;\n        }\n        if (data.groups !== undefined) {\n            this.groups = data.groups.map((t) => t);\n        }\n        if (!this.groups.length) {\n            this.default = true;\n        }\n        const quantity = (_a = data.quantity) !== null && _a !== void 0 ? _a : data.particles_nb;\n        if (quantity !== undefined) {\n            this.quantity = quantity;\n        }\n    }\n}\n","export {};\n","import { Remover } from \"./Remover\";\nexport function loadExternalRemoveInteraction(engine) {\n    engine.addInteractor(\"externalRemove\", (container) => new Remover(container));\n}\nexport * from \"./Options/Classes/Remove\";\nexport * from \"./Options/Interfaces/IRemove\";\n","import { ExternalInteractorBase } from \"tsparticles-engine\";\nimport { Remove } from \"./Options/Classes/Remove\";\nexport class Remover extends ExternalInteractorBase {\n    constructor(container) {\n        super(container);\n        this.handleClickMode = (mode) => {\n            const container = this.container, options = container.actualOptions;\n            if (!options.interactivity.modes.remove || mode !== \"remove\") {\n                return;\n            }\n            const removeNb = options.interactivity.modes.remove.quantity;\n            container.particles.removeQuantity(removeNb);\n        };\n    }\n    clear() {\n    }\n    init() {\n    }\n    async interact() {\n    }\n    isEnabled() {\n        return true;\n    }\n    loadModeOptions(options, ...sources) {\n        if (!options.remove) {\n            options.remove = new Remove();\n        }\n        for (const source of sources) {\n            options.remove.load(source === null || source === void 0 ? void 0 : source.remove);\n        }\n    }\n    reset() {\n    }\n}\n","export class Remove {\n    constructor() {\n        this.quantity = 2;\n    }\n    get particles_nb() {\n        return this.quantity;\n    }\n    set particles_nb(value) {\n        this.quantity = value;\n    }\n    load(data) {\n        var _a;\n        if (!data) {\n            return;\n        }\n        const quantity = (_a = data.quantity) !== null && _a !== void 0 ? _a : data.particles_nb;\n        if (quantity !== undefined) {\n            this.quantity = quantity;\n        }\n    }\n}\n","export {};\n","import { Repulser } from \"./Repulser\";\nexport async function loadExternalRepulseInteraction(engine) {\n    await engine.addInteractor(\"externalRepulse\", (container) => new Repulser(engine, container));\n}\nexport * from \"./Options/Classes/RepulseBase\";\nexport * from \"./Options/Classes/RepulseDiv\";\nexport * from \"./Options/Classes/Repulse\";\nexport * from \"./Options/Interfaces/IRepulseBase\";\nexport * from \"./Options/Interfaces/IRepulseDiv\";\nexport * from \"./Options/Interfaces/IRepulse\";\n","import { Circle, ExternalInteractorBase, Rectangle, Vector, clamp, divMode, divModeExecute, getDistances, getEasing, isDivModeEnabled, isInArray, mouseMoveEvent, } from \"tsparticles-engine\";\nimport { Repulse } from \"./Options/Classes/Repulse\";\nexport class Repulser extends ExternalInteractorBase {\n    constructor(engine, container) {\n        super(container);\n        this._engine = engine;\n        if (!container.repulse) {\n            container.repulse = { particles: [] };\n        }\n        this.handleClickMode = (mode) => {\n            const options = this.container.actualOptions, repulse = options.interactivity.modes.repulse;\n            if (!repulse || mode !== \"repulse\") {\n                return;\n            }\n            if (!container.repulse) {\n                container.repulse = { particles: [] };\n            }\n            container.repulse.clicking = true;\n            container.repulse.count = 0;\n            for (const particle of container.repulse.particles) {\n                if (!this.isEnabled(particle)) {\n                    continue;\n                }\n                particle.velocity.setTo(particle.initialVelocity);\n            }\n            container.repulse.particles = [];\n            container.repulse.finish = false;\n            setTimeout(() => {\n                if (!container.destroyed) {\n                    if (!container.repulse) {\n                        container.repulse = { particles: [] };\n                    }\n                    container.repulse.clicking = false;\n                }\n            }, repulse.duration * 1000);\n        };\n    }\n    clear() {\n    }\n    init() {\n        const container = this.container, repulse = container.actualOptions.interactivity.modes.repulse;\n        if (!repulse) {\n            return;\n        }\n        container.retina.repulseModeDistance = repulse.distance * container.retina.pixelRatio;\n    }\n    async interact() {\n        const container = this.container, options = container.actualOptions, mouseMoveStatus = container.interactivity.status === mouseMoveEvent, events = options.interactivity.events, hoverEnabled = events.onHover.enable, hoverMode = events.onHover.mode, clickEnabled = events.onClick.enable, clickMode = events.onClick.mode, divs = events.onDiv;\n        if (mouseMoveStatus && hoverEnabled && isInArray(\"repulse\", hoverMode)) {\n            this.hoverRepulse();\n        }\n        else if (clickEnabled && isInArray(\"repulse\", clickMode)) {\n            this.clickRepulse();\n        }\n        else {\n            divModeExecute(\"repulse\", divs, (selector, div) => this.singleSelectorRepulse(selector, div));\n        }\n    }\n    isEnabled(particle) {\n        var _a;\n        const container = this.container, options = container.actualOptions, mouse = container.interactivity.mouse, events = ((_a = particle === null || particle === void 0 ? void 0 : particle.interactivity) !== null && _a !== void 0 ? _a : options.interactivity).events, divs = events.onDiv, divRepulse = isDivModeEnabled(\"repulse\", divs);\n        if (!(divRepulse || (events.onHover.enable && mouse.position) || (events.onClick.enable && mouse.clickPosition))) {\n            return false;\n        }\n        const hoverMode = events.onHover.mode, clickMode = events.onClick.mode;\n        return isInArray(\"repulse\", hoverMode) || isInArray(\"repulse\", clickMode) || divRepulse;\n    }\n    loadModeOptions(options, ...sources) {\n        if (!options.repulse) {\n            options.repulse = new Repulse();\n        }\n        for (const source of sources) {\n            options.repulse.load(source === null || source === void 0 ? void 0 : source.repulse);\n        }\n    }\n    reset() {\n    }\n    clickRepulse() {\n        const container = this.container, repulse = container.actualOptions.interactivity.modes.repulse;\n        if (!repulse) {\n            return;\n        }\n        if (!container.repulse) {\n            container.repulse = { particles: [] };\n        }\n        if (!container.repulse.finish) {\n            if (!container.repulse.count) {\n                container.repulse.count = 0;\n            }\n            container.repulse.count++;\n            if (container.repulse.count === container.particles.count) {\n                container.repulse.finish = true;\n            }\n        }\n        if (container.repulse.clicking) {\n            const repulseDistance = container.retina.repulseModeDistance;\n            if (!repulseDistance || repulseDistance < 0) {\n                return;\n            }\n            const repulseRadius = Math.pow(repulseDistance / 6, 3), mouseClickPos = container.interactivity.mouse.clickPosition;\n            if (mouseClickPos === undefined) {\n                return;\n            }\n            const range = new Circle(mouseClickPos.x, mouseClickPos.y, repulseRadius), query = container.particles.quadTree.query(range, (p) => this.isEnabled(p));\n            for (const particle of query) {\n                const { dx, dy, distance } = getDistances(mouseClickPos, particle.position), d = distance ** 2, velocity = repulse.speed, force = (-repulseRadius * velocity) / d;\n                if (d <= repulseRadius) {\n                    container.repulse.particles.push(particle);\n                    const vect = Vector.create(dx, dy);\n                    vect.length = force;\n                    particle.velocity.setTo(vect);\n                }\n            }\n        }\n        else if (container.repulse.clicking === false) {\n            for (const particle of container.repulse.particles) {\n                particle.velocity.setTo(particle.initialVelocity);\n            }\n            container.repulse.particles = [];\n        }\n    }\n    hoverRepulse() {\n        const container = this.container, mousePos = container.interactivity.mouse.position, repulseRadius = container.retina.repulseModeDistance;\n        if (!repulseRadius || repulseRadius < 0 || !mousePos) {\n            return;\n        }\n        this.processRepulse(mousePos, repulseRadius, new Circle(mousePos.x, mousePos.y, repulseRadius));\n    }\n    processRepulse(position, repulseRadius, area, divRepulse) {\n        var _a;\n        const container = this.container, query = container.particles.quadTree.query(area, (p) => this.isEnabled(p)), repulseOptions = container.actualOptions.interactivity.modes.repulse;\n        if (!repulseOptions) {\n            return;\n        }\n        for (const particle of query) {\n            const { dx, dy, distance } = getDistances(particle.position, position), velocity = ((_a = divRepulse === null || divRepulse === void 0 ? void 0 : divRepulse.speed) !== null && _a !== void 0 ? _a : repulseOptions.speed) * repulseOptions.factor, repulseFactor = clamp(getEasing(repulseOptions.easing)(1 - distance / repulseRadius) * velocity, 0, repulseOptions.maxSpeed), normVec = Vector.create(distance === 0 ? velocity : (dx / distance) * repulseFactor, distance === 0 ? velocity : (dy / distance) * repulseFactor);\n            particle.position.addTo(normVec);\n        }\n    }\n    singleSelectorRepulse(selector, div) {\n        const container = this.container, repulse = container.actualOptions.interactivity.modes.repulse;\n        if (!repulse) {\n            return;\n        }\n        const query = document.querySelectorAll(selector);\n        if (!query.length) {\n            return;\n        }\n        query.forEach((item) => {\n            const elem = item, pxRatio = container.retina.pixelRatio, pos = {\n                x: (elem.offsetLeft + elem.offsetWidth / 2) * pxRatio,\n                y: (elem.offsetTop + elem.offsetHeight / 2) * pxRatio,\n            }, repulseRadius = (elem.offsetWidth / 2) * pxRatio, area = div.type === \"circle\"\n                ? new Circle(pos.x, pos.y, repulseRadius)\n                : new Rectangle(elem.offsetLeft * pxRatio, elem.offsetTop * pxRatio, elem.offsetWidth * pxRatio, elem.offsetHeight * pxRatio), divs = repulse.divs, divRepulse = divMode(divs, elem);\n            this.processRepulse(pos, repulseRadius, area, divRepulse);\n        });\n    }\n}\n","import { RepulseBase } from \"./RepulseBase\";\nimport { RepulseDiv } from \"./RepulseDiv\";\nimport { executeOnSingleOrMultiple } from \"tsparticles-engine\";\nexport class Repulse extends RepulseBase {\n    load(data) {\n        super.load(data);\n        if (!data) {\n            return;\n        }\n        this.divs = executeOnSingleOrMultiple(data.divs, (div) => {\n            const tmp = new RepulseDiv();\n            tmp.load(div);\n            return tmp;\n        });\n    }\n}\n","export class RepulseBase {\n    constructor() {\n        this.distance = 200;\n        this.duration = 0.4;\n        this.factor = 100;\n        this.speed = 1;\n        this.maxSpeed = 50;\n        this.easing = \"ease-out-quad\";\n    }\n    load(data) {\n        if (!data) {\n            return;\n        }\n        if (data.distance !== undefined) {\n            this.distance = data.distance;\n        }\n        if (data.duration !== undefined) {\n            this.duration = data.duration;\n        }\n        if (data.easing !== undefined) {\n            this.easing = data.easing;\n        }\n        if (data.factor !== undefined) {\n            this.factor = data.factor;\n        }\n        if (data.speed !== undefined) {\n            this.speed = data.speed;\n        }\n        if (data.maxSpeed !== undefined) {\n            this.maxSpeed = data.maxSpeed;\n        }\n    }\n}\n","import { RepulseBase } from \"./RepulseBase\";\nimport { executeOnSingleOrMultiple } from \"tsparticles-engine\";\nexport class RepulseDiv extends RepulseBase {\n    constructor() {\n        super();\n        this.selectors = [];\n    }\n    get ids() {\n        return executeOnSingleOrMultiple(this.selectors, (t) => t.replace(\"#\", \"\"));\n    }\n    set ids(value) {\n        this.selectors = executeOnSingleOrMultiple(value, (t) => `#${t}`);\n    }\n    load(data) {\n        super.load(data);\n        if (!data) {\n            return;\n        }\n        if (data.ids !== undefined) {\n            this.ids = data.ids;\n        }\n        if (data.selectors !== undefined) {\n            this.selectors = data.selectors;\n        }\n    }\n}\n","export {};\n","export {};\n","export {};\n","import { Slower } from \"./Slower\";\nexport async function loadExternalSlowInteraction(engine) {\n    await engine.addInteractor(\"externalSlow\", (container) => new Slower(container));\n}\nexport * from \"./Options/Classes/Slow\";\nexport * from \"./Options/Interfaces/ISlow\";\n","import { ExternalInteractorBase, getDistance, isInArray } from \"tsparticles-engine\";\nimport { Slow } from \"./Options/Classes/Slow\";\nexport class Slower extends ExternalInteractorBase {\n    constructor(container) {\n        super(container);\n    }\n    clear(particle, delta, force) {\n        if (particle.slow.inRange && !force) {\n            return;\n        }\n        particle.slow.factor = 1;\n    }\n    init() {\n        const container = this.container, slow = container.actualOptions.interactivity.modes.slow;\n        if (!slow) {\n            return;\n        }\n        container.retina.slowModeRadius = slow.radius * container.retina.pixelRatio;\n    }\n    async interact() {\n    }\n    isEnabled(particle) {\n        var _a;\n        const container = this.container, mouse = container.interactivity.mouse, events = ((_a = particle === null || particle === void 0 ? void 0 : particle.interactivity) !== null && _a !== void 0 ? _a : container.actualOptions.interactivity).events;\n        return events.onHover.enable && !!mouse.position && isInArray(\"slow\", events.onHover.mode);\n    }\n    loadModeOptions(options, ...sources) {\n        if (!options.slow) {\n            options.slow = new Slow();\n        }\n        for (const source of sources) {\n            options.slow.load(source === null || source === void 0 ? void 0 : source.slow);\n        }\n    }\n    reset(particle) {\n        particle.slow.inRange = false;\n        const container = this.container, options = container.actualOptions, mousePos = container.interactivity.mouse.position, radius = container.retina.slowModeRadius, slow = options.interactivity.modes.slow;\n        if (!slow || !radius || radius < 0 || !mousePos) {\n            return;\n        }\n        const particlePos = particle.getPosition(), dist = getDistance(mousePos, particlePos), proximityFactor = dist / radius, slowFactor = slow.factor;\n        if (dist <= radius) {\n            particle.slow.inRange = true;\n            particle.slow.factor = proximityFactor / slowFactor;\n        }\n    }\n}\n","export class Slow {\n    constructor() {\n        this.factor = 3;\n        this.radius = 200;\n    }\n    load(data) {\n        if (!data) {\n            return;\n        }\n        if (data.factor !== undefined) {\n            this.factor = data.factor;\n        }\n        if (data.radius !== undefined) {\n            this.radius = data.radius;\n        }\n    }\n}\n","export {};\n","import { ImageDrawer } from \"./ImageDrawer\";\nexport async function loadImageShape(engine) {\n    await engine.addShape([\"image\", \"images\"], new ImageDrawer());\n}\n","import { downloadSvgImage, loadImage, replaceImageColor } from \"./Utils\";\nexport class ImageDrawer {\n    constructor() {\n        this._images = [];\n    }\n    addImage(container, image) {\n        const containerImages = this.getImages(container);\n        containerImages === null || containerImages === void 0 ? void 0 : containerImages.images.push(image);\n    }\n    destroy() {\n        this._images = [];\n    }\n    draw(context, particle, radius, opacity) {\n        var _a;\n        const image = particle.image, element = image === null || image === void 0 ? void 0 : image.element;\n        if (!element) {\n            return;\n        }\n        const ratio = (_a = image === null || image === void 0 ? void 0 : image.ratio) !== null && _a !== void 0 ? _a : 1, pos = {\n            x: -radius,\n            y: -radius,\n        };\n        context.globalAlpha = opacity;\n        context.drawImage(element, pos.x, pos.y, radius * 2, (radius * 2) / ratio);\n        context.globalAlpha = 1;\n    }\n    getImages(container) {\n        const containerImages = this._images.find((t) => t.id === container.id);\n        if (!containerImages) {\n            this._images.push({\n                id: container.id,\n                images: [],\n            });\n            return this.getImages(container);\n        }\n        else {\n            return containerImages;\n        }\n    }\n    getSidesCount() {\n        return 12;\n    }\n    loadShape(particle) {\n        if (particle.shape !== \"image\" && particle.shape !== \"images\") {\n            return;\n        }\n        const container = particle.container, images = this.getImages(container).images, imageData = particle.shapeData, image = images.find((t) => t.source === imageData.src);\n        if (!image) {\n            this.loadImageShape(container, imageData).then(() => {\n                this.loadShape(particle);\n            });\n        }\n    }\n    particleInit(container, particle) {\n        var _a;\n        if (particle.shape !== \"image\" && particle.shape !== \"images\") {\n            return;\n        }\n        const images = this.getImages(container).images, imageData = particle.shapeData, color = particle.getFillColor(), replaceColor = (_a = imageData.replaceColor) !== null && _a !== void 0 ? _a : imageData.replace_color, image = images.find((t) => t.source === imageData.src);\n        if (!image) {\n            return;\n        }\n        if (image.loading) {\n            setTimeout(() => {\n                this.particleInit(container, particle);\n            });\n            return;\n        }\n        (async () => {\n            var _a, _b;\n            let imageRes;\n            if (image.svgData && color) {\n                imageRes = await replaceImageColor(image, imageData, color, particle);\n            }\n            else {\n                imageRes = {\n                    color,\n                    data: image,\n                    element: image.element,\n                    loaded: true,\n                    ratio: imageData.width / imageData.height,\n                    replaceColor: replaceColor,\n                    source: imageData.src,\n                };\n            }\n            if (!imageRes.ratio) {\n                imageRes.ratio = 1;\n            }\n            const fill = (_a = imageData.fill) !== null && _a !== void 0 ? _a : particle.fill, close = (_b = imageData.close) !== null && _b !== void 0 ? _b : particle.close, imageShape = {\n                image: imageRes,\n                fill,\n                close,\n            };\n            particle.image = imageShape.image;\n            particle.fill = imageShape.fill;\n            particle.close = imageShape.close;\n        })();\n    }\n    async loadImageShape(container, imageShape) {\n        var _a;\n        const source = imageShape.src;\n        if (!source) {\n            throw new Error(\"Error tsParticles - No image.src\");\n        }\n        try {\n            const image = {\n                source: source,\n                type: source.substring(source.length - 3),\n                error: false,\n                loading: true,\n            };\n            this.addImage(container, image);\n            const imageFunc = ((_a = imageShape.replaceColor) !== null && _a !== void 0 ? _a : imageShape.replace_color) ? downloadSvgImage : loadImage;\n            await imageFunc(image);\n        }\n        catch (_b) {\n            throw new Error(`tsParticles error - ${imageShape.src} not found`);\n        }\n    }\n}\n","import { getStyleFromHsl } from \"tsparticles-engine\";\nconst currentColorRegex = /(#(?:[0-9a-f]{2}){2,4}|(#[0-9a-f]{3})|(rgb|hsl)a?\\((-?\\d+%?[,\\s]+){2,3}\\s*[\\d.]+%?\\))|currentcolor/gi;\nfunction replaceColorSvg(imageShape, color, opacity) {\n    const { svgData } = imageShape;\n    if (!svgData) {\n        return \"\";\n    }\n    const colorStyle = getStyleFromHsl(color, opacity);\n    if (svgData.includes(\"fill\")) {\n        return svgData.replace(currentColorRegex, () => colorStyle);\n    }\n    const preFillIndex = svgData.indexOf(\">\");\n    return `${svgData.substring(0, preFillIndex)} fill=\"${colorStyle}\"${svgData.substring(preFillIndex)}`;\n}\nexport async function loadImage(image) {\n    return new Promise((resolve) => {\n        image.loading = true;\n        const img = new Image();\n        image.element = img;\n        img.addEventListener(\"load\", () => {\n            image.loading = false;\n            resolve();\n        });\n        img.addEventListener(\"error\", () => {\n            image.element = undefined;\n            image.error = true;\n            image.loading = false;\n            console.error(`Error tsParticles - loading image: ${image.source}`);\n            resolve();\n        });\n        img.src = image.source;\n    });\n}\nexport async function downloadSvgImage(image) {\n    if (image.type !== \"svg\") {\n        await loadImage(image);\n        return;\n    }\n    image.loading = true;\n    const response = await fetch(image.source);\n    if (!response.ok) {\n        console.error(\"Error tsParticles - Image not found\");\n        image.error = true;\n    }\n    if (!image.error) {\n        image.svgData = await response.text();\n    }\n    image.loading = false;\n}\nexport function replaceImageColor(image, imageData, color, particle) {\n    var _a, _b, _c;\n    const svgColoredData = replaceColorSvg(image, color, (_b = (_a = particle.opacity) === null || _a === void 0 ? void 0 : _a.value) !== null && _b !== void 0 ? _b : 1), imageRes = {\n        color,\n        data: Object.assign(Object.assign({}, image), { svgData: svgColoredData }),\n        loaded: false,\n        ratio: imageData.width / imageData.height,\n        replaceColor: (_c = imageData.replaceColor) !== null && _c !== void 0 ? _c : imageData.replace_color,\n        source: imageData.src,\n    };\n    return new Promise((resolve) => {\n        const svg = new Blob([svgColoredData], { type: \"image/svg+xml\" }), domUrl = URL || window.URL || window.webkitURL || window, url = domUrl.createObjectURL(svg), img = new Image();\n        img.addEventListener(\"load\", () => {\n            imageRes.loaded = true;\n            imageRes.element = img;\n            resolve(imageRes);\n            domUrl.revokeObjectURL(url);\n        });\n        img.addEventListener(\"error\", async () => {\n            domUrl.revokeObjectURL(url);\n            const img2 = Object.assign(Object.assign({}, image), { error: false, loading: true });\n            await loadImage(img2);\n            imageRes.loaded = true;\n            imageRes.element = img2.element;\n            resolve(imageRes);\n        });\n        img.src = url;\n    });\n}\n","import { LifeUpdater } from \"./LifeUpdater\";\nexport async function loadLifeUpdater(engine) {\n    await engine.addParticleUpdater(\"life\", (container) => new LifeUpdater(container));\n}\n","import { getRandom, getRangeValue, randomInRange, setRangeValue } from \"tsparticles-engine\";\nimport { Life } from \"./Options/Classes/Life\";\nexport class LifeUpdater {\n    constructor(container) {\n        this.container = container;\n    }\n    init(particle) {\n        const container = this.container, particlesOptions = particle.options, lifeOptions = particlesOptions.life;\n        if (!lifeOptions) {\n            return;\n        }\n        particle.life = {\n            delay: container.retina.reduceFactor\n                ? ((getRangeValue(lifeOptions.delay.value) * (lifeOptions.delay.sync ? 1 : getRandom())) /\n                    container.retina.reduceFactor) *\n                    1000\n                : 0,\n            delayTime: 0,\n            duration: container.retina.reduceFactor\n                ? ((getRangeValue(lifeOptions.duration.value) * (lifeOptions.duration.sync ? 1 : getRandom())) /\n                    container.retina.reduceFactor) *\n                    1000\n                : 0,\n            time: 0,\n            count: lifeOptions.count,\n        };\n        if (particle.life.duration <= 0) {\n            particle.life.duration = -1;\n        }\n        if (particle.life.count <= 0) {\n            particle.life.count = -1;\n        }\n        if (particle.life) {\n            particle.spawning = particle.life.delay > 0;\n        }\n    }\n    isEnabled(particle) {\n        return !particle.destroyed;\n    }\n    loadOptions(options, ...sources) {\n        if (!options.life) {\n            options.life = new Life();\n        }\n        for (const source of sources) {\n            options.life.load(source === null || source === void 0 ? void 0 : source.life);\n        }\n    }\n    update(particle, delta) {\n        if (!this.isEnabled(particle) || !particle.life) {\n            return;\n        }\n        const life = particle.life;\n        let justSpawned = false;\n        if (particle.spawning) {\n            life.delayTime += delta.value;\n            if (life.delayTime >= particle.life.delay) {\n                justSpawned = true;\n                particle.spawning = false;\n                life.delayTime = 0;\n                life.time = 0;\n            }\n            else {\n                return;\n            }\n        }\n        if (life.duration === -1) {\n            return;\n        }\n        if (particle.spawning) {\n            return;\n        }\n        if (justSpawned) {\n            life.time = 0;\n        }\n        else {\n            life.time += delta.value;\n        }\n        if (life.time < life.duration) {\n            return;\n        }\n        life.time = 0;\n        if (particle.life.count > 0) {\n            particle.life.count--;\n        }\n        if (particle.life.count === 0) {\n            particle.destroy();\n            return;\n        }\n        const canvasSize = this.container.canvas.size, widthRange = setRangeValue(0, canvasSize.width), heightRange = setRangeValue(0, canvasSize.width);\n        particle.position.x = randomInRange(widthRange);\n        particle.position.y = randomInRange(heightRange);\n        particle.spawning = true;\n        life.delayTime = 0;\n        life.time = 0;\n        particle.reset();\n        const lifeOptions = particle.options.life;\n        if (lifeOptions) {\n            life.delay = getRangeValue(lifeOptions.delay.value) * 1000;\n            life.duration = getRangeValue(lifeOptions.duration.value) * 1000;\n        }\n    }\n}\n","import { LifeDelay } from \"./LifeDelay\";\nimport { LifeDuration } from \"./LifeDuration\";\nexport class Life {\n    constructor() {\n        this.count = 0;\n        this.delay = new LifeDelay();\n        this.duration = new LifeDuration();\n    }\n    load(data) {\n        if (!data) {\n            return;\n        }\n        if (data.count !== undefined) {\n            this.count = data.count;\n        }\n        this.delay.load(data.delay);\n        this.duration.load(data.duration);\n    }\n}\n","import { ValueWithRandom } from \"tsparticles-engine\";\nexport class LifeDelay extends ValueWithRandom {\n    constructor() {\n        super();\n        this.sync = false;\n    }\n    load(data) {\n        if (!data) {\n            return;\n        }\n        super.load(data);\n        if (data.sync !== undefined) {\n            this.sync = data.sync;\n        }\n    }\n}\n","import { ValueWithRandom } from \"tsparticles-engine\";\nexport class LifeDuration extends ValueWithRandom {\n    constructor() {\n        super();\n        this.random.minimumValue = 0.0001;\n        this.sync = false;\n    }\n    load(data) {\n        if (!data) {\n            return;\n        }\n        super.load(data);\n        if (data.sync !== undefined) {\n            this.sync = data.sync;\n        }\n    }\n}\n","import { LineDrawer } from \"./LineDrawer\";\nexport async function loadLineShape(engine) {\n    await engine.addShape(\"line\", new LineDrawer());\n}\n","export class LineDrawer {\n    draw(context, particle, radius) {\n        context.moveTo(-radius / 2, 0);\n        context.lineTo(radius / 2, 0);\n    }\n    getSidesCount() {\n        return 1;\n    }\n}\n","import { OpacityUpdater } from \"./OpacityUpdater\";\nexport async function loadOpacityUpdater(engine) {\n    await engine.addParticleUpdater(\"opacity\", (container) => new OpacityUpdater(container));\n}\n","import { clamp, getRandom, getRangeMax, getRangeMin, getRangeValue, randomInRange, } from \"tsparticles-engine\";\nfunction checkDestroy(particle, value, minValue, maxValue) {\n    switch (particle.options.opacity.animation.destroy) {\n        case \"max\":\n            if (value >= maxValue) {\n                particle.destroy();\n            }\n            break;\n        case \"min\":\n            if (value <= minValue) {\n                particle.destroy();\n            }\n            break;\n    }\n}\nfunction updateOpacity(particle, delta) {\n    var _a, _b, _c, _d, _e, _f;\n    if (!particle.opacity) {\n        return;\n    }\n    const minValue = particle.opacity.min, maxValue = particle.opacity.max, decay = (_a = particle.opacity.decay) !== null && _a !== void 0 ? _a : 1;\n    if (particle.destroyed ||\n        !particle.opacity.enable ||\n        (((_b = particle.opacity.maxLoops) !== null && _b !== void 0 ? _b : 0) > 0 && ((_c = particle.opacity.loops) !== null && _c !== void 0 ? _c : 0) > ((_d = particle.opacity.maxLoops) !== null && _d !== void 0 ? _d : 0))) {\n        return;\n    }\n    switch (particle.opacity.status) {\n        case \"increasing\":\n            if (particle.opacity.value >= maxValue) {\n                particle.opacity.status = \"decreasing\";\n                if (!particle.opacity.loops) {\n                    particle.opacity.loops = 0;\n                }\n                particle.opacity.loops++;\n            }\n            else {\n                particle.opacity.value += ((_e = particle.opacity.velocity) !== null && _e !== void 0 ? _e : 0) * delta.factor;\n            }\n            break;\n        case \"decreasing\":\n            if (particle.opacity.value <= minValue) {\n                particle.opacity.status = \"increasing\";\n                if (!particle.opacity.loops) {\n                    particle.opacity.loops = 0;\n                }\n                particle.opacity.loops++;\n            }\n            else {\n                particle.opacity.value -= ((_f = particle.opacity.velocity) !== null && _f !== void 0 ? _f : 0) * delta.factor;\n            }\n            break;\n    }\n    if (particle.opacity.velocity && particle.opacity.decay !== 1) {\n        particle.opacity.velocity *= decay;\n    }\n    checkDestroy(particle, particle.opacity.value, minValue, maxValue);\n    if (!particle.destroyed) {\n        particle.opacity.value = clamp(particle.opacity.value, minValue, maxValue);\n    }\n}\nexport class OpacityUpdater {\n    constructor(container) {\n        this.container = container;\n    }\n    init(particle) {\n        const opacityOptions = particle.options.opacity;\n        particle.opacity = {\n            enable: opacityOptions.animation.enable,\n            max: getRangeMax(opacityOptions.value),\n            min: getRangeMin(opacityOptions.value),\n            value: getRangeValue(opacityOptions.value),\n            loops: 0,\n            maxLoops: getRangeValue(opacityOptions.animation.count),\n        };\n        const opacityAnimation = opacityOptions.animation;\n        if (opacityAnimation.enable) {\n            particle.opacity.decay = 1 - getRangeValue(opacityAnimation.decay);\n            particle.opacity.status = \"increasing\";\n            const opacityRange = opacityOptions.value;\n            particle.opacity.min = getRangeMin(opacityRange);\n            particle.opacity.max = getRangeMax(opacityRange);\n            switch (opacityAnimation.startValue) {\n                case \"min\":\n                    particle.opacity.value = particle.opacity.min;\n                    particle.opacity.status = \"increasing\";\n                    break;\n                case \"random\":\n                    particle.opacity.value = randomInRange(particle.opacity);\n                    particle.opacity.status =\n                        getRandom() >= 0.5 ? \"increasing\" : \"decreasing\";\n                    break;\n                case \"max\":\n                default:\n                    particle.opacity.value = particle.opacity.max;\n                    particle.opacity.status = \"decreasing\";\n                    break;\n            }\n            particle.opacity.velocity =\n                (getRangeValue(opacityAnimation.speed) / 100) * this.container.retina.reduceFactor;\n            if (!opacityAnimation.sync) {\n                particle.opacity.velocity *= getRandom();\n            }\n        }\n        particle.opacity.initialValue = particle.opacity.value;\n    }\n    isEnabled(particle) {\n        var _a, _b, _c, _d;\n        return (!particle.destroyed &&\n            !particle.spawning &&\n            !!particle.opacity &&\n            particle.opacity.enable &&\n            (((_a = particle.opacity.maxLoops) !== null && _a !== void 0 ? _a : 0) <= 0 ||\n                (((_b = particle.opacity.maxLoops) !== null && _b !== void 0 ? _b : 0) > 0 &&\n                    ((_c = particle.opacity.loops) !== null && _c !== void 0 ? _c : 0) < ((_d = particle.opacity.maxLoops) !== null && _d !== void 0 ? _d : 0))));\n    }\n    reset(particle) {\n        if (particle.opacity) {\n            particle.opacity.loops = 0;\n        }\n    }\n    update(particle, delta) {\n        if (!this.isEnabled(particle)) {\n            return;\n        }\n        updateOpacity(particle, delta);\n    }\n}\n","import { OutOfCanvasUpdater } from \"./OutOfCanvasUpdater\";\nexport async function loadOutModesUpdater(engine) {\n    await engine.addParticleUpdater(\"outModes\", (container) => new OutOfCanvasUpdater(container));\n}\n","import { BounceOutMode } from \"./BounceOutMode\";\nimport { DestroyOutMode } from \"./DestroyOutMode\";\nimport { NoneOutMode } from \"./NoneOutMode\";\nimport { OutOutMode } from \"./OutOutMode\";\nexport class OutOfCanvasUpdater {\n    constructor(container) {\n        this.container = container;\n        this.updaters = [\n            new BounceOutMode(container),\n            new DestroyOutMode(container),\n            new OutOutMode(container),\n            new NoneOutMode(container),\n        ];\n    }\n    init() {\n    }\n    isEnabled(particle) {\n        return !particle.destroyed && !particle.spawning;\n    }\n    update(particle, delta) {\n        var _a, _b, _c, _d;\n        const outModes = particle.options.move.outModes;\n        this.updateOutMode(particle, delta, (_a = outModes.bottom) !== null && _a !== void 0 ? _a : outModes.default, \"bottom\");\n        this.updateOutMode(particle, delta, (_b = outModes.left) !== null && _b !== void 0 ? _b : outModes.default, \"left\");\n        this.updateOutMode(particle, delta, (_c = outModes.right) !== null && _c !== void 0 ? _c : outModes.default, \"right\");\n        this.updateOutMode(particle, delta, (_d = outModes.top) !== null && _d !== void 0 ? _d : outModes.default, \"top\");\n    }\n    updateOutMode(particle, delta, outMode, direction) {\n        for (const updater of this.updaters) {\n            updater.update(particle, direction, delta, outMode);\n        }\n    }\n}\n","import { calculateBounds } from \"tsparticles-engine\";\nimport { bounceHorizontal, bounceVertical } from \"./Utils\";\nexport class BounceOutMode {\n    constructor(container) {\n        this.container = container;\n        this.modes = [\n            \"bounce\",\n            \"bounce-vertical\",\n            \"bounce-horizontal\",\n            \"bounceVertical\",\n            \"bounceHorizontal\",\n            \"split\",\n        ];\n    }\n    update(particle, direction, delta, outMode) {\n        if (!this.modes.includes(outMode)) {\n            return;\n        }\n        const container = this.container;\n        let handled = false;\n        for (const [, plugin] of container.plugins) {\n            if (plugin.particleBounce !== undefined) {\n                handled = plugin.particleBounce(particle, delta, direction);\n            }\n            if (handled) {\n                break;\n            }\n        }\n        if (handled) {\n            return;\n        }\n        const pos = particle.getPosition(), offset = particle.offset, size = particle.getRadius(), bounds = calculateBounds(pos, size), canvasSize = container.canvas.size;\n        bounceHorizontal({ particle, outMode, direction, bounds, canvasSize, offset, size });\n        bounceVertical({ particle, outMode, direction, bounds, canvasSize, offset, size });\n    }\n}\n","import { getValue } from \"tsparticles-engine\";\nexport function bounceHorizontal(data) {\n    if (data.outMode !== \"bounce\" &&\n        data.outMode !== \"bounce-horizontal\" &&\n        data.outMode !== \"bounceHorizontal\" &&\n        data.outMode !== \"split\") {\n        return;\n    }\n    if (data.bounds.right < 0) {\n        data.particle.position.x = data.size + data.offset.x;\n    }\n    else if (data.bounds.left > data.canvasSize.width) {\n        data.particle.position.x = data.canvasSize.width - data.size - data.offset.x;\n    }\n    const velocity = data.particle.velocity.x;\n    let bounced = false;\n    if ((data.direction === \"right\" && data.bounds.right >= data.canvasSize.width && velocity > 0) ||\n        (data.direction === \"left\" && data.bounds.left <= 0 && velocity < 0)) {\n        const newVelocity = getValue(data.particle.options.bounce.horizontal);\n        data.particle.velocity.x *= -newVelocity;\n        bounced = true;\n    }\n    if (!bounced) {\n        return;\n    }\n    const minPos = data.offset.x + data.size;\n    if (data.bounds.right >= data.canvasSize.width) {\n        data.particle.position.x = data.canvasSize.width - minPos;\n    }\n    else if (data.bounds.left <= 0) {\n        data.particle.position.x = minPos;\n    }\n    if (data.outMode === \"split\") {\n        data.particle.destroy();\n    }\n}\nexport function bounceVertical(data) {\n    if (data.outMode !== \"bounce\" &&\n        data.outMode !== \"bounce-vertical\" &&\n        data.outMode !== \"bounceVertical\" &&\n        data.outMode !== \"split\") {\n        return;\n    }\n    if (data.bounds.bottom < 0) {\n        data.particle.position.y = data.size + data.offset.y;\n    }\n    else if (data.bounds.top > data.canvasSize.height) {\n        data.particle.position.y = data.canvasSize.height - data.size - data.offset.y;\n    }\n    const velocity = data.particle.velocity.y;\n    let bounced = false;\n    if ((data.direction === \"bottom\" && data.bounds.bottom >= data.canvasSize.height && velocity > 0) ||\n        (data.direction === \"top\" && data.bounds.top <= 0 && velocity < 0)) {\n        const newVelocity = getValue(data.particle.options.bounce.vertical);\n        data.particle.velocity.y *= -newVelocity;\n        bounced = true;\n    }\n    if (!bounced) {\n        return;\n    }\n    const minPos = data.offset.y + data.size;\n    if (data.bounds.bottom >= data.canvasSize.height) {\n        data.particle.position.y = data.canvasSize.height - minPos;\n    }\n    else if (data.bounds.top <= 0) {\n        data.particle.position.y = minPos;\n    }\n    if (data.outMode === \"split\") {\n        data.particle.destroy();\n    }\n}\n","import { Vector, getDistances, isPointInside } from \"tsparticles-engine\";\nexport class DestroyOutMode {\n    constructor(container) {\n        this.container = container;\n        this.modes = [\"destroy\"];\n    }\n    update(particle, direction, delta, outMode) {\n        if (!this.modes.includes(outMode)) {\n            return;\n        }\n        const container = this.container;\n        switch (particle.outType) {\n            case \"normal\":\n            case \"outside\":\n                if (isPointInside(particle.position, container.canvas.size, Vector.origin, particle.getRadius(), direction)) {\n                    return;\n                }\n                break;\n            case \"inside\": {\n                const { dx, dy } = getDistances(particle.position, particle.moveCenter);\n                const { x: vx, y: vy } = particle.velocity;\n                if ((vx < 0 && dx > particle.moveCenter.radius) ||\n                    (vy < 0 && dy > particle.moveCenter.radius) ||\n                    (vx >= 0 && dx < -particle.moveCenter.radius) ||\n                    (vy >= 0 && dy < -particle.moveCenter.radius)) {\n                    return;\n                }\n                break;\n            }\n        }\n        container.particles.remove(particle, undefined, true);\n    }\n}\n","import { Vector, isPointInside } from \"tsparticles-engine\";\nexport class NoneOutMode {\n    constructor(container) {\n        this.container = container;\n        this.modes = [\"none\"];\n    }\n    update(particle, direction, delta, outMode) {\n        if (!this.modes.includes(outMode)) {\n            return;\n        }\n        if ((particle.options.move.distance.horizontal &&\n            (direction === \"left\" || direction === \"right\")) ||\n            (particle.options.move.distance.vertical &&\n                (direction === \"top\" || direction === \"bottom\"))) {\n            return;\n        }\n        const gravityOptions = particle.options.move.gravity, container = this.container;\n        const canvasSize = container.canvas.size;\n        const pRadius = particle.getRadius();\n        if (!gravityOptions.enable) {\n            if ((particle.velocity.y > 0 && particle.position.y <= canvasSize.height + pRadius) ||\n                (particle.velocity.y < 0 && particle.position.y >= -pRadius) ||\n                (particle.velocity.x > 0 && particle.position.x <= canvasSize.width + pRadius) ||\n                (particle.velocity.x < 0 && particle.position.x >= -pRadius)) {\n                return;\n            }\n            if (!isPointInside(particle.position, container.canvas.size, Vector.origin, pRadius, direction)) {\n                container.particles.remove(particle);\n            }\n        }\n        else {\n            const position = particle.position;\n            if ((!gravityOptions.inverse &&\n                position.y > canvasSize.height + pRadius &&\n                direction === \"bottom\") ||\n                (gravityOptions.inverse && position.y < -pRadius && direction === \"top\")) {\n                container.particles.remove(particle);\n            }\n        }\n    }\n}\n","import { Vector, calculateBounds, getDistances, getRandom, isPointInside, randomInRange, } from \"tsparticles-engine\";\nexport class OutOutMode {\n    constructor(container) {\n        this.container = container;\n        this.modes = [\"out\"];\n    }\n    update(particle, direction, delta, outMode) {\n        if (!this.modes.includes(outMode)) {\n            return;\n        }\n        const container = this.container;\n        switch (particle.outType) {\n            case \"inside\": {\n                const { x: vx, y: vy } = particle.velocity;\n                const circVec = Vector.origin;\n                circVec.length = particle.moveCenter.radius;\n                circVec.angle = particle.velocity.angle + Math.PI;\n                circVec.addTo(Vector.create(particle.moveCenter));\n                const { dx, dy } = getDistances(particle.position, circVec);\n                if ((vx <= 0 && dx >= 0) || (vy <= 0 && dy >= 0) || (vx >= 0 && dx <= 0) || (vy >= 0 && dy <= 0)) {\n                    return;\n                }\n                particle.position.x = Math.floor(randomInRange({\n                    min: 0,\n                    max: container.canvas.size.width,\n                }));\n                particle.position.y = Math.floor(randomInRange({\n                    min: 0,\n                    max: container.canvas.size.height,\n                }));\n                const { dx: newDx, dy: newDy } = getDistances(particle.position, particle.moveCenter);\n                particle.direction = Math.atan2(-newDy, -newDx);\n                particle.velocity.angle = particle.direction;\n                break;\n            }\n            default: {\n                if (isPointInside(particle.position, container.canvas.size, Vector.origin, particle.getRadius(), direction)) {\n                    return;\n                }\n                switch (particle.outType) {\n                    case \"outside\": {\n                        particle.position.x =\n                            Math.floor(randomInRange({\n                                min: -particle.moveCenter.radius,\n                                max: particle.moveCenter.radius,\n                            })) + particle.moveCenter.x;\n                        particle.position.y =\n                            Math.floor(randomInRange({\n                                min: -particle.moveCenter.radius,\n                                max: particle.moveCenter.radius,\n                            })) + particle.moveCenter.y;\n                        const { dx, dy } = getDistances(particle.position, particle.moveCenter);\n                        if (particle.moveCenter.radius) {\n                            particle.direction = Math.atan2(dy, dx);\n                            particle.velocity.angle = particle.direction;\n                        }\n                        break;\n                    }\n                    case \"normal\": {\n                        const wrap = particle.options.move.warp, canvasSize = container.canvas.size, newPos = {\n                            bottom: canvasSize.height + particle.getRadius() + particle.offset.y,\n                            left: -particle.getRadius() - particle.offset.x,\n                            right: canvasSize.width + particle.getRadius() + particle.offset.x,\n                            top: -particle.getRadius() - particle.offset.y,\n                        }, sizeValue = particle.getRadius(), nextBounds = calculateBounds(particle.position, sizeValue);\n                        if (direction === \"right\" &&\n                            nextBounds.left > canvasSize.width + particle.offset.x) {\n                            particle.position.x = newPos.left;\n                            particle.initialPosition.x = particle.position.x;\n                            if (!wrap) {\n                                particle.position.y = getRandom() * canvasSize.height;\n                                particle.initialPosition.y = particle.position.y;\n                            }\n                        }\n                        else if (direction === \"left\" && nextBounds.right < -particle.offset.x) {\n                            particle.position.x = newPos.right;\n                            particle.initialPosition.x = particle.position.x;\n                            if (!wrap) {\n                                particle.position.y = getRandom() * canvasSize.height;\n                                particle.initialPosition.y = particle.position.y;\n                            }\n                        }\n                        if (direction === \"bottom\" &&\n                            nextBounds.top > canvasSize.height + particle.offset.y) {\n                            if (!wrap) {\n                                particle.position.x = getRandom() * canvasSize.width;\n                                particle.initialPosition.x = particle.position.x;\n                            }\n                            particle.position.y = newPos.top;\n                            particle.initialPosition.y = particle.position.y;\n                        }\n                        else if (direction === \"top\" && nextBounds.bottom < -particle.offset.y) {\n                            if (!wrap) {\n                                particle.position.x = getRandom() * canvasSize.width;\n                                particle.initialPosition.x = particle.position.x;\n                            }\n                            particle.position.y = newPos.bottom;\n                            particle.initialPosition.y = particle.position.y;\n                        }\n                        break;\n                    }\n                }\n                break;\n            }\n        }\n    }\n}\n","import { ParallaxMover } from \"./ParallaxMover\";\nexport async function loadParallaxMover(engine) {\n    engine.addMover(\"parallax\", () => new ParallaxMover());\n}\n","import { isSsr } from \"tsparticles-engine\";\nexport class ParallaxMover {\n    init() {\n    }\n    isEnabled(particle) {\n        return (!isSsr() &&\n            !particle.destroyed &&\n            particle.container.actualOptions.interactivity.events.onHover.parallax.enable);\n    }\n    move(particle) {\n        const container = particle.container, options = container.actualOptions;\n        if (isSsr() || !options.interactivity.events.onHover.parallax.enable) {\n            return;\n        }\n        const parallaxForce = options.interactivity.events.onHover.parallax.force, mousePos = container.interactivity.mouse.position;\n        if (!mousePos) {\n            return;\n        }\n        const canvasCenter = {\n            x: container.canvas.size.width / 2,\n            y: container.canvas.size.height / 2,\n        }, parallaxSmooth = options.interactivity.events.onHover.parallax.smooth, factor = particle.getRadius() / parallaxForce, centerDistance = {\n            x: (mousePos.x - canvasCenter.x) * factor,\n            y: (mousePos.y - canvasCenter.y) * factor,\n        };\n        particle.offset.x += (centerDistance.x - particle.offset.x) / parallaxSmooth;\n        particle.offset.y += (centerDistance.y - particle.offset.y) / parallaxSmooth;\n    }\n}\n","import { Attractor } from \"./Attractor\";\nexport async function loadParticlesAttractInteraction(engine) {\n    await engine.addInteractor(\"particlesAttract\", (container) => new Attractor(container));\n}\n","import { ParticlesInteractorBase, getDistances } from \"tsparticles-engine\";\nexport class Attractor extends ParticlesInteractorBase {\n    constructor(container) {\n        super(container);\n    }\n    clear() {\n    }\n    init() {\n    }\n    async interact(p1) {\n        var _a;\n        const container = this.container, distance = (_a = p1.retina.attractDistance) !== null && _a !== void 0 ? _a : container.retina.attractDistance, pos1 = p1.getPosition(), query = container.particles.quadTree.queryCircle(pos1, distance);\n        for (const p2 of query) {\n            if (p1 === p2 || !p2.options.move.attract.enable || p2.destroyed || p2.spawning) {\n                continue;\n            }\n            const pos2 = p2.getPosition(), { dx, dy } = getDistances(pos1, pos2), rotate = p1.options.move.attract.rotate, ax = dx / (rotate.x * 1000), ay = dy / (rotate.y * 1000), p1Factor = p2.size.value / p1.size.value, p2Factor = 1 / p1Factor;\n            p1.velocity.x -= ax * p1Factor;\n            p1.velocity.y -= ay * p1Factor;\n            p2.velocity.x += ax * p2Factor;\n            p2.velocity.y += ay * p2Factor;\n        }\n    }\n    isEnabled(particle) {\n        return particle.options.move.attract.enable;\n    }\n    reset() {\n    }\n}\n","import { Collider } from \"./Collider\";\nexport async function loadParticlesCollisionsInteraction(engine) {\n    await engine.addInteractor(\"particlesCollisions\", (container) => new Collider(container));\n}\n","import { ParticlesInteractorBase, getDistance } from \"tsparticles-engine\";\nimport { resolveCollision } from \"./ResolveCollision\";\nexport class Collider extends ParticlesInteractorBase {\n    constructor(container) {\n        super(container);\n    }\n    clear() {\n    }\n    init() {\n    }\n    async interact(p1, delta) {\n        const container = this.container, pos1 = p1.getPosition(), radius1 = p1.getRadius(), query = container.particles.quadTree.queryCircle(pos1, radius1 * 2);\n        for (const p2 of query) {\n            if (p1 === p2 ||\n                !p2.options.collisions.enable ||\n                p1.options.collisions.mode !== p2.options.collisions.mode ||\n                p2.destroyed ||\n                p2.spawning) {\n                continue;\n            }\n            const pos2 = p2.getPosition(), radius2 = p2.getRadius();\n            if (Math.abs(Math.round(pos1.z) - Math.round(pos2.z)) > radius1 + radius2) {\n                continue;\n            }\n            const dist = getDistance(pos1, pos2), distP = radius1 + radius2;\n            if (dist > distP) {\n                continue;\n            }\n            resolveCollision(p1, p2, delta, container.retina.pixelRatio);\n        }\n    }\n    isEnabled(particle) {\n        return particle.options.collisions.enable;\n    }\n    reset() {\n    }\n}\n","import { absorb } from \"./Absorb\";\nimport { bounce } from \"./Bounce\";\nimport { destroy } from \"./Destroy\";\nexport function resolveCollision(p1, p2, delta, pixelRatio) {\n    switch (p1.options.collisions.mode) {\n        case \"absorb\": {\n            absorb(p1, p2, delta, pixelRatio);\n            break;\n        }\n        case \"bounce\": {\n            bounce(p1, p2);\n            break;\n        }\n        case \"destroy\": {\n            destroy(p1, p2);\n            break;\n        }\n    }\n}\n","import { clamp } from \"tsparticles-engine\";\nfunction updateAbsorb(p1, r1, p2, r2, delta, pixelRatio) {\n    const factor = clamp((p1.options.collisions.absorb.speed * delta.factor) / 10, 0, r2);\n    p1.size.value += factor / 2;\n    p2.size.value -= factor;\n    if (r2 <= pixelRatio) {\n        p2.size.value = 0;\n        p2.destroy();\n    }\n}\nexport function absorb(p1, p2, delta, pixelRatio) {\n    const r1 = p1.getRadius(), r2 = p2.getRadius();\n    if (r1 === undefined && r2 !== undefined) {\n        p1.destroy();\n    }\n    else if (r1 !== undefined && r2 === undefined) {\n        p2.destroy();\n    }\n    else if (r1 !== undefined && r2 !== undefined) {\n        if (r1 >= r2) {\n            updateAbsorb(p1, r1, p2, r2, delta, pixelRatio);\n        }\n        else {\n            updateAbsorb(p2, r2, p1, r1, delta, pixelRatio);\n        }\n    }\n}\n","import { circleBounce, circleBounceDataFromParticle } from \"tsparticles-engine\";\nexport function bounce(p1, p2) {\n    circleBounce(circleBounceDataFromParticle(p1), circleBounceDataFromParticle(p2));\n}\n","import { bounce } from \"./Bounce\";\nexport function destroy(p1, p2) {\n    if (!p1.unbreakable && !p2.unbreakable) {\n        bounce(p1, p2);\n    }\n    if (p1.getRadius() === undefined && p2.getRadius() !== undefined) {\n        p1.destroy();\n    }\n    else if (p1.getRadius() !== undefined && p2.getRadius() === undefined) {\n        p2.destroy();\n    }\n    else if (p1.getRadius() !== undefined && p2.getRadius() !== undefined) {\n        const deleteP = p1.getRadius() >= p2.getRadius() ? p1 : p2;\n        deleteP.destroy();\n    }\n}\n","import { loadInteraction } from \"./interaction\";\nimport { loadPlugin } from \"./plugin\";\nexport async function loadParticlesLinksInteraction(engine) {\n    await loadInteraction(engine);\n    await loadPlugin(engine);\n}\nexport * from \"./Options/Classes/Links\";\nexport * from \"./Options/Classes/LinksShadow\";\nexport * from \"./Options/Classes/LinksTriangle\";\nexport * from \"./Options/Interfaces/ILinks\";\nexport * from \"./Options/Interfaces/ILinksShadow\";\nexport * from \"./Options/Interfaces/ILinksTriangle\";\n","import { Linker } from \"./Linker\";\nexport async function loadInteraction(engine) {\n    await engine.addInteractor(\"particlesLinks\", (container) => new Linker(container));\n}\n","import { Circle, ParticlesInteractorBase, getDistance, getLinkRandomColor } from \"tsparticles-engine\";\nimport { CircleWarp } from \"./CircleWarp\";\nimport { Links } from \"./Options/Classes/Links\";\nfunction getLinkDistance(pos1, pos2, optDistance, canvasSize, warp) {\n    let distance = getDistance(pos1, pos2);\n    if (!warp || distance <= optDistance) {\n        return distance;\n    }\n    const pos2NE = {\n        x: pos2.x - canvasSize.width,\n        y: pos2.y,\n    };\n    distance = getDistance(pos1, pos2NE);\n    if (distance <= optDistance) {\n        return distance;\n    }\n    const pos2SE = {\n        x: pos2.x - canvasSize.width,\n        y: pos2.y - canvasSize.height,\n    };\n    distance = getDistance(pos1, pos2SE);\n    if (distance <= optDistance) {\n        return distance;\n    }\n    const pos2SW = {\n        x: pos2.x,\n        y: pos2.y - canvasSize.height,\n    };\n    distance = getDistance(pos1, pos2SW);\n    return distance;\n}\nexport class Linker extends ParticlesInteractorBase {\n    constructor(container) {\n        super(container);\n        this.linkContainer = container;\n    }\n    clear() {\n    }\n    init() {\n        this.linkContainer.particles.linksColor = undefined;\n        this.linkContainer.particles.linksColors = new Map();\n    }\n    async interact(p1) {\n        var _a;\n        if (!p1.options.links) {\n            return;\n        }\n        p1.links = [];\n        const pos1 = p1.getPosition(), container = this.container, canvasSize = container.canvas.size;\n        if (pos1.x < 0 || pos1.y < 0 || pos1.x > canvasSize.width || pos1.y > canvasSize.height) {\n            return;\n        }\n        const linkOpt1 = p1.options.links, optOpacity = linkOpt1.opacity, optDistance = (_a = p1.retina.linksDistance) !== null && _a !== void 0 ? _a : 0, warp = linkOpt1.warp, range = warp\n            ? new CircleWarp(pos1.x, pos1.y, optDistance, canvasSize)\n            : new Circle(pos1.x, pos1.y, optDistance), query = container.particles.quadTree.query(range);\n        for (const p2 of query) {\n            const linkOpt2 = p2.options.links;\n            if (p1 === p2 ||\n                !(linkOpt2 === null || linkOpt2 === void 0 ? void 0 : linkOpt2.enable) ||\n                linkOpt1.id !== linkOpt2.id ||\n                p2.spawning ||\n                p2.destroyed ||\n                !p2.links ||\n                p1.links.map((t) => t.destination).indexOf(p2) !== -1 ||\n                p2.links.map((t) => t.destination).indexOf(p1) !== -1) {\n                continue;\n            }\n            const pos2 = p2.getPosition();\n            if (pos2.x < 0 || pos2.y < 0 || pos2.x > canvasSize.width || pos2.y > canvasSize.height) {\n                continue;\n            }\n            const distance = getLinkDistance(pos1, pos2, optDistance, canvasSize, warp && linkOpt2.warp);\n            if (distance > optDistance) {\n                return;\n            }\n            const opacityLine = (1 - distance / optDistance) * optOpacity;\n            this.setColor(p1);\n            p1.links.push({\n                destination: p2,\n                opacity: opacityLine,\n            });\n        }\n    }\n    isEnabled(particle) {\n        var _a;\n        return !!((_a = particle.options.links) === null || _a === void 0 ? void 0 : _a.enable);\n    }\n    loadParticlesOptions(options, ...sources) {\n        var _a, _b;\n        if (!options.links) {\n            options.links = new Links();\n        }\n        for (const source of sources) {\n            options.links.load((_b = (_a = source === null || source === void 0 ? void 0 : source.links) !== null && _a !== void 0 ? _a : source === null || source === void 0 ? void 0 : source.lineLinked) !== null && _b !== void 0 ? _b : source === null || source === void 0 ? void 0 : source.line_linked);\n        }\n    }\n    reset() {\n    }\n    setColor(p1) {\n        if (!p1.options.links) {\n            return;\n        }\n        const container = this.linkContainer, linksOptions = p1.options.links;\n        let linkColor = linksOptions.id === undefined\n            ? container.particles.linksColor\n            : container.particles.linksColors.get(linksOptions.id);\n        if (linkColor) {\n            return;\n        }\n        const optColor = linksOptions.color;\n        linkColor = getLinkRandomColor(optColor, linksOptions.blink, linksOptions.consent);\n        if (linksOptions.id === undefined) {\n            container.particles.linksColor = linkColor;\n        }\n        else {\n            container.particles.linksColors.set(linksOptions.id, linkColor);\n        }\n    }\n}\n","import { Circle, Rectangle } from \"tsparticles-engine\";\nexport class CircleWarp extends Circle {\n    constructor(x, y, radius, canvasSize) {\n        super(x, y, radius);\n        this.canvasSize = canvasSize;\n        this.canvasSize = Object.assign({}, canvasSize);\n    }\n    contains(point) {\n        if (super.contains(point)) {\n            return true;\n        }\n        const posNE = {\n            x: point.x - this.canvasSize.width,\n            y: point.y,\n        };\n        if (super.contains(posNE)) {\n            return true;\n        }\n        const posSE = {\n            x: point.x - this.canvasSize.width,\n            y: point.y - this.canvasSize.height,\n        };\n        if (super.contains(posSE)) {\n            return true;\n        }\n        const posSW = {\n            x: point.x,\n            y: point.y - this.canvasSize.height,\n        };\n        return super.contains(posSW);\n    }\n    intersects(range) {\n        if (super.intersects(range)) {\n            return true;\n        }\n        const rect = range, circle = range, newPos = {\n            x: range.position.x - this.canvasSize.width,\n            y: range.position.y - this.canvasSize.height,\n        };\n        if (circle.radius !== undefined) {\n            const biggerCircle = new Circle(newPos.x, newPos.y, circle.radius * 2);\n            return super.intersects(biggerCircle);\n        }\n        else if (rect.size !== undefined) {\n            const rectSW = new Rectangle(newPos.x, newPos.y, rect.size.width * 2, rect.size.height * 2);\n            return super.intersects(rectSW);\n        }\n        return false;\n    }\n}\n","import { LinksShadow } from \"./LinksShadow\";\nimport { LinksTriangle } from \"./LinksTriangle\";\nimport { OptionsColor } from \"tsparticles-engine\";\nexport class Links {\n    constructor() {\n        this.blink = false;\n        this.color = new OptionsColor();\n        this.color.value = \"#fff\";\n        this.consent = false;\n        this.distance = 100;\n        this.enable = false;\n        this.frequency = 1;\n        this.opacity = 1;\n        this.shadow = new LinksShadow();\n        this.triangles = new LinksTriangle();\n        this.width = 1;\n        this.warp = false;\n    }\n    load(data) {\n        if (!data) {\n            return;\n        }\n        if (data.id !== undefined) {\n            this.id = data.id;\n        }\n        if (data.blink !== undefined) {\n            this.blink = data.blink;\n        }\n        this.color = OptionsColor.create(this.color, data.color);\n        if (data.consent !== undefined) {\n            this.consent = data.consent;\n        }\n        if (data.distance !== undefined) {\n            this.distance = data.distance;\n        }\n        if (data.enable !== undefined) {\n            this.enable = data.enable;\n        }\n        if (data.frequency !== undefined) {\n            this.frequency = data.frequency;\n        }\n        if (data.opacity !== undefined) {\n            this.opacity = data.opacity;\n        }\n        this.shadow.load(data.shadow);\n        this.triangles.load(data.triangles);\n        if (data.width !== undefined) {\n            this.width = data.width;\n        }\n        if (data.warp !== undefined) {\n            this.warp = data.warp;\n        }\n    }\n}\n","import { OptionsColor } from \"tsparticles-engine\";\nexport class LinksShadow {\n    constructor() {\n        this.blur = 5;\n        this.color = new OptionsColor();\n        this.color.value = \"#000\";\n        this.enable = false;\n    }\n    load(data) {\n        if (!data) {\n            return;\n        }\n        if (data.blur !== undefined) {\n            this.blur = data.blur;\n        }\n        this.color = OptionsColor.create(this.color, data.color);\n        if (data.enable !== undefined) {\n            this.enable = data.enable;\n        }\n    }\n}\n","import { OptionsColor } from \"tsparticles-engine\";\nexport class LinksTriangle {\n    constructor() {\n        this.enable = false;\n        this.frequency = 1;\n    }\n    load(data) {\n        if (!data) {\n            return;\n        }\n        if (data.color !== undefined) {\n            this.color = OptionsColor.create(this.color, data.color);\n        }\n        if (data.enable !== undefined) {\n            this.enable = data.enable;\n        }\n        if (data.frequency !== undefined) {\n            this.frequency = data.frequency;\n        }\n        if (data.opacity !== undefined) {\n            this.opacity = data.opacity;\n        }\n    }\n}\n","import { LinkInstance } from \"./LinkInstance\";\nclass LinksPlugin {\n    constructor() {\n        this.id = \"links\";\n    }\n    getPlugin(container) {\n        return new LinkInstance(container);\n    }\n    loadOptions() {\n    }\n    needsPlugin() {\n        return true;\n    }\n}\nexport async function loadPlugin(engine) {\n    const plugin = new LinksPlugin();\n    await engine.addPlugin(plugin);\n}\n","import { drawLinkLine, drawLinkTriangle } from \"./Utils\";\nimport { getDistance, getLinkColor, getRandom, getRangeValue, rangeColorToRgb } from \"tsparticles-engine\";\nfunction getLinkKey(ids) {\n    ids.sort((a, b) => a - b);\n    return ids.join(\"_\");\n}\nfunction setLinkFrequency(particles, dictionary) {\n    const key = getLinkKey(particles.map((t) => t.id));\n    let res = dictionary.get(key);\n    if (res === undefined) {\n        res = getRandom();\n        dictionary.set(key, res);\n    }\n    return res;\n}\nexport class LinkInstance {\n    constructor(container) {\n        this.container = container;\n        this._freqs = {\n            links: new Map(),\n            triangles: new Map(),\n        };\n    }\n    drawParticle(context, particle) {\n        var _a;\n        const pOptions = particle.options;\n        if (!particle.links || particle.links.length <= 0) {\n            return;\n        }\n        const p1Links = particle.links.filter((l) => pOptions.links && this.getLinkFrequency(particle, l.destination) <= pOptions.links.frequency);\n        for (const link of p1Links) {\n            this.drawTriangles(pOptions, particle, link, p1Links);\n            if (link.opacity > 0 && ((_a = particle.retina.linksWidth) !== null && _a !== void 0 ? _a : 0) > 0) {\n                this.drawLinkLine(particle, link);\n            }\n        }\n    }\n    async init() {\n        this._freqs.links = new Map();\n        this._freqs.triangles = new Map();\n    }\n    particleCreated(particle) {\n        particle.links = [];\n        if (!particle.options.links) {\n            return;\n        }\n        const ratio = this.container.retina.pixelRatio;\n        particle.retina.linksDistance = particle.options.links.distance * ratio;\n        particle.retina.linksWidth = particle.options.links.width * ratio;\n    }\n    particleDestroyed(particle) {\n        particle.links = [];\n    }\n    drawLinkLine(p1, link) {\n        const container = this.container, options = container.actualOptions, p2 = link.destination, pos1 = p1.getPosition(), pos2 = p2.getPosition();\n        let opacity = link.opacity;\n        container.canvas.draw((ctx) => {\n            var _a, _b, _c;\n            if (!p1.options.links) {\n                return;\n            }\n            let colorLine;\n            const twinkle = (_a = p1.options.twinkle) === null || _a === void 0 ? void 0 : _a.lines;\n            if (twinkle === null || twinkle === void 0 ? void 0 : twinkle.enable) {\n                const twinkleFreq = twinkle.frequency, twinkleRgb = rangeColorToRgb(twinkle.color), twinkling = getRandom() < twinkleFreq;\n                if (twinkling && twinkleRgb) {\n                    colorLine = twinkleRgb;\n                    opacity = getRangeValue(twinkle.opacity);\n                }\n            }\n            if (!colorLine) {\n                const linksOptions = p1.options.links, linkColor = (linksOptions === null || linksOptions === void 0 ? void 0 : linksOptions.id) !== undefined\n                    ? container.particles.linksColors.get(linksOptions.id)\n                    : container.particles.linksColor;\n                colorLine = getLinkColor(p1, p2, linkColor);\n            }\n            if (!colorLine) {\n                return;\n            }\n            const width = (_b = p1.retina.linksWidth) !== null && _b !== void 0 ? _b : 0, maxDistance = (_c = p1.retina.linksDistance) !== null && _c !== void 0 ? _c : 0;\n            drawLinkLine(ctx, width, pos1, pos2, maxDistance, container.canvas.size, p1.options.links.warp, options.backgroundMask.enable, options.backgroundMask.composite, colorLine, opacity, p1.options.links.shadow);\n        });\n    }\n    drawLinkTriangle(p1, link1, link2) {\n        var _a;\n        if (!p1.options.links) {\n            return;\n        }\n        const container = this.container, options = container.actualOptions, p2 = link1.destination, p3 = link2.destination, triangleOptions = p1.options.links.triangles, opacityTriangle = (_a = triangleOptions.opacity) !== null && _a !== void 0 ? _a : (link1.opacity + link2.opacity) / 2;\n        if (opacityTriangle <= 0) {\n            return;\n        }\n        container.canvas.draw((ctx) => {\n            var _a;\n            const pos1 = p1.getPosition(), pos2 = p2.getPosition(), pos3 = p3.getPosition(), linksDistance = (_a = p1.retina.linksDistance) !== null && _a !== void 0 ? _a : 0;\n            if (getDistance(pos1, pos2) > linksDistance ||\n                getDistance(pos3, pos2) > linksDistance ||\n                getDistance(pos3, pos1) > linksDistance) {\n                return;\n            }\n            let colorTriangle = rangeColorToRgb(triangleOptions.color);\n            if (!colorTriangle) {\n                const linksOptions = p1.options.links, linkColor = (linksOptions === null || linksOptions === void 0 ? void 0 : linksOptions.id) !== undefined\n                    ? container.particles.linksColors.get(linksOptions.id)\n                    : container.particles.linksColor;\n                colorTriangle = getLinkColor(p1, p2, linkColor);\n            }\n            if (!colorTriangle) {\n                return;\n            }\n            drawLinkTriangle(ctx, pos1, pos2, pos3, options.backgroundMask.enable, options.backgroundMask.composite, colorTriangle, opacityTriangle);\n        });\n    }\n    drawTriangles(options, p1, link, p1Links) {\n        var _a, _b, _c;\n        const p2 = link.destination;\n        if (!(((_a = options.links) === null || _a === void 0 ? void 0 : _a.triangles.enable) && ((_b = p2.options.links) === null || _b === void 0 ? void 0 : _b.triangles.enable))) {\n            return;\n        }\n        const vertices = (_c = p2.links) === null || _c === void 0 ? void 0 : _c.filter((t) => {\n            const linkFreq = this.getLinkFrequency(p2, t.destination);\n            return (p2.options.links &&\n                linkFreq <= p2.options.links.frequency &&\n                p1Links.findIndex((l) => l.destination === t.destination) >= 0);\n        });\n        if (!(vertices === null || vertices === void 0 ? void 0 : vertices.length)) {\n            return;\n        }\n        for (const vertex of vertices) {\n            const p3 = vertex.destination, triangleFreq = this.getTriangleFrequency(p1, p2, p3);\n            if (triangleFreq > options.links.triangles.frequency) {\n                continue;\n            }\n            this.drawLinkTriangle(p1, link, vertex);\n        }\n    }\n    getLinkFrequency(p1, p2) {\n        return setLinkFrequency([p1, p2], this._freqs.links);\n    }\n    getTriangleFrequency(p1, p2, p3) {\n        return setLinkFrequency([p1, p2, p3], this._freqs.triangles);\n    }\n}\n","import { drawLine, drawTriangle, getDistance, getDistances, getStyleFromRgb, rangeColorToRgb, } from \"tsparticles-engine\";\nexport function drawLinkLine(context, width, begin, end, maxDistance, canvasSize, warp, backgroundMask, composite, colorLine, opacity, shadow) {\n    let drawn = false;\n    if (getDistance(begin, end) <= maxDistance) {\n        drawLine(context, begin, end);\n        drawn = true;\n    }\n    else if (warp) {\n        let pi1;\n        let pi2;\n        const endNE = {\n            x: end.x - canvasSize.width,\n            y: end.y,\n        };\n        const d1 = getDistances(begin, endNE);\n        if (d1.distance <= maxDistance) {\n            const yi = begin.y - (d1.dy / d1.dx) * begin.x;\n            pi1 = { x: 0, y: yi };\n            pi2 = { x: canvasSize.width, y: yi };\n        }\n        else {\n            const endSW = {\n                x: end.x,\n                y: end.y - canvasSize.height,\n            };\n            const d2 = getDistances(begin, endSW);\n            if (d2.distance <= maxDistance) {\n                const yi = begin.y - (d2.dy / d2.dx) * begin.x;\n                const xi = -yi / (d2.dy / d2.dx);\n                pi1 = { x: xi, y: 0 };\n                pi2 = { x: xi, y: canvasSize.height };\n            }\n            else {\n                const endSE = {\n                    x: end.x - canvasSize.width,\n                    y: end.y - canvasSize.height,\n                };\n                const d3 = getDistances(begin, endSE);\n                if (d3.distance <= maxDistance) {\n                    const yi = begin.y - (d3.dy / d3.dx) * begin.x;\n                    const xi = -yi / (d3.dy / d3.dx);\n                    pi1 = { x: xi, y: yi };\n                    pi2 = { x: pi1.x + canvasSize.width, y: pi1.y + canvasSize.height };\n                }\n            }\n        }\n        if (pi1 && pi2) {\n            drawLine(context, begin, pi1);\n            drawLine(context, end, pi2);\n            drawn = true;\n        }\n    }\n    if (!drawn) {\n        return;\n    }\n    context.lineWidth = width;\n    if (backgroundMask) {\n        context.globalCompositeOperation = composite;\n    }\n    context.strokeStyle = getStyleFromRgb(colorLine, opacity);\n    if (shadow.enable) {\n        const shadowColor = rangeColorToRgb(shadow.color);\n        if (shadowColor) {\n            context.shadowBlur = shadow.blur;\n            context.shadowColor = getStyleFromRgb(shadowColor);\n        }\n    }\n    context.stroke();\n}\nexport function drawLinkTriangle(context, pos1, pos2, pos3, backgroundMask, composite, colorTriangle, opacityTriangle) {\n    drawTriangle(context, pos1, pos2, pos3);\n    if (backgroundMask) {\n        context.globalCompositeOperation = composite;\n    }\n    context.fillStyle = getStyleFromRgb(colorTriangle, opacityTriangle);\n    context.fill();\n}\n","export {};\n","export {};\n","export {};\n","import { PolygonDrawer } from \"./PolygonDrawer\";\nimport { TriangleDrawer } from \"./TriangleDrawer\";\nexport async function loadGenericPolygonShape(engine) {\n    await engine.addShape(\"polygon\", new PolygonDrawer());\n}\nexport async function loadTriangleShape(engine) {\n    await engine.addShape(\"triangle\", new TriangleDrawer());\n}\nexport async function loadPolygonShape(engine) {\n    await loadGenericPolygonShape(engine);\n    await loadTriangleShape(engine);\n}\n","import { PolygonDrawerBase } from \"./PolygonDrawerBase\";\nexport class PolygonDrawer extends PolygonDrawerBase {\n    getCenter(particle, radius) {\n        return {\n            x: -radius / (particle.sides / 3.5),\n            y: -radius / (2.66 / 3.5),\n        };\n    }\n    getSidesData(particle, radius) {\n        const sides = particle.sides;\n        return {\n            count: {\n                denominator: 1,\n                numerator: sides,\n            },\n            length: (radius * 2.66) / (sides / 3),\n        };\n    }\n}\n","import { getRangeValue } from \"tsparticles-engine\";\nexport class PolygonDrawerBase {\n    draw(context, particle, radius) {\n        const start = this.getCenter(particle, radius), side = this.getSidesData(particle, radius), sideCount = side.count.numerator * side.count.denominator, decimalSides = side.count.numerator / side.count.denominator, interiorAngleDegrees = (180 * (decimalSides - 2)) / decimalSides, interiorAngle = Math.PI - (Math.PI * interiorAngleDegrees) / 180;\n        if (!context) {\n            return;\n        }\n        context.beginPath();\n        context.translate(start.x, start.y);\n        context.moveTo(0, 0);\n        for (let i = 0; i < sideCount; i++) {\n            context.lineTo(side.length, 0);\n            context.translate(side.length, 0);\n            context.rotate(interiorAngle);\n        }\n    }\n    getSidesCount(particle) {\n        var _a, _b;\n        const polygon = particle.shapeData, sides = Math.round(getRangeValue((_b = (_a = polygon === null || polygon === void 0 ? void 0 : polygon.sides) !== null && _a !== void 0 ? _a : polygon === null || polygon === void 0 ? void 0 : polygon.nb_sides) !== null && _b !== void 0 ? _b : 5));\n        return sides;\n    }\n}\n","import { PolygonDrawerBase } from \"./PolygonDrawerBase\";\nexport class TriangleDrawer extends PolygonDrawerBase {\n    getCenter(particle, radius) {\n        return {\n            x: -radius,\n            y: radius / 1.66,\n        };\n    }\n    getSidesCount() {\n        return 3;\n    }\n    getSidesData(particle, radius) {\n        return {\n            count: {\n                denominator: 2,\n                numerator: 3,\n            },\n            length: radius * 2,\n        };\n    }\n}\n","import { SizeUpdater } from \"./SizeUpdater\";\nexport async function loadSizeUpdater(engine) {\n    await engine.addParticleUpdater(\"size\", () => new SizeUpdater());\n}\n","import { clamp, getRandom } from \"tsparticles-engine\";\nfunction checkDestroy(particle, value, minValue, maxValue) {\n    switch (particle.options.size.animation.destroy) {\n        case \"max\":\n            if (value >= maxValue) {\n                particle.destroy();\n            }\n            break;\n        case \"min\":\n            if (value <= minValue) {\n                particle.destroy();\n            }\n            break;\n    }\n}\nfunction updateSize(particle, delta) {\n    var _a, _b, _c, _d, _e;\n    const sizeVelocity = ((_a = particle.size.velocity) !== null && _a !== void 0 ? _a : 0) * delta.factor, minValue = particle.size.min, maxValue = particle.size.max, decay = (_b = particle.size.decay) !== null && _b !== void 0 ? _b : 1;\n    if (particle.destroyed ||\n        !particle.size.enable ||\n        (((_c = particle.size.maxLoops) !== null && _c !== void 0 ? _c : 0) > 0 && ((_d = particle.size.loops) !== null && _d !== void 0 ? _d : 0) > ((_e = particle.size.maxLoops) !== null && _e !== void 0 ? _e : 0))) {\n        return;\n    }\n    switch (particle.size.status) {\n        case \"increasing\":\n            if (particle.size.value >= maxValue) {\n                particle.size.status = \"decreasing\";\n                if (!particle.size.loops) {\n                    particle.size.loops = 0;\n                }\n                particle.size.loops++;\n            }\n            else {\n                particle.size.value += sizeVelocity;\n            }\n            break;\n        case \"decreasing\":\n            if (particle.size.value <= minValue) {\n                particle.size.status = \"increasing\";\n                if (!particle.size.loops) {\n                    particle.size.loops = 0;\n                }\n                particle.size.loops++;\n            }\n            else {\n                particle.size.value -= sizeVelocity;\n            }\n    }\n    if (particle.size.velocity && decay !== 1) {\n        particle.size.velocity *= decay;\n    }\n    checkDestroy(particle, particle.size.value, minValue, maxValue);\n    if (!particle.destroyed) {\n        particle.size.value = clamp(particle.size.value, minValue, maxValue);\n    }\n}\nexport class SizeUpdater {\n    init(particle) {\n        var _a;\n        const container = particle.container, sizeOptions = particle.options.size, sizeAnimation = sizeOptions.animation;\n        if (sizeAnimation.enable) {\n            particle.size.velocity =\n                (((_a = particle.retina.sizeAnimationSpeed) !== null && _a !== void 0 ? _a : container.retina.sizeAnimationSpeed) / 100) *\n                    container.retina.reduceFactor;\n            if (!sizeAnimation.sync) {\n                particle.size.velocity *= getRandom();\n            }\n        }\n    }\n    isEnabled(particle) {\n        var _a, _b, _c, _d;\n        return (!particle.destroyed &&\n            !particle.spawning &&\n            particle.size.enable &&\n            (((_a = particle.size.maxLoops) !== null && _a !== void 0 ? _a : 0) <= 0 ||\n                (((_b = particle.size.maxLoops) !== null && _b !== void 0 ? _b : 0) > 0 && ((_c = particle.size.loops) !== null && _c !== void 0 ? _c : 0) < ((_d = particle.size.maxLoops) !== null && _d !== void 0 ? _d : 0))));\n    }\n    reset(particle) {\n        particle.size.loops = 0;\n    }\n    update(particle, delta) {\n        if (!this.isEnabled(particle)) {\n            return;\n        }\n        updateSize(particle, delta);\n    }\n}\n","import { SquareDrawer } from \"./SquareDrawer\";\nexport async function loadSquareShape(engine) {\n    const drawer = new SquareDrawer();\n    await engine.addShape([\"edge\", \"square\"], drawer);\n}\n","const fixFactor = Math.sqrt(2);\nexport class SquareDrawer {\n    draw(context, particle, radius) {\n        context.rect(-radius / fixFactor, -radius / fixFactor, (radius * 2) / fixFactor, (radius * 2) / fixFactor);\n    }\n    getSidesCount() {\n        return 4;\n    }\n}\n","import { StarDrawer } from \"./StarDrawer\";\nexport async function loadStarShape(engine) {\n    await engine.addShape(\"star\", new StarDrawer());\n}\n","import { getRangeValue } from \"tsparticles-engine\";\nexport class StarDrawer {\n    draw(context, particle, radius) {\n        var _a;\n        const sides = particle.sides, inset = (_a = particle.starInset) !== null && _a !== void 0 ? _a : 2;\n        context.moveTo(0, 0 - radius);\n        for (let i = 0; i < sides; i++) {\n            context.rotate(Math.PI / sides);\n            context.lineTo(0, 0 - radius * inset);\n            context.rotate(Math.PI / sides);\n            context.lineTo(0, 0 - radius);\n        }\n    }\n    getSidesCount(particle) {\n        var _a, _b;\n        const star = particle.shapeData;\n        return Math.round(getRangeValue((_b = (_a = star === null || star === void 0 ? void 0 : star.sides) !== null && _a !== void 0 ? _a : star === null || star === void 0 ? void 0 : star.nb_sides) !== null && _b !== void 0 ? _b : 5));\n    }\n    particleInit(container, particle) {\n        var _a;\n        const star = particle.shapeData, inset = getRangeValue((_a = star === null || star === void 0 ? void 0 : star.inset) !== null && _a !== void 0 ? _a : 2);\n        particle.starInset = inset;\n    }\n}\n","import { StrokeColorUpdater } from \"./StrokeColorUpdater\";\nexport async function loadStrokeColorUpdater(engine) {\n    await engine.addParticleUpdater(\"strokeColor\", (container) => new StrokeColorUpdater(container));\n}\n","import { getHslAnimationFromHsl, getRangeValue, itemFromSingleOrMultiple, randomInRange, rangeColorToHsl, } from \"tsparticles-engine\";\nfunction updateColorValue(delta, value, valueAnimation, max, decrease) {\n    var _a, _b;\n    const colorValue = value;\n    if (!colorValue ||\n        !colorValue.enable ||\n        (colorValue.loops !== undefined &&\n            colorValue.maxLoops !== undefined &&\n            colorValue.maxLoops > 0 &&\n            colorValue.loops >= colorValue.maxLoops)) {\n        return;\n    }\n    const offset = randomInRange(valueAnimation.offset), velocity = ((_a = value.velocity) !== null && _a !== void 0 ? _a : 0) * delta.factor + offset * 3.6, decay = (_b = value.decay) !== null && _b !== void 0 ? _b : 1;\n    if (!decrease || colorValue.status === \"increasing\") {\n        colorValue.value += velocity;\n        if (colorValue.value > max) {\n            if (!colorValue.loops) {\n                colorValue.loops = 0;\n            }\n            colorValue.loops++;\n            if (decrease) {\n                colorValue.status = \"decreasing\";\n                colorValue.value -= colorValue.value % max;\n            }\n        }\n    }\n    else {\n        colorValue.value -= velocity;\n        if (colorValue.value < 0) {\n            if (!colorValue.loops) {\n                colorValue.loops = 0;\n            }\n            colorValue.loops++;\n            colorValue.status = \"increasing\";\n            colorValue.value += colorValue.value;\n        }\n    }\n    if (colorValue.velocity && decay !== 1) {\n        colorValue.velocity *= decay;\n    }\n    if (colorValue.value > max) {\n        colorValue.value %= max;\n    }\n}\nfunction updateStrokeColor(particle, delta) {\n    if (!particle.strokeColor || !particle.strokeAnimation) {\n        return;\n    }\n    const h = particle.strokeColor.h;\n    if (h) {\n        updateColorValue(delta, h, particle.strokeAnimation.h, 360, false);\n    }\n    const s = particle.strokeColor.s;\n    if (s) {\n        updateColorValue(delta, s, particle.strokeAnimation.s, 100, true);\n    }\n    const l = particle.strokeColor.l;\n    if (l) {\n        updateColorValue(delta, l, particle.strokeAnimation.l, 100, true);\n    }\n}\nexport class StrokeColorUpdater {\n    constructor(container) {\n        this.container = container;\n    }\n    init(particle) {\n        var _a, _b, _c;\n        const container = this.container;\n        const stroke = itemFromSingleOrMultiple(particle.options.stroke, particle.id, particle.options.reduceDuplicates);\n        particle.strokeWidth = getRangeValue(stroke.width) * container.retina.pixelRatio;\n        particle.strokeOpacity = getRangeValue((_a = stroke.opacity) !== null && _a !== void 0 ? _a : 1);\n        particle.strokeAnimation = (_b = stroke.color) === null || _b === void 0 ? void 0 : _b.animation;\n        const strokeHslColor = (_c = rangeColorToHsl(stroke.color)) !== null && _c !== void 0 ? _c : particle.getFillColor();\n        if (strokeHslColor) {\n            particle.strokeColor = getHslAnimationFromHsl(strokeHslColor, particle.strokeAnimation, container.retina.reduceFactor);\n        }\n    }\n    isEnabled(particle) {\n        var _a, _b, _c;\n        const color = particle.strokeAnimation;\n        return (!particle.destroyed &&\n            !particle.spawning &&\n            !!color &&\n            ((((_a = particle.strokeColor) === null || _a === void 0 ? void 0 : _a.h.value) !== undefined && particle.strokeColor.h.enable) ||\n                (((_b = particle.strokeColor) === null || _b === void 0 ? void 0 : _b.s.value) !== undefined && particle.strokeColor.s.enable) ||\n                (((_c = particle.strokeColor) === null || _c === void 0 ? void 0 : _c.l.value) !== undefined && particle.strokeColor.l.enable)));\n    }\n    update(particle, delta) {\n        if (!this.isEnabled(particle)) {\n            return;\n        }\n        updateStrokeColor(particle, delta);\n    }\n}\n","import { TextDrawer, validTypes } from \"./TextDrawer\";\nexport async function loadTextShape(engine) {\n    await engine.addShape(validTypes, new TextDrawer());\n}\n","import { executeOnSingleOrMultiple, isInArray, itemFromSingleOrMultiple, loadFont } from \"tsparticles-engine\";\nexport const validTypes = [\"text\", \"character\", \"char\"];\nexport class TextDrawer {\n    draw(context, particle, radius, opacity) {\n        var _a, _b, _c;\n        const character = particle.shapeData;\n        if (character === undefined) {\n            return;\n        }\n        const textData = character.value;\n        if (textData === undefined) {\n            return;\n        }\n        const textParticle = particle;\n        if (textParticle.text === undefined) {\n            textParticle.text = itemFromSingleOrMultiple(textData, particle.randomIndexData);\n        }\n        const text = textParticle.text, style = (_a = character.style) !== null && _a !== void 0 ? _a : \"\", weight = (_b = character.weight) !== null && _b !== void 0 ? _b : \"400\", size = Math.round(radius) * 2, font = (_c = character.font) !== null && _c !== void 0 ? _c : \"Verdana\", fill = particle.fill, offsetX = (text.length * radius) / 2;\n        context.font = `${style} ${weight} ${size}px \"${font}\"`;\n        const pos = {\n            x: -offsetX,\n            y: radius / 2,\n        };\n        context.globalAlpha = opacity;\n        if (fill) {\n            context.fillText(text, pos.x, pos.y);\n        }\n        else {\n            context.strokeText(text, pos.x, pos.y);\n        }\n        context.globalAlpha = 1;\n    }\n    getSidesCount() {\n        return 12;\n    }\n    async init(container) {\n        const options = container.actualOptions;\n        if (validTypes.find((t) => isInArray(t, options.particles.shape.type))) {\n            const shapeOptions = validTypes\n                .map((t) => options.particles.shape.options[t])\n                .find((t) => !!t), promises = [];\n            executeOnSingleOrMultiple(shapeOptions, (shape) => {\n                promises.push(loadFont(shape.font, shape.weight));\n            });\n            await Promise.all(promises);\n        }\n    }\n}\n","import { TiltUpdater } from \"./TiltUpdater\";\nexport async function loadTiltUpdater(engine) {\n    await engine.addParticleUpdater(\"tilt\", (container) => new TiltUpdater(container));\n}\n","import { getRandom, getRangeValue } from \"tsparticles-engine\";\nimport { Tilt } from \"./Options/Classes/Tilt\";\nfunction updateTilt(particle, delta) {\n    var _a, _b;\n    if (!particle.tilt || !particle.options.tilt) {\n        return;\n    }\n    const tilt = particle.options.tilt, tiltAnimation = tilt.animation, speed = ((_a = particle.tilt.velocity) !== null && _a !== void 0 ? _a : 0) * delta.factor, max = 2 * Math.PI, decay = (_b = particle.tilt.decay) !== null && _b !== void 0 ? _b : 1;\n    if (!tiltAnimation.enable) {\n        return;\n    }\n    switch (particle.tilt.status) {\n        case \"increasing\":\n            particle.tilt.value += speed;\n            if (particle.tilt.value > max) {\n                particle.tilt.value -= max;\n            }\n            break;\n        case \"decreasing\":\n        default:\n            particle.tilt.value -= speed;\n            if (particle.tilt.value < 0) {\n                particle.tilt.value += max;\n            }\n            break;\n    }\n    if (particle.tilt.velocity && decay !== 1) {\n        particle.tilt.velocity *= decay;\n    }\n}\nexport class TiltUpdater {\n    constructor(container) {\n        this.container = container;\n    }\n    getTransformValues(particle) {\n        var _a;\n        const tilt = ((_a = particle.tilt) === null || _a === void 0 ? void 0 : _a.enable) && particle.tilt;\n        return {\n            b: tilt ? Math.cos(tilt.value) * tilt.cosDirection : undefined,\n            c: tilt ? Math.sin(tilt.value) * tilt.sinDirection : undefined,\n        };\n    }\n    init(particle) {\n        var _a;\n        const tiltOptions = particle.options.tilt;\n        if (!tiltOptions) {\n            return;\n        }\n        particle.tilt = {\n            enable: tiltOptions.enable,\n            value: (getRangeValue(tiltOptions.value) * Math.PI) / 180,\n            sinDirection: getRandom() >= 0.5 ? 1 : -1,\n            cosDirection: getRandom() >= 0.5 ? 1 : -1,\n        };\n        let tiltDirection = tiltOptions.direction;\n        if (tiltDirection === \"random\") {\n            const index = Math.floor(getRandom() * 2);\n            tiltDirection = index > 0 ? \"counter-clockwise\" : \"clockwise\";\n        }\n        switch (tiltDirection) {\n            case \"counter-clockwise\":\n            case \"counterClockwise\":\n                particle.tilt.status = \"decreasing\";\n                break;\n            case \"clockwise\":\n                particle.tilt.status = \"increasing\";\n                break;\n        }\n        const tiltAnimation = (_a = particle.options.tilt) === null || _a === void 0 ? void 0 : _a.animation;\n        if (tiltAnimation === null || tiltAnimation === void 0 ? void 0 : tiltAnimation.enable) {\n            particle.tilt.decay = 1 - getRangeValue(tiltAnimation.decay);\n            particle.tilt.velocity = (getRangeValue(tiltAnimation.speed) / 360) * this.container.retina.reduceFactor;\n            if (!tiltAnimation.sync) {\n                particle.tilt.velocity *= getRandom();\n            }\n        }\n    }\n    isEnabled(particle) {\n        var _a;\n        const tiltAnimation = (_a = particle.options.tilt) === null || _a === void 0 ? void 0 : _a.animation;\n        return !particle.destroyed && !particle.spawning && !!(tiltAnimation === null || tiltAnimation === void 0 ? void 0 : tiltAnimation.enable);\n    }\n    loadOptions(options, ...sources) {\n        if (!options.tilt) {\n            options.tilt = new Tilt();\n        }\n        for (const source of sources) {\n            options.tilt.load(source === null || source === void 0 ? void 0 : source.tilt);\n        }\n    }\n    update(particle, delta) {\n        if (!this.isEnabled(particle)) {\n            return;\n        }\n        updateTilt(particle, delta);\n    }\n}\n","import { TiltAnimation } from \"./TiltAnimation\";\nimport { ValueWithRandom } from \"tsparticles-engine\";\nexport class Tilt extends ValueWithRandom {\n    constructor() {\n        super();\n        this.animation = new TiltAnimation();\n        this.direction = \"clockwise\";\n        this.enable = false;\n        this.value = 0;\n    }\n    load(data) {\n        super.load(data);\n        if (!data) {\n            return;\n        }\n        this.animation.load(data.animation);\n        if (data.direction !== undefined) {\n            this.direction = data.direction;\n        }\n        if (data.enable !== undefined) {\n            this.enable = data.enable;\n        }\n    }\n}\n","import { setRangeValue } from \"tsparticles-engine\";\nexport class TiltAnimation {\n    constructor() {\n        this.enable = false;\n        this.speed = 0;\n        this.decay = 0;\n        this.sync = false;\n    }\n    load(data) {\n        if (!data) {\n            return;\n        }\n        if (data.enable !== undefined) {\n            this.enable = data.enable;\n        }\n        if (data.speed !== undefined) {\n            this.speed = setRangeValue(data.speed);\n        }\n        if (data.decay !== undefined) {\n            this.decay = setRangeValue(data.decay);\n        }\n        if (data.sync !== undefined) {\n            this.sync = data.sync;\n        }\n    }\n}\n","import { TwinkleUpdater } from \"./TwinkleUpdater\";\nexport async function loadTwinkleUpdater(engine) {\n    await engine.addParticleUpdater(\"twinkle\", () => new TwinkleUpdater());\n}\n","import { getRandom, getRangeValue, getStyleFromHsl, rangeColorToHsl } from \"tsparticles-engine\";\nimport { Twinkle } from \"./Options/Classes/Twinkle\";\nexport class TwinkleUpdater {\n    getColorStyles(particle, context, radius, opacity) {\n        const pOptions = particle.options, twinkleOptions = pOptions.twinkle;\n        if (!twinkleOptions) {\n            return {};\n        }\n        const twinkle = twinkleOptions.particles, twinkling = twinkle.enable && getRandom() < twinkle.frequency, zIndexOptions = particle.options.zIndex, zOpacityFactor = (1 - particle.zIndexFactor) ** zIndexOptions.opacityRate, twinklingOpacity = twinkling ? getRangeValue(twinkle.opacity) * zOpacityFactor : opacity, twinkleRgb = rangeColorToHsl(twinkle.color), twinkleStyle = twinkleRgb ? getStyleFromHsl(twinkleRgb, twinklingOpacity) : undefined, res = {}, needsTwinkle = twinkling && twinkleStyle;\n        res.fill = needsTwinkle ? twinkleStyle : undefined;\n        res.stroke = needsTwinkle ? twinkleStyle : undefined;\n        return res;\n    }\n    init() {\n    }\n    isEnabled(particle) {\n        const pOptions = particle.options, twinkleOptions = pOptions.twinkle;\n        if (!twinkleOptions) {\n            return false;\n        }\n        return twinkleOptions.particles.enable;\n    }\n    loadOptions(options, ...sources) {\n        if (!options.twinkle) {\n            options.twinkle = new Twinkle();\n        }\n        for (const source of sources) {\n            options.twinkle.load(source === null || source === void 0 ? void 0 : source.twinkle);\n        }\n    }\n    update() {\n    }\n}\n","import { TwinkleValues } from \"./TwinkleValues\";\nexport class Twinkle {\n    constructor() {\n        this.lines = new TwinkleValues();\n        this.particles = new TwinkleValues();\n    }\n    load(data) {\n        if (!data) {\n            return;\n        }\n        this.lines.load(data.lines);\n        this.particles.load(data.particles);\n    }\n}\n","import { OptionsColor, setRangeValue } from \"tsparticles-engine\";\nexport class TwinkleValues {\n    constructor() {\n        this.enable = false;\n        this.frequency = 0.05;\n        this.opacity = 1;\n    }\n    load(data) {\n        if (!data) {\n            return;\n        }\n        if (data.color !== undefined) {\n            this.color = OptionsColor.create(this.color, data.color);\n        }\n        if (data.enable !== undefined) {\n            this.enable = data.enable;\n        }\n        if (data.frequency !== undefined) {\n            this.frequency = data.frequency;\n        }\n        if (data.opacity !== undefined) {\n            this.opacity = setRangeValue(data.opacity);\n        }\n    }\n}\n","import { WobbleUpdater } from \"./WobbleUpdater\";\nexport async function loadWobbleUpdater(engine) {\n    await engine.addParticleUpdater(\"wobble\", (container) => new WobbleUpdater(container));\n}\n","import { getRandom, getRangeValue } from \"tsparticles-engine\";\nimport { Wobble } from \"./Options/Classes/Wobble\";\nfunction updateWobble(particle, delta) {\n    var _a;\n    const wobble = particle.options.wobble;\n    if (!(wobble === null || wobble === void 0 ? void 0 : wobble.enable) || !particle.wobble) {\n        return;\n    }\n    const angleSpeed = particle.wobble.angleSpeed * delta.factor, moveSpeed = particle.wobble.moveSpeed * delta.factor, distance = (moveSpeed * (((_a = particle.retina.wobbleDistance) !== null && _a !== void 0 ? _a : 0) * delta.factor)) / (1000 / 60), max = 2 * Math.PI;\n    particle.wobble.angle += angleSpeed;\n    if (particle.wobble.angle > max) {\n        particle.wobble.angle -= max;\n    }\n    particle.position.x += distance * Math.cos(particle.wobble.angle);\n    particle.position.y += distance * Math.abs(Math.sin(particle.wobble.angle));\n}\nexport class WobbleUpdater {\n    constructor(container) {\n        this.container = container;\n    }\n    init(particle) {\n        var _a;\n        const wobbleOpt = particle.options.wobble;\n        if (wobbleOpt === null || wobbleOpt === void 0 ? void 0 : wobbleOpt.enable) {\n            particle.wobble = {\n                angle: getRandom() * Math.PI * 2,\n                angleSpeed: getRangeValue(wobbleOpt.speed.angle) / 360,\n                moveSpeed: getRangeValue(wobbleOpt.speed.move) / 10,\n            };\n        }\n        else {\n            particle.wobble = {\n                angle: 0,\n                angleSpeed: 0,\n                moveSpeed: 0,\n            };\n        }\n        particle.retina.wobbleDistance = getRangeValue((_a = wobbleOpt === null || wobbleOpt === void 0 ? void 0 : wobbleOpt.distance) !== null && _a !== void 0 ? _a : 0) * this.container.retina.pixelRatio;\n    }\n    isEnabled(particle) {\n        var _a;\n        return !particle.destroyed && !particle.spawning && !!((_a = particle.options.wobble) === null || _a === void 0 ? void 0 : _a.enable);\n    }\n    loadOptions(options, ...sources) {\n        if (!options.wobble) {\n            options.wobble = new Wobble();\n        }\n        for (const source of sources) {\n            options.wobble.load(source === null || source === void 0 ? void 0 : source.wobble);\n        }\n    }\n    update(particle, delta) {\n        if (!this.isEnabled(particle)) {\n            return;\n        }\n        updateWobble(particle, delta);\n    }\n}\n","import { WobbleSpeed } from \"./WobbleSpeed\";\nimport { setRangeValue } from \"tsparticles-engine\";\nexport class Wobble {\n    constructor() {\n        this.distance = 5;\n        this.enable = false;\n        this.speed = new WobbleSpeed();\n    }\n    load(data) {\n        if (!data) {\n            return;\n        }\n        if (data.distance !== undefined) {\n            this.distance = setRangeValue(data.distance);\n        }\n        if (data.enable !== undefined) {\n            this.enable = data.enable;\n        }\n        if (data.speed !== undefined) {\n            if (typeof data.speed === \"number\") {\n                this.speed.load({ angle: data.speed });\n            }\n            else {\n                const rangeSpeed = data.speed;\n                if (rangeSpeed.min !== undefined) {\n                    this.speed.load({ angle: rangeSpeed });\n                }\n                else {\n                    this.speed.load(data.speed);\n                }\n            }\n        }\n    }\n}\n","import { setRangeValue } from \"tsparticles-engine\";\nexport class WobbleSpeed {\n    constructor() {\n        this.angle = 50;\n        this.move = 10;\n    }\n    load(data) {\n        if (!data) {\n            return;\n        }\n        if (data.angle !== undefined) {\n            this.angle = setRangeValue(data.angle);\n        }\n        if (data.move !== undefined) {\n            this.move = setRangeValue(data.move);\n        }\n    }\n}\n"],"names":[],"version":3,"file":"index.739bf03c.js.map","sourceRoot":"/__parcel_source_root/"}